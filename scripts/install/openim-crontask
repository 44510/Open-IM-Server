#!/usr/bin/env bash

# Copyright © 2023 OpenIM. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -o errexit
set +o nounset
set -o pipefail

OPENIM_ROOT=$(cd "$(dirname "${BASH_SOURCE[0]}")"/../.. && pwd -P)
[[ -z ${COMMON_SOURCED} ]] && source ${OPENIM_ROOT}/scripts/install/common.sh

SERVER_NAME="openim-crontask"

openim::log::status "Start OpenIM Cron, binary root: ${SERVER_NAME}"
openim::log::info "Start OpenIM Cron, path: ${OPENIM_CRONTASK_BINARY}"

# openim::util::stop_services_with_name ${SERVER_NAME}

# sleep 1

# openim::log::status "start cron_task process, path: ${OPENIM_CRONTASK_BINARY}"
# nohup ${OPENIM_CRONTASK_BINARY} >>${LOG_FILE} 2>&1 &
# openim::util::check_process_names ${SERVER_NAME}

# # Print the necessary information after installation
# function openim::crontask::info() {
# cat << EOF
# openim-crontask listen on: ${OPENIM_CRONTASK_HOST}
# EOF
# }

# install openim-crontask
function openim::crontask::install()
{
  pushd ${OPENIM_ROOT}

  # 1. Build openim-crontask
  make build BINS=${SERVER_NAME}
  openim::common::sudo "cp ${OPENIM_OUTPUT_HOSTBIN}/${SERVER_NAME} ${OPENIM_INSTALL_DIR}/bin"

  # 2. Generate and install the openim-crontask configuration file (openim-crontask.yaml)
  echo ${LINUX_PASSWORD} | sudo -S bash -c \
    "./scripts/genconfig.sh ${ENV_FILE} deployments/templates/openim-crontask.yaml > ${OPENIM_CONFIG_DIR}/openim-crontask.yaml"

  # 3. Create and install the openim-crontask systemd unit file
  echo ${LINUX_PASSWORD} | sudo -S bash -c \
    "./scripts/genconfig.sh ${ENV_FILE} deployments/templates/init/openim-crontask.service > /etc/systemd/system/openim-crontask.service"

  # 4. Start the openim-crontask service
  openim::common::sudo "systemctl daemon-reload"
  openim::common::sudo "systemctl restart openim-crontask"
  openim::common::sudo "systemctl enable openim-crontask"
  openim::crontask::status || return 1
  openim::crontask::info

  openim::log::info "install openim-crontask successfully"
  popd
}

# Unload
function openim::crontask::uninstall()
{
  set +o errexit
  openim::common::sudo "systemctl stop openim-crontask"
  openim::common::sudo "systemctl disable openim-crontask"
  openim::common::sudo "rm -f ${OPENIM_INSTALL_DIR}/bin/openim-crontask"
  openim::common::sudo "rm -f ${OPENIM_CONFIG_DIR}/openim-crontask.yaml"
  openim::common::sudo "rm -f /etc/systemd/system/openim-crontask.service"
  set -o errexit
  openim::log::info "uninstall openim-crontask successfully"
}

# Status Check
function openim::crontask::status()
{
  # 查看 openim-crontask 运行状态，如果输出中包含 active (running) 字样说明 openim-crontask 成功启动。
  systemctl status openim-crontask|grep -q 'active' || {
    openim::log::error "openim-crontask failed to start, maybe not installed properly"
    return 1
  }

  # 监听端口在配置文件中是 hardcode
  if echo | telnet 127.0.0.1 7070 2>&1|grep refused &>/dev/null;then
    openim::log::error "cannot access health check port, openim-crontask maybe not startup"
    return 1
  fi
}

if [[ "$*" =~ openim::crontask:: ]];then
  eval $*
fi
