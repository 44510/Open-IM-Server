syntax = "proto3";
import "Open-IM-Server/pkg/proto/sdk_ws/ws.proto";
option go_package = "Open_IM/pkg/proto/friend;friend";
package friend;

message GetFriendsInfoReq{
  string ToUserID = 1;
  string FromUserID = 2;
}
message GetFriendInfoResp{
  repeated server_api_params.FriendInfo FriendInfoList = 1;
}


message AddFriendReq{
  string ToUserID = 1;
  string FromUserID = 2;
  string ReqMsg = 3;
}
message AddFriendResp{
  server_api_params.CommonResp commonResp = 1;
}


message ImportFriendReq{
  repeated string FriendUserIDList = 1;
  string FromUserID = 2;
}

message ImportFriendResp{
}


message GetFriendApplyListReq{
  string ToUserID = 1;
  string FromUserID = 2;
}
message GetFriendApplyListResp{
  repeated server_api_params.FriendRequest FriendRequestList = 1;
}


message GetFriendListReq{
  string ToUserID = 1;
  string FromUserID = 2;
}
message GetFriendListResp{
  repeated server_api_params.FriendInfo FriendInfoList = 1;
}


message AddBlacklistReq{
  string ToUserID = 1;
  string FromUserID = 2;
}
message AddBlacklistResp{

}


message RemoveBlacklistReq{
  string ToUserID = 1;
  string FromUserID = 2;
}
message RemoveBlacklistResp{

}

message GetBlacklistReq{
  string FromUserID = 1;
}
message GetBlacklistResp{
  repeated server_api_params.PublicUserInfo BlackUserInfoList = 1;
}


message IsFriendReq{
  string ToUserID = 1;
  string FromUserID = 2;
}
message IsFriendResp{
  bool    Response = 1;
}


message IsInBlackListReq{
  string ToUserID = 1;
  string FromUserID = 2;
}
message IsInBlackListResp{
  bool    Response = 1;
}


message DeleteFriendReq{
  string ToUserID = 1;
  string FromUserID = 2;
}
message DeleteFriendResp{

}

//process
message AddFriendResponseReq{
  string ToUserID = 1;
  string FromUserID = 2;
  int32  handleResult = 3;
  string handleMsg = 4;
}
message AddFriendResponseResp{

}

message SetFriendRemarkReq{
  string ToUserID = 1;
  string FromUserID = 2;
  string Remark = 3;
}
message SetFriendRemarkResp{

}

message GetSelfApplyListReq{
  string ToUserID = 1;
  string FromUserID = 2;
}
message GetSelfApplyListResp{
  repeated server_api_params.FriendRequest FriendRequestList = 1;
}

service friend{
  rpc addFriend(AddFriendReq) returns(AddFriendResp);
  rpc getFriendApplyList(GetFriendApplyListReq) returns(GetFriendApplyListResp);
  rpc getSelfApplyList(GetSelfApplyListReq) returns(GetSelfApplyListResp);
  rpc getFriendList(GetFriendListReq) returns(GetFriendListResp);
  rpc addBlacklist(AddBlacklistReq) returns(AddBlacklistResp);
  rpc removeBlacklist(RemoveBlacklistReq) returns(RemoveBlacklistResp);
  rpc isFriend(IsFriendReq) returns(IsFriendResp);
  rpc isInBlackList(IsInBlackListReq) returns(IsInBlackListResp);
  rpc getBlacklist(GetBlacklistReq) returns(GetBlacklistResp);
  rpc deleteFriend(DeleteFriendReq) returns(DeleteFriendResp);
  rpc addFriendResponse(AddFriendResponseReq) returns(AddFriendResponseResp);
  rpc setFriendRemark(SetFriendRemarkReq) returns(SetFriendRemarkResp);
  rpc importFriend(ImportFriendReq)  returns(ImportFriendResp);
}