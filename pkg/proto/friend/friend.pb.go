// Code generated by protoc-gen-go. DO NOT EDIT.
// source: friend/friend.proto

package friend // import "Open_IM/pkg/proto/friend"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import sdk_ws "Open_IM/pkg/proto/sdk_ws"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetFriendsInfoReq struct {
	OwnerUserID          string   `protobuf:"bytes,1,opt,name=ownerUserID" json:"ownerUserID,omitempty"`
	FriendUserIDs        []string `protobuf:"bytes,2,rep,name=friendUserIDs" json:"friendUserIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFriendsInfoReq) Reset()         { *m = GetFriendsInfoReq{} }
func (m *GetFriendsInfoReq) String() string { return proto.CompactTextString(m) }
func (*GetFriendsInfoReq) ProtoMessage()    {}
func (*GetFriendsInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{0}
}
func (m *GetFriendsInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFriendsInfoReq.Unmarshal(m, b)
}
func (m *GetFriendsInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFriendsInfoReq.Marshal(b, m, deterministic)
}
func (dst *GetFriendsInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFriendsInfoReq.Merge(dst, src)
}
func (m *GetFriendsInfoReq) XXX_Size() int {
	return xxx_messageInfo_GetFriendsInfoReq.Size(m)
}
func (m *GetFriendsInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFriendsInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetFriendsInfoReq proto.InternalMessageInfo

func (m *GetFriendsInfoReq) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *GetFriendsInfoReq) GetFriendUserIDs() []string {
	if m != nil {
		return m.FriendUserIDs
	}
	return nil
}

type GetFriendsInfoResp struct {
	FriendInfoList       []*sdk_ws.FriendInfo `protobuf:"bytes,1,rep,name=FriendInfoList" json:"FriendInfoList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetFriendsInfoResp) Reset()         { *m = GetFriendsInfoResp{} }
func (m *GetFriendsInfoResp) String() string { return proto.CompactTextString(m) }
func (*GetFriendsInfoResp) ProtoMessage()    {}
func (*GetFriendsInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{1}
}
func (m *GetFriendsInfoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFriendsInfoResp.Unmarshal(m, b)
}
func (m *GetFriendsInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFriendsInfoResp.Marshal(b, m, deterministic)
}
func (dst *GetFriendsInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFriendsInfoResp.Merge(dst, src)
}
func (m *GetFriendsInfoResp) XXX_Size() int {
	return xxx_messageInfo_GetFriendsInfoResp.Size(m)
}
func (m *GetFriendsInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFriendsInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetFriendsInfoResp proto.InternalMessageInfo

func (m *GetFriendsInfoResp) GetFriendInfoList() []*sdk_ws.FriendInfo {
	if m != nil {
		return m.FriendInfoList
	}
	return nil
}

type AddFriendReq struct {
	FromUserID           string   `protobuf:"bytes,1,opt,name=fromUserID" json:"fromUserID,omitempty"`
	ToUserID             string   `protobuf:"bytes,2,opt,name=toUserID" json:"toUserID,omitempty"`
	ReqMsg               string   `protobuf:"bytes,3,opt,name=reqMsg" json:"reqMsg,omitempty"`
	Ex                   string   `protobuf:"bytes,4,opt,name=ex" json:"ex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFriendReq) Reset()         { *m = AddFriendReq{} }
func (m *AddFriendReq) String() string { return proto.CompactTextString(m) }
func (*AddFriendReq) ProtoMessage()    {}
func (*AddFriendReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{2}
}
func (m *AddFriendReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFriendReq.Unmarshal(m, b)
}
func (m *AddFriendReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFriendReq.Marshal(b, m, deterministic)
}
func (dst *AddFriendReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFriendReq.Merge(dst, src)
}
func (m *AddFriendReq) XXX_Size() int {
	return xxx_messageInfo_AddFriendReq.Size(m)
}
func (m *AddFriendReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFriendReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddFriendReq proto.InternalMessageInfo

func (m *AddFriendReq) GetFromUserID() string {
	if m != nil {
		return m.FromUserID
	}
	return ""
}

func (m *AddFriendReq) GetToUserID() string {
	if m != nil {
		return m.ToUserID
	}
	return ""
}

func (m *AddFriendReq) GetReqMsg() string {
	if m != nil {
		return m.ReqMsg
	}
	return ""
}

func (m *AddFriendReq) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

type AddFriendResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFriendResp) Reset()         { *m = AddFriendResp{} }
func (m *AddFriendResp) String() string { return proto.CompactTextString(m) }
func (*AddFriendResp) ProtoMessage()    {}
func (*AddFriendResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{3}
}
func (m *AddFriendResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFriendResp.Unmarshal(m, b)
}
func (m *AddFriendResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFriendResp.Marshal(b, m, deterministic)
}
func (dst *AddFriendResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFriendResp.Merge(dst, src)
}
func (m *AddFriendResp) XXX_Size() int {
	return xxx_messageInfo_AddFriendResp.Size(m)
}
func (m *AddFriendResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFriendResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddFriendResp proto.InternalMessageInfo

type ImportFriendReq struct {
	OwnerUserID          string   `protobuf:"bytes,1,opt,name=ownerUserID" json:"ownerUserID,omitempty"`
	FriendUserIDs        []string `protobuf:"bytes,2,rep,name=friendUserIDs" json:"friendUserIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportFriendReq) Reset()         { *m = ImportFriendReq{} }
func (m *ImportFriendReq) String() string { return proto.CompactTextString(m) }
func (*ImportFriendReq) ProtoMessage()    {}
func (*ImportFriendReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{4}
}
func (m *ImportFriendReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportFriendReq.Unmarshal(m, b)
}
func (m *ImportFriendReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportFriendReq.Marshal(b, m, deterministic)
}
func (dst *ImportFriendReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportFriendReq.Merge(dst, src)
}
func (m *ImportFriendReq) XXX_Size() int {
	return xxx_messageInfo_ImportFriendReq.Size(m)
}
func (m *ImportFriendReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportFriendReq.DiscardUnknown(m)
}

var xxx_messageInfo_ImportFriendReq proto.InternalMessageInfo

func (m *ImportFriendReq) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *ImportFriendReq) GetFriendUserIDs() []string {
	if m != nil {
		return m.FriendUserIDs
	}
	return nil
}

type ImportFriendResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportFriendResp) Reset()         { *m = ImportFriendResp{} }
func (m *ImportFriendResp) String() string { return proto.CompactTextString(m) }
func (*ImportFriendResp) ProtoMessage()    {}
func (*ImportFriendResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{5}
}
func (m *ImportFriendResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportFriendResp.Unmarshal(m, b)
}
func (m *ImportFriendResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportFriendResp.Marshal(b, m, deterministic)
}
func (dst *ImportFriendResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportFriendResp.Merge(dst, src)
}
func (m *ImportFriendResp) XXX_Size() int {
	return xxx_messageInfo_ImportFriendResp.Size(m)
}
func (m *ImportFriendResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportFriendResp.DiscardUnknown(m)
}

var xxx_messageInfo_ImportFriendResp proto.InternalMessageInfo

type GetToFriendsApplyReq struct {
	UserID               string                    `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	Pagination           *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=pagination" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetToFriendsApplyReq) Reset()         { *m = GetToFriendsApplyReq{} }
func (m *GetToFriendsApplyReq) String() string { return proto.CompactTextString(m) }
func (*GetToFriendsApplyReq) ProtoMessage()    {}
func (*GetToFriendsApplyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{6}
}
func (m *GetToFriendsApplyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetToFriendsApplyReq.Unmarshal(m, b)
}
func (m *GetToFriendsApplyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetToFriendsApplyReq.Marshal(b, m, deterministic)
}
func (dst *GetToFriendsApplyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetToFriendsApplyReq.Merge(dst, src)
}
func (m *GetToFriendsApplyReq) XXX_Size() int {
	return xxx_messageInfo_GetToFriendsApplyReq.Size(m)
}
func (m *GetToFriendsApplyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetToFriendsApplyReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetToFriendsApplyReq proto.InternalMessageInfo

func (m *GetToFriendsApplyReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetToFriendsApplyReq) GetPagination() *sdk_ws.RequestPagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type GetToFriendsApplyResp struct {
	FriendRequests       []*sdk_ws.FriendRequest `protobuf:"bytes,1,rep,name=FriendRequests" json:"FriendRequests,omitempty"`
	Total                int32                   `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetToFriendsApplyResp) Reset()         { *m = GetToFriendsApplyResp{} }
func (m *GetToFriendsApplyResp) String() string { return proto.CompactTextString(m) }
func (*GetToFriendsApplyResp) ProtoMessage()    {}
func (*GetToFriendsApplyResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{7}
}
func (m *GetToFriendsApplyResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetToFriendsApplyResp.Unmarshal(m, b)
}
func (m *GetToFriendsApplyResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetToFriendsApplyResp.Marshal(b, m, deterministic)
}
func (dst *GetToFriendsApplyResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetToFriendsApplyResp.Merge(dst, src)
}
func (m *GetToFriendsApplyResp) XXX_Size() int {
	return xxx_messageInfo_GetToFriendsApplyResp.Size(m)
}
func (m *GetToFriendsApplyResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetToFriendsApplyResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetToFriendsApplyResp proto.InternalMessageInfo

func (m *GetToFriendsApplyResp) GetFriendRequests() []*sdk_ws.FriendRequest {
	if m != nil {
		return m.FriendRequests
	}
	return nil
}

func (m *GetToFriendsApplyResp) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type GetFriendsReq struct {
	Pagination           *sdk_ws.RequestPagination `protobuf:"bytes,1,opt,name=pagination" json:"pagination,omitempty"`
	UserID               string                    `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetFriendsReq) Reset()         { *m = GetFriendsReq{} }
func (m *GetFriendsReq) String() string { return proto.CompactTextString(m) }
func (*GetFriendsReq) ProtoMessage()    {}
func (*GetFriendsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{8}
}
func (m *GetFriendsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFriendsReq.Unmarshal(m, b)
}
func (m *GetFriendsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFriendsReq.Marshal(b, m, deterministic)
}
func (dst *GetFriendsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFriendsReq.Merge(dst, src)
}
func (m *GetFriendsReq) XXX_Size() int {
	return xxx_messageInfo_GetFriendsReq.Size(m)
}
func (m *GetFriendsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFriendsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetFriendsReq proto.InternalMessageInfo

func (m *GetFriendsReq) GetPagination() *sdk_ws.RequestPagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *GetFriendsReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

type GetFriendsResp struct {
	FriendsInfo          []*sdk_ws.FriendInfo `protobuf:"bytes,1,rep,name=FriendsInfo" json:"FriendsInfo,omitempty"`
	Total                int32                `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetFriendsResp) Reset()         { *m = GetFriendsResp{} }
func (m *GetFriendsResp) String() string { return proto.CompactTextString(m) }
func (*GetFriendsResp) ProtoMessage()    {}
func (*GetFriendsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{9}
}
func (m *GetFriendsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFriendsResp.Unmarshal(m, b)
}
func (m *GetFriendsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFriendsResp.Marshal(b, m, deterministic)
}
func (dst *GetFriendsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFriendsResp.Merge(dst, src)
}
func (m *GetFriendsResp) XXX_Size() int {
	return xxx_messageInfo_GetFriendsResp.Size(m)
}
func (m *GetFriendsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFriendsResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetFriendsResp proto.InternalMessageInfo

func (m *GetFriendsResp) GetFriendsInfo() []*sdk_ws.FriendInfo {
	if m != nil {
		return m.FriendsInfo
	}
	return nil
}

func (m *GetFriendsResp) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type AddBlackReq struct {
	OwnerUserID          string   `protobuf:"bytes,1,opt,name=ownerUserID" json:"ownerUserID,omitempty"`
	BlackUserID          string   `protobuf:"bytes,2,opt,name=blackUserID" json:"blackUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddBlackReq) Reset()         { *m = AddBlackReq{} }
func (m *AddBlackReq) String() string { return proto.CompactTextString(m) }
func (*AddBlackReq) ProtoMessage()    {}
func (*AddBlackReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{10}
}
func (m *AddBlackReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBlackReq.Unmarshal(m, b)
}
func (m *AddBlackReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBlackReq.Marshal(b, m, deterministic)
}
func (dst *AddBlackReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBlackReq.Merge(dst, src)
}
func (m *AddBlackReq) XXX_Size() int {
	return xxx_messageInfo_AddBlackReq.Size(m)
}
func (m *AddBlackReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBlackReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddBlackReq proto.InternalMessageInfo

func (m *AddBlackReq) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *AddBlackReq) GetBlackUserID() string {
	if m != nil {
		return m.BlackUserID
	}
	return ""
}

type AddBlackResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddBlackResp) Reset()         { *m = AddBlackResp{} }
func (m *AddBlackResp) String() string { return proto.CompactTextString(m) }
func (*AddBlackResp) ProtoMessage()    {}
func (*AddBlackResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{11}
}
func (m *AddBlackResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBlackResp.Unmarshal(m, b)
}
func (m *AddBlackResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBlackResp.Marshal(b, m, deterministic)
}
func (dst *AddBlackResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBlackResp.Merge(dst, src)
}
func (m *AddBlackResp) XXX_Size() int {
	return xxx_messageInfo_AddBlackResp.Size(m)
}
func (m *AddBlackResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBlackResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddBlackResp proto.InternalMessageInfo

type RemoveBlackReq struct {
	OwnerUserID          string   `protobuf:"bytes,1,opt,name=ownerUserID" json:"ownerUserID,omitempty"`
	BlackUserID          string   `protobuf:"bytes,2,opt,name=blackUserID" json:"blackUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveBlackReq) Reset()         { *m = RemoveBlackReq{} }
func (m *RemoveBlackReq) String() string { return proto.CompactTextString(m) }
func (*RemoveBlackReq) ProtoMessage()    {}
func (*RemoveBlackReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{12}
}
func (m *RemoveBlackReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveBlackReq.Unmarshal(m, b)
}
func (m *RemoveBlackReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveBlackReq.Marshal(b, m, deterministic)
}
func (dst *RemoveBlackReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveBlackReq.Merge(dst, src)
}
func (m *RemoveBlackReq) XXX_Size() int {
	return xxx_messageInfo_RemoveBlackReq.Size(m)
}
func (m *RemoveBlackReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveBlackReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveBlackReq proto.InternalMessageInfo

func (m *RemoveBlackReq) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *RemoveBlackReq) GetBlackUserID() string {
	if m != nil {
		return m.BlackUserID
	}
	return ""
}

type RemoveBlackReqResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveBlackReqResp) Reset()         { *m = RemoveBlackReqResp{} }
func (m *RemoveBlackReqResp) String() string { return proto.CompactTextString(m) }
func (*RemoveBlackReqResp) ProtoMessage()    {}
func (*RemoveBlackReqResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{13}
}
func (m *RemoveBlackReqResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveBlackReqResp.Unmarshal(m, b)
}
func (m *RemoveBlackReqResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveBlackReqResp.Marshal(b, m, deterministic)
}
func (dst *RemoveBlackReqResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveBlackReqResp.Merge(dst, src)
}
func (m *RemoveBlackReqResp) XXX_Size() int {
	return xxx_messageInfo_RemoveBlackReqResp.Size(m)
}
func (m *RemoveBlackReqResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveBlackReqResp.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveBlackReqResp proto.InternalMessageInfo

type GetBlacksReq struct {
	UserID               string                    `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	Pagination           *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=pagination" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetBlacksReq) Reset()         { *m = GetBlacksReq{} }
func (m *GetBlacksReq) String() string { return proto.CompactTextString(m) }
func (*GetBlacksReq) ProtoMessage()    {}
func (*GetBlacksReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{14}
}
func (m *GetBlacksReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlacksReq.Unmarshal(m, b)
}
func (m *GetBlacksReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlacksReq.Marshal(b, m, deterministic)
}
func (dst *GetBlacksReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlacksReq.Merge(dst, src)
}
func (m *GetBlacksReq) XXX_Size() int {
	return xxx_messageInfo_GetBlacksReq.Size(m)
}
func (m *GetBlacksReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlacksReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlacksReq proto.InternalMessageInfo

func (m *GetBlacksReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetBlacksReq) GetPagination() *sdk_ws.RequestPagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type GetBlacksResp struct {
	BlackUserInfoList    []*sdk_ws.PublicUserInfo `protobuf:"bytes,1,rep,name=BlackUserInfoList" json:"BlackUserInfoList,omitempty"`
	Total                int32                    `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetBlacksResp) Reset()         { *m = GetBlacksResp{} }
func (m *GetBlacksResp) String() string { return proto.CompactTextString(m) }
func (*GetBlacksResp) ProtoMessage()    {}
func (*GetBlacksResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{15}
}
func (m *GetBlacksResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlacksResp.Unmarshal(m, b)
}
func (m *GetBlacksResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlacksResp.Marshal(b, m, deterministic)
}
func (dst *GetBlacksResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlacksResp.Merge(dst, src)
}
func (m *GetBlacksResp) XXX_Size() int {
	return xxx_messageInfo_GetBlacksResp.Size(m)
}
func (m *GetBlacksResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlacksResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlacksResp proto.InternalMessageInfo

func (m *GetBlacksResp) GetBlackUserInfoList() []*sdk_ws.PublicUserInfo {
	if m != nil {
		return m.BlackUserInfoList
	}
	return nil
}

func (m *GetBlacksResp) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type IsFriendReq struct {
	OwnerUserID          string   `protobuf:"bytes,1,opt,name=ownerUserID" json:"ownerUserID,omitempty"`
	FriendUserID         string   `protobuf:"bytes,2,opt,name=friendUserID" json:"friendUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsFriendReq) Reset()         { *m = IsFriendReq{} }
func (m *IsFriendReq) String() string { return proto.CompactTextString(m) }
func (*IsFriendReq) ProtoMessage()    {}
func (*IsFriendReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{16}
}
func (m *IsFriendReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsFriendReq.Unmarshal(m, b)
}
func (m *IsFriendReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsFriendReq.Marshal(b, m, deterministic)
}
func (dst *IsFriendReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsFriendReq.Merge(dst, src)
}
func (m *IsFriendReq) XXX_Size() int {
	return xxx_messageInfo_IsFriendReq.Size(m)
}
func (m *IsFriendReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IsFriendReq.DiscardUnknown(m)
}

var xxx_messageInfo_IsFriendReq proto.InternalMessageInfo

func (m *IsFriendReq) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *IsFriendReq) GetFriendUserID() string {
	if m != nil {
		return m.FriendUserID
	}
	return ""
}

type IsFriendResp struct {
	Response             bool     `protobuf:"varint,1,opt,name=response" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsFriendResp) Reset()         { *m = IsFriendResp{} }
func (m *IsFriendResp) String() string { return proto.CompactTextString(m) }
func (*IsFriendResp) ProtoMessage()    {}
func (*IsFriendResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{17}
}
func (m *IsFriendResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsFriendResp.Unmarshal(m, b)
}
func (m *IsFriendResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsFriendResp.Marshal(b, m, deterministic)
}
func (dst *IsFriendResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsFriendResp.Merge(dst, src)
}
func (m *IsFriendResp) XXX_Size() int {
	return xxx_messageInfo_IsFriendResp.Size(m)
}
func (m *IsFriendResp) XXX_DiscardUnknown() {
	xxx_messageInfo_IsFriendResp.DiscardUnknown(m)
}

var xxx_messageInfo_IsFriendResp proto.InternalMessageInfo

func (m *IsFriendResp) GetResponse() bool {
	if m != nil {
		return m.Response
	}
	return false
}

type IsBlackReq struct {
	OwnerUserID          string   `protobuf:"bytes,1,opt,name=ownerUserID" json:"ownerUserID,omitempty"`
	BlackUserID          string   `protobuf:"bytes,2,opt,name=blackUserID" json:"blackUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsBlackReq) Reset()         { *m = IsBlackReq{} }
func (m *IsBlackReq) String() string { return proto.CompactTextString(m) }
func (*IsBlackReq) ProtoMessage()    {}
func (*IsBlackReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{18}
}
func (m *IsBlackReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsBlackReq.Unmarshal(m, b)
}
func (m *IsBlackReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsBlackReq.Marshal(b, m, deterministic)
}
func (dst *IsBlackReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsBlackReq.Merge(dst, src)
}
func (m *IsBlackReq) XXX_Size() int {
	return xxx_messageInfo_IsBlackReq.Size(m)
}
func (m *IsBlackReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IsBlackReq.DiscardUnknown(m)
}

var xxx_messageInfo_IsBlackReq proto.InternalMessageInfo

func (m *IsBlackReq) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *IsBlackReq) GetBlackUserID() string {
	if m != nil {
		return m.BlackUserID
	}
	return ""
}

type IsBlackResp struct {
	Response             bool     `protobuf:"varint,1,opt,name=response" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsBlackResp) Reset()         { *m = IsBlackResp{} }
func (m *IsBlackResp) String() string { return proto.CompactTextString(m) }
func (*IsBlackResp) ProtoMessage()    {}
func (*IsBlackResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{19}
}
func (m *IsBlackResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsBlackResp.Unmarshal(m, b)
}
func (m *IsBlackResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsBlackResp.Marshal(b, m, deterministic)
}
func (dst *IsBlackResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsBlackResp.Merge(dst, src)
}
func (m *IsBlackResp) XXX_Size() int {
	return xxx_messageInfo_IsBlackResp.Size(m)
}
func (m *IsBlackResp) XXX_DiscardUnknown() {
	xxx_messageInfo_IsBlackResp.DiscardUnknown(m)
}

var xxx_messageInfo_IsBlackResp proto.InternalMessageInfo

func (m *IsBlackResp) GetResponse() bool {
	if m != nil {
		return m.Response
	}
	return false
}

type DeleteFriendReq struct {
	OwnerUserID          string   `protobuf:"bytes,1,opt,name=ownerUserID" json:"ownerUserID,omitempty"`
	FriendUserID         string   `protobuf:"bytes,2,opt,name=friendUserID" json:"friendUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteFriendReq) Reset()         { *m = DeleteFriendReq{} }
func (m *DeleteFriendReq) String() string { return proto.CompactTextString(m) }
func (*DeleteFriendReq) ProtoMessage()    {}
func (*DeleteFriendReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{20}
}
func (m *DeleteFriendReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteFriendReq.Unmarshal(m, b)
}
func (m *DeleteFriendReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteFriendReq.Marshal(b, m, deterministic)
}
func (dst *DeleteFriendReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteFriendReq.Merge(dst, src)
}
func (m *DeleteFriendReq) XXX_Size() int {
	return xxx_messageInfo_DeleteFriendReq.Size(m)
}
func (m *DeleteFriendReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteFriendReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteFriendReq proto.InternalMessageInfo

func (m *DeleteFriendReq) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *DeleteFriendReq) GetFriendUserID() string {
	if m != nil {
		return m.FriendUserID
	}
	return ""
}

type DeleteFriendResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteFriendResp) Reset()         { *m = DeleteFriendResp{} }
func (m *DeleteFriendResp) String() string { return proto.CompactTextString(m) }
func (*DeleteFriendResp) ProtoMessage()    {}
func (*DeleteFriendResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{21}
}
func (m *DeleteFriendResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteFriendResp.Unmarshal(m, b)
}
func (m *DeleteFriendResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteFriendResp.Marshal(b, m, deterministic)
}
func (dst *DeleteFriendResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteFriendResp.Merge(dst, src)
}
func (m *DeleteFriendResp) XXX_Size() int {
	return xxx_messageInfo_DeleteFriendResp.Size(m)
}
func (m *DeleteFriendResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteFriendResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteFriendResp proto.InternalMessageInfo

// process
type RespondFriendApplyReq struct {
	FromUserID           string   `protobuf:"bytes,1,opt,name=fromUserID" json:"fromUserID,omitempty"`
	ToUserID             string   `protobuf:"bytes,2,opt,name=toUserID" json:"toUserID,omitempty"`
	HandleResult         int32    `protobuf:"varint,3,opt,name=handleResult" json:"handleResult,omitempty"`
	HandleMsg            string   `protobuf:"bytes,4,opt,name=handleMsg" json:"handleMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespondFriendApplyReq) Reset()         { *m = RespondFriendApplyReq{} }
func (m *RespondFriendApplyReq) String() string { return proto.CompactTextString(m) }
func (*RespondFriendApplyReq) ProtoMessage()    {}
func (*RespondFriendApplyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{22}
}
func (m *RespondFriendApplyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespondFriendApplyReq.Unmarshal(m, b)
}
func (m *RespondFriendApplyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespondFriendApplyReq.Marshal(b, m, deterministic)
}
func (dst *RespondFriendApplyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespondFriendApplyReq.Merge(dst, src)
}
func (m *RespondFriendApplyReq) XXX_Size() int {
	return xxx_messageInfo_RespondFriendApplyReq.Size(m)
}
func (m *RespondFriendApplyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RespondFriendApplyReq.DiscardUnknown(m)
}

var xxx_messageInfo_RespondFriendApplyReq proto.InternalMessageInfo

func (m *RespondFriendApplyReq) GetFromUserID() string {
	if m != nil {
		return m.FromUserID
	}
	return ""
}

func (m *RespondFriendApplyReq) GetToUserID() string {
	if m != nil {
		return m.ToUserID
	}
	return ""
}

func (m *RespondFriendApplyReq) GetHandleResult() int32 {
	if m != nil {
		return m.HandleResult
	}
	return 0
}

func (m *RespondFriendApplyReq) GetHandleMsg() string {
	if m != nil {
		return m.HandleMsg
	}
	return ""
}

type RespondFriendApplyResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespondFriendApplyResp) Reset()         { *m = RespondFriendApplyResp{} }
func (m *RespondFriendApplyResp) String() string { return proto.CompactTextString(m) }
func (*RespondFriendApplyResp) ProtoMessage()    {}
func (*RespondFriendApplyResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{23}
}
func (m *RespondFriendApplyResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespondFriendApplyResp.Unmarshal(m, b)
}
func (m *RespondFriendApplyResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespondFriendApplyResp.Marshal(b, m, deterministic)
}
func (dst *RespondFriendApplyResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespondFriendApplyResp.Merge(dst, src)
}
func (m *RespondFriendApplyResp) XXX_Size() int {
	return xxx_messageInfo_RespondFriendApplyResp.Size(m)
}
func (m *RespondFriendApplyResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RespondFriendApplyResp.DiscardUnknown(m)
}

var xxx_messageInfo_RespondFriendApplyResp proto.InternalMessageInfo

type SetFriendRemarkReq struct {
	OwnerUserID          string   `protobuf:"bytes,1,opt,name=ownerUserID" json:"ownerUserID,omitempty"`
	FriendUserID         string   `protobuf:"bytes,2,opt,name=friendUserID" json:"friendUserID,omitempty"`
	Remark               string   `protobuf:"bytes,3,opt,name=remark" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetFriendRemarkReq) Reset()         { *m = SetFriendRemarkReq{} }
func (m *SetFriendRemarkReq) String() string { return proto.CompactTextString(m) }
func (*SetFriendRemarkReq) ProtoMessage()    {}
func (*SetFriendRemarkReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{24}
}
func (m *SetFriendRemarkReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFriendRemarkReq.Unmarshal(m, b)
}
func (m *SetFriendRemarkReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFriendRemarkReq.Marshal(b, m, deterministic)
}
func (dst *SetFriendRemarkReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFriendRemarkReq.Merge(dst, src)
}
func (m *SetFriendRemarkReq) XXX_Size() int {
	return xxx_messageInfo_SetFriendRemarkReq.Size(m)
}
func (m *SetFriendRemarkReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFriendRemarkReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetFriendRemarkReq proto.InternalMessageInfo

func (m *SetFriendRemarkReq) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *SetFriendRemarkReq) GetFriendUserID() string {
	if m != nil {
		return m.FriendUserID
	}
	return ""
}

func (m *SetFriendRemarkReq) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type SetFriendRemarkResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetFriendRemarkResp) Reset()         { *m = SetFriendRemarkResp{} }
func (m *SetFriendRemarkResp) String() string { return proto.CompactTextString(m) }
func (*SetFriendRemarkResp) ProtoMessage()    {}
func (*SetFriendRemarkResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{25}
}
func (m *SetFriendRemarkResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFriendRemarkResp.Unmarshal(m, b)
}
func (m *SetFriendRemarkResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFriendRemarkResp.Marshal(b, m, deterministic)
}
func (dst *SetFriendRemarkResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFriendRemarkResp.Merge(dst, src)
}
func (m *SetFriendRemarkResp) XXX_Size() int {
	return xxx_messageInfo_SetFriendRemarkResp.Size(m)
}
func (m *SetFriendRemarkResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFriendRemarkResp.DiscardUnknown(m)
}

var xxx_messageInfo_SetFriendRemarkResp proto.InternalMessageInfo

type GetFromFriendsApplyReq struct {
	UserID               string                    `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	Pagination           *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=pagination" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetFromFriendsApplyReq) Reset()         { *m = GetFromFriendsApplyReq{} }
func (m *GetFromFriendsApplyReq) String() string { return proto.CompactTextString(m) }
func (*GetFromFriendsApplyReq) ProtoMessage()    {}
func (*GetFromFriendsApplyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{26}
}
func (m *GetFromFriendsApplyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFromFriendsApplyReq.Unmarshal(m, b)
}
func (m *GetFromFriendsApplyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFromFriendsApplyReq.Marshal(b, m, deterministic)
}
func (dst *GetFromFriendsApplyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFromFriendsApplyReq.Merge(dst, src)
}
func (m *GetFromFriendsApplyReq) XXX_Size() int {
	return xxx_messageInfo_GetFromFriendsApplyReq.Size(m)
}
func (m *GetFromFriendsApplyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFromFriendsApplyReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetFromFriendsApplyReq proto.InternalMessageInfo

func (m *GetFromFriendsApplyReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetFromFriendsApplyReq) GetPagination() *sdk_ws.RequestPagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type GetFromFriendsApplyResp struct {
	FriendRequests       []*sdk_ws.FriendRequest `protobuf:"bytes,1,rep,name=friendRequests" json:"friendRequests,omitempty"`
	Total                int32                   `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetFromFriendsApplyResp) Reset()         { *m = GetFromFriendsApplyResp{} }
func (m *GetFromFriendsApplyResp) String() string { return proto.CompactTextString(m) }
func (*GetFromFriendsApplyResp) ProtoMessage()    {}
func (*GetFromFriendsApplyResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_fcfb8eb4800a740c, []int{27}
}
func (m *GetFromFriendsApplyResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFromFriendsApplyResp.Unmarshal(m, b)
}
func (m *GetFromFriendsApplyResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFromFriendsApplyResp.Marshal(b, m, deterministic)
}
func (dst *GetFromFriendsApplyResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFromFriendsApplyResp.Merge(dst, src)
}
func (m *GetFromFriendsApplyResp) XXX_Size() int {
	return xxx_messageInfo_GetFromFriendsApplyResp.Size(m)
}
func (m *GetFromFriendsApplyResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFromFriendsApplyResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetFromFriendsApplyResp proto.InternalMessageInfo

func (m *GetFromFriendsApplyResp) GetFriendRequests() []*sdk_ws.FriendRequest {
	if m != nil {
		return m.FriendRequests
	}
	return nil
}

func (m *GetFromFriendsApplyResp) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func init() {
	proto.RegisterType((*GetFriendsInfoReq)(nil), "friend.getFriendsInfoReq")
	proto.RegisterType((*GetFriendsInfoResp)(nil), "friend.getFriendsInfoResp")
	proto.RegisterType((*AddFriendReq)(nil), "friend.addFriendReq")
	proto.RegisterType((*AddFriendResp)(nil), "friend.addFriendResp")
	proto.RegisterType((*ImportFriendReq)(nil), "friend.importFriendReq")
	proto.RegisterType((*ImportFriendResp)(nil), "friend.importFriendResp")
	proto.RegisterType((*GetToFriendsApplyReq)(nil), "friend.getToFriendsApplyReq")
	proto.RegisterType((*GetToFriendsApplyResp)(nil), "friend.getToFriendsApplyResp")
	proto.RegisterType((*GetFriendsReq)(nil), "friend.getFriendsReq")
	proto.RegisterType((*GetFriendsResp)(nil), "friend.getFriendsResp")
	proto.RegisterType((*AddBlackReq)(nil), "friend.addBlackReq")
	proto.RegisterType((*AddBlackResp)(nil), "friend.addBlackResp")
	proto.RegisterType((*RemoveBlackReq)(nil), "friend.removeBlackReq")
	proto.RegisterType((*RemoveBlackReqResp)(nil), "friend.removeBlackReqResp")
	proto.RegisterType((*GetBlacksReq)(nil), "friend.getBlacksReq")
	proto.RegisterType((*GetBlacksResp)(nil), "friend.getBlacksResp")
	proto.RegisterType((*IsFriendReq)(nil), "friend.isFriendReq")
	proto.RegisterType((*IsFriendResp)(nil), "friend.isFriendResp")
	proto.RegisterType((*IsBlackReq)(nil), "friend.isBlackReq")
	proto.RegisterType((*IsBlackResp)(nil), "friend.isBlackResp")
	proto.RegisterType((*DeleteFriendReq)(nil), "friend.deleteFriendReq")
	proto.RegisterType((*DeleteFriendResp)(nil), "friend.deleteFriendResp")
	proto.RegisterType((*RespondFriendApplyReq)(nil), "friend.respondFriendApplyReq")
	proto.RegisterType((*RespondFriendApplyResp)(nil), "friend.respondFriendApplyResp")
	proto.RegisterType((*SetFriendRemarkReq)(nil), "friend.setFriendRemarkReq")
	proto.RegisterType((*SetFriendRemarkResp)(nil), "friend.setFriendRemarkResp")
	proto.RegisterType((*GetFromFriendsApplyReq)(nil), "friend.getFromFriendsApplyReq")
	proto.RegisterType((*GetFromFriendsApplyResp)(nil), "friend.getFromFriendsApplyResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Friend service

type FriendClient interface {
	// 申请加好友
	AddFriend(ctx context.Context, in *AddFriendReq, opts ...grpc.CallOption) (*AddFriendResp, error)
	// 获取收到的好友申请列表
	GetToFriendsApply(ctx context.Context, in *GetToFriendsApplyReq, opts ...grpc.CallOption) (*GetToFriendsApplyResp, error)
	// 获取主动发出去的好友申请列表
	GetFromFriendsApply(ctx context.Context, in *GetFromFriendsApplyReq, opts ...grpc.CallOption) (*GetFromFriendsApplyResp, error)
	// 获取好友列表
	GetFriends(ctx context.Context, in *GetFriendsReq, opts ...grpc.CallOption) (*GetFriendsResp, error)
	// 添加黑名单
	AddBlack(ctx context.Context, in *AddBlackReq, opts ...grpc.CallOption) (*AddBlackResp, error)
	// 移除黑名单
	RemoveBlack(ctx context.Context, in *RemoveBlackReq, opts ...grpc.CallOption) (*RemoveBlackReqResp, error)
	// 判断是否好友关系
	IsFriend(ctx context.Context, in *IsFriendReq, opts ...grpc.CallOption) (*IsFriendResp, error)
	// 判断是否在黑名单中
	IsBlack(ctx context.Context, in *IsBlackReq, opts ...grpc.CallOption) (*IsBlackResp, error)
	// 获取黑名单列表
	GetBlacks(ctx context.Context, in *GetBlacksReq, opts ...grpc.CallOption) (*GetBlacksResp, error)
	// 删除好友
	DeleteFriend(ctx context.Context, in *DeleteFriendReq, opts ...grpc.CallOption) (*DeleteFriendResp, error)
	// 对好友申请响应（同意或拒绝）
	RespondFriendApply(ctx context.Context, in *RespondFriendApplyReq, opts ...grpc.CallOption) (*RespondFriendApplyResp, error)
	// 设置好友备注
	SetFriendRemark(ctx context.Context, in *SetFriendRemarkReq, opts ...grpc.CallOption) (*SetFriendRemarkResp, error)
	// 导入好友关系
	ImportFriends(ctx context.Context, in *ImportFriendReq, opts ...grpc.CallOption) (*ImportFriendResp, error)
	// 获取指定好友信息
	GetFriendsInfo(ctx context.Context, in *GetFriendsInfoReq, opts ...grpc.CallOption) (*GetFriendsInfoResp, error)
}

type friendClient struct {
	cc *grpc.ClientConn
}

func NewFriendClient(cc *grpc.ClientConn) FriendClient {
	return &friendClient{cc}
}

func (c *friendClient) AddFriend(ctx context.Context, in *AddFriendReq, opts ...grpc.CallOption) (*AddFriendResp, error) {
	out := new(AddFriendResp)
	err := grpc.Invoke(ctx, "/friend.friend/addFriend", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) GetToFriendsApply(ctx context.Context, in *GetToFriendsApplyReq, opts ...grpc.CallOption) (*GetToFriendsApplyResp, error) {
	out := new(GetToFriendsApplyResp)
	err := grpc.Invoke(ctx, "/friend.friend/getToFriendsApply", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) GetFromFriendsApply(ctx context.Context, in *GetFromFriendsApplyReq, opts ...grpc.CallOption) (*GetFromFriendsApplyResp, error) {
	out := new(GetFromFriendsApplyResp)
	err := grpc.Invoke(ctx, "/friend.friend/getFromFriendsApply", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) GetFriends(ctx context.Context, in *GetFriendsReq, opts ...grpc.CallOption) (*GetFriendsResp, error) {
	out := new(GetFriendsResp)
	err := grpc.Invoke(ctx, "/friend.friend/getFriends", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) AddBlack(ctx context.Context, in *AddBlackReq, opts ...grpc.CallOption) (*AddBlackResp, error) {
	out := new(AddBlackResp)
	err := grpc.Invoke(ctx, "/friend.friend/addBlack", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) RemoveBlack(ctx context.Context, in *RemoveBlackReq, opts ...grpc.CallOption) (*RemoveBlackReqResp, error) {
	out := new(RemoveBlackReqResp)
	err := grpc.Invoke(ctx, "/friend.friend/removeBlack", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) IsFriend(ctx context.Context, in *IsFriendReq, opts ...grpc.CallOption) (*IsFriendResp, error) {
	out := new(IsFriendResp)
	err := grpc.Invoke(ctx, "/friend.friend/isFriend", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) IsBlack(ctx context.Context, in *IsBlackReq, opts ...grpc.CallOption) (*IsBlackResp, error) {
	out := new(IsBlackResp)
	err := grpc.Invoke(ctx, "/friend.friend/isBlack", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) GetBlacks(ctx context.Context, in *GetBlacksReq, opts ...grpc.CallOption) (*GetBlacksResp, error) {
	out := new(GetBlacksResp)
	err := grpc.Invoke(ctx, "/friend.friend/getBlacks", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) DeleteFriend(ctx context.Context, in *DeleteFriendReq, opts ...grpc.CallOption) (*DeleteFriendResp, error) {
	out := new(DeleteFriendResp)
	err := grpc.Invoke(ctx, "/friend.friend/deleteFriend", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) RespondFriendApply(ctx context.Context, in *RespondFriendApplyReq, opts ...grpc.CallOption) (*RespondFriendApplyResp, error) {
	out := new(RespondFriendApplyResp)
	err := grpc.Invoke(ctx, "/friend.friend/respondFriendApply", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) SetFriendRemark(ctx context.Context, in *SetFriendRemarkReq, opts ...grpc.CallOption) (*SetFriendRemarkResp, error) {
	out := new(SetFriendRemarkResp)
	err := grpc.Invoke(ctx, "/friend.friend/setFriendRemark", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) ImportFriends(ctx context.Context, in *ImportFriendReq, opts ...grpc.CallOption) (*ImportFriendResp, error) {
	out := new(ImportFriendResp)
	err := grpc.Invoke(ctx, "/friend.friend/importFriends", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) GetFriendsInfo(ctx context.Context, in *GetFriendsInfoReq, opts ...grpc.CallOption) (*GetFriendsInfoResp, error) {
	out := new(GetFriendsInfoResp)
	err := grpc.Invoke(ctx, "/friend.friend/getFriendsInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Friend service

type FriendServer interface {
	// 申请加好友
	AddFriend(context.Context, *AddFriendReq) (*AddFriendResp, error)
	// 获取收到的好友申请列表
	GetToFriendsApply(context.Context, *GetToFriendsApplyReq) (*GetToFriendsApplyResp, error)
	// 获取主动发出去的好友申请列表
	GetFromFriendsApply(context.Context, *GetFromFriendsApplyReq) (*GetFromFriendsApplyResp, error)
	// 获取好友列表
	GetFriends(context.Context, *GetFriendsReq) (*GetFriendsResp, error)
	// 添加黑名单
	AddBlack(context.Context, *AddBlackReq) (*AddBlackResp, error)
	// 移除黑名单
	RemoveBlack(context.Context, *RemoveBlackReq) (*RemoveBlackReqResp, error)
	// 判断是否好友关系
	IsFriend(context.Context, *IsFriendReq) (*IsFriendResp, error)
	// 判断是否在黑名单中
	IsBlack(context.Context, *IsBlackReq) (*IsBlackResp, error)
	// 获取黑名单列表
	GetBlacks(context.Context, *GetBlacksReq) (*GetBlacksResp, error)
	// 删除好友
	DeleteFriend(context.Context, *DeleteFriendReq) (*DeleteFriendResp, error)
	// 对好友申请响应（同意或拒绝）
	RespondFriendApply(context.Context, *RespondFriendApplyReq) (*RespondFriendApplyResp, error)
	// 设置好友备注
	SetFriendRemark(context.Context, *SetFriendRemarkReq) (*SetFriendRemarkResp, error)
	// 导入好友关系
	ImportFriends(context.Context, *ImportFriendReq) (*ImportFriendResp, error)
	// 获取指定好友信息
	GetFriendsInfo(context.Context, *GetFriendsInfoReq) (*GetFriendsInfoResp, error)
}

func RegisterFriendServer(s *grpc.Server, srv FriendServer) {
	s.RegisterService(&_Friend_serviceDesc, srv)
}

func _Friend_AddFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFriendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).AddFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/AddFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).AddFriend(ctx, req.(*AddFriendReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_GetToFriendsApply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetToFriendsApplyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).GetToFriendsApply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/GetToFriendsApply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).GetToFriendsApply(ctx, req.(*GetToFriendsApplyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_GetFromFriendsApply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFromFriendsApplyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).GetFromFriendsApply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/GetFromFriendsApply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).GetFromFriendsApply(ctx, req.(*GetFromFriendsApplyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_GetFriends_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFriendsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).GetFriends(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/GetFriends",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).GetFriends(ctx, req.(*GetFriendsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_AddBlack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBlackReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).AddBlack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/AddBlack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).AddBlack(ctx, req.(*AddBlackReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_RemoveBlack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveBlackReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).RemoveBlack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/RemoveBlack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).RemoveBlack(ctx, req.(*RemoveBlackReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_IsFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsFriendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).IsFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/IsFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).IsFriend(ctx, req.(*IsFriendReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_IsBlack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsBlackReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).IsBlack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/IsBlack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).IsBlack(ctx, req.(*IsBlackReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_GetBlacks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlacksReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).GetBlacks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/GetBlacks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).GetBlacks(ctx, req.(*GetBlacksReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_DeleteFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFriendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).DeleteFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/DeleteFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).DeleteFriend(ctx, req.(*DeleteFriendReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_RespondFriendApply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RespondFriendApplyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).RespondFriendApply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/RespondFriendApply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).RespondFriendApply(ctx, req.(*RespondFriendApplyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_SetFriendRemark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetFriendRemarkReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).SetFriendRemark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/SetFriendRemark",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).SetFriendRemark(ctx, req.(*SetFriendRemarkReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_ImportFriends_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportFriendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).ImportFriends(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/ImportFriends",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).ImportFriends(ctx, req.(*ImportFriendReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_GetFriendsInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFriendsInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).GetFriendsInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/GetFriendsInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).GetFriendsInfo(ctx, req.(*GetFriendsInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Friend_serviceDesc = grpc.ServiceDesc{
	ServiceName: "friend.friend",
	HandlerType: (*FriendServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "addFriend",
			Handler:    _Friend_AddFriend_Handler,
		},
		{
			MethodName: "getToFriendsApply",
			Handler:    _Friend_GetToFriendsApply_Handler,
		},
		{
			MethodName: "getFromFriendsApply",
			Handler:    _Friend_GetFromFriendsApply_Handler,
		},
		{
			MethodName: "getFriends",
			Handler:    _Friend_GetFriends_Handler,
		},
		{
			MethodName: "addBlack",
			Handler:    _Friend_AddBlack_Handler,
		},
		{
			MethodName: "removeBlack",
			Handler:    _Friend_RemoveBlack_Handler,
		},
		{
			MethodName: "isFriend",
			Handler:    _Friend_IsFriend_Handler,
		},
		{
			MethodName: "isBlack",
			Handler:    _Friend_IsBlack_Handler,
		},
		{
			MethodName: "getBlacks",
			Handler:    _Friend_GetBlacks_Handler,
		},
		{
			MethodName: "deleteFriend",
			Handler:    _Friend_DeleteFriend_Handler,
		},
		{
			MethodName: "respondFriendApply",
			Handler:    _Friend_RespondFriendApply_Handler,
		},
		{
			MethodName: "setFriendRemark",
			Handler:    _Friend_SetFriendRemark_Handler,
		},
		{
			MethodName: "importFriends",
			Handler:    _Friend_ImportFriends_Handler,
		},
		{
			MethodName: "getFriendsInfo",
			Handler:    _Friend_GetFriendsInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "friend/friend.proto",
}

func init() { proto.RegisterFile("friend/friend.proto", fileDescriptor_friend_fcfb8eb4800a740c) }

var fileDescriptor_friend_fcfb8eb4800a740c = []byte{
	// 917 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xdb, 0x6e, 0xdb, 0x46,
	0x10, 0x85, 0xe4, 0xda, 0xb1, 0x87, 0xb2, 0x9c, 0x8c, 0x2e, 0x51, 0xd9, 0xd8, 0x51, 0x16, 0x79,
	0x70, 0x0b, 0x44, 0x02, 0x54, 0x14, 0x28, 0x90, 0x87, 0x22, 0x42, 0x7a, 0x51, 0x51, 0x23, 0x2a,
	0x9d, 0xb6, 0x68, 0xf3, 0x20, 0xd0, 0xe1, 0x4a, 0x25, 0x44, 0x91, 0x6b, 0x0e, 0x25, 0x25, 0x1f,
	0xd2, 0x8f, 0xe9, 0xdf, 0x15, 0x5c, 0xde, 0x96, 0x14, 0x25, 0xb8, 0xa9, 0x9a, 0x27, 0x62, 0xcf,
	0xce, 0x65, 0x67, 0x76, 0x78, 0x66, 0x16, 0x1a, 0x53, 0xdf, 0xe6, 0xae, 0xd5, 0x8f, 0x3e, 0x3d,
	0xe1, 0x7b, 0x81, 0x87, 0x47, 0xd1, 0x4a, 0xbf, 0x7c, 0x25, 0xb8, 0xfb, 0x6c, 0x74, 0xf5, 0xec,
	0x9a, 0xfb, 0x2b, 0xee, 0xf7, 0xc5, 0x7c, 0xd6, 0x97, 0x12, 0x7d, 0xb2, 0xe6, 0x93, 0x35, 0xf5,
	0xd7, 0x14, 0x69, 0xb0, 0x37, 0xf0, 0x60, 0xc6, 0x83, 0xef, 0xa4, 0x1a, 0x8d, 0xdc, 0xa9, 0x67,
	0xf0, 0x5b, 0xec, 0x82, 0xe6, 0xad, 0x5d, 0xee, 0xff, 0x42, 0xdc, 0x1f, 0xbd, 0xec, 0x54, 0xba,
	0x95, 0xcb, 0x13, 0x43, 0x85, 0xf0, 0x29, 0x9c, 0x46, 0xae, 0xa2, 0x35, 0x75, 0xaa, 0xdd, 0x83,
	0xcb, 0x13, 0x23, 0x0f, 0xb2, 0x37, 0x80, 0x45, 0xe3, 0x24, 0xf0, 0x5b, 0xa8, 0x47, 0x50, 0x88,
	0xfc, 0x64, 0x53, 0xd0, 0xa9, 0x74, 0x0f, 0x2e, 0xb5, 0xc1, 0x79, 0x8f, 0xe4, 0x69, 0x27, 0xa6,
	0xb0, 0x27, 0xc2, 0xf4, 0xcd, 0x05, 0xf5, 0x32, 0x41, 0xa3, 0xa0, 0xc4, 0x7c, 0xa8, 0x99, 0x96,
	0x15, 0x81, 0xe1, 0xa1, 0x2f, 0x00, 0xa6, 0xbe, 0xb7, 0xc8, 0x9d, 0x59, 0x41, 0x50, 0x87, 0xe3,
	0xc0, 0x8b, 0x77, 0xab, 0x72, 0x37, 0x5d, 0x63, 0x1b, 0x8e, 0x7c, 0x7e, 0x7b, 0x45, 0xb3, 0xce,
	0x81, 0xdc, 0x89, 0x57, 0x58, 0x87, 0x2a, 0x7f, 0xd7, 0xf9, 0x44, 0x62, 0x55, 0xfe, 0x8e, 0x9d,
	0xc1, 0xa9, 0xe2, 0x93, 0x04, 0xfb, 0x1d, 0xce, 0xec, 0x85, 0xf0, 0xfc, 0x20, 0x3b, 0xc7, 0xbe,
	0x92, 0x87, 0x70, 0x3f, 0x6f, 0x9a, 0x04, 0x0b, 0xa0, 0x39, 0xe3, 0xc1, 0x6b, 0x2f, 0x4e, 0xe9,
	0x0b, 0x21, 0x9c, 0xf7, 0xa1, 0xcf, 0x36, 0x1c, 0x2d, 0x55, 0x77, 0xf1, 0x0a, 0x5f, 0x02, 0x08,
	0x73, 0x66, 0xbb, 0x66, 0x60, 0x7b, 0xae, 0x8c, 0x5a, 0x1b, 0x3c, 0x2d, 0x49, 0xb3, 0xc1, 0x6f,
	0x97, 0x9c, 0x82, 0x71, 0x2a, 0x6b, 0x28, 0x7a, 0x6c, 0x0d, 0xad, 0x12, 0xaf, 0x24, 0xf0, 0x87,
	0xe4, 0x26, 0x63, 0x7d, 0x8a, 0x6f, 0xb2, 0xbb, 0xf5, 0x26, 0x63, 0x41, 0xa3, 0xa0, 0x87, 0x4d,
	0x38, 0x0c, 0xbc, 0xc0, 0x74, 0xe4, 0x19, 0x0f, 0x8d, 0x68, 0xc1, 0x16, 0x70, 0x9a, 0xd5, 0x4f,
	0x18, 0x67, 0x3e, 0x9e, 0xca, 0x87, 0xc5, 0xa3, 0x64, 0xab, 0xaa, 0x66, 0x8b, 0xcd, 0xa0, 0xae,
	0xba, 0x23, 0x81, 0xdf, 0x80, 0xa6, 0x54, 0xef, 0xdd, 0xea, 0x54, 0xd5, 0xd8, 0x12, 0xd7, 0xcf,
	0xa0, 0x99, 0x96, 0x35, 0x74, 0xcc, 0xb7, 0xf3, 0xbb, 0x55, 0x4c, 0x17, 0xb4, 0x9b, 0x50, 0x3a,
	0x57, 0xbe, 0x2a, 0xc4, 0xea, 0xf2, 0x6f, 0x88, 0x4d, 0x92, 0x60, 0xaf, 0xa1, 0xee, 0xf3, 0x85,
	0xb7, 0xe2, 0x7b, 0xf5, 0xd2, 0x04, 0xcc, 0x5b, 0x95, 0xbe, 0x1c, 0xa8, 0xcd, 0x78, 0x20, 0x21,
	0xfa, 0xff, 0xab, 0x71, 0x25, 0x8b, 0x22, 0xf1, 0x46, 0x02, 0x5f, 0xc1, 0x83, 0x61, 0x7a, 0xc6,
	0x3c, 0xa5, 0x3c, 0x29, 0xb1, 0x3e, 0x5e, 0xde, 0x38, 0xf6, 0xdb, 0x44, 0xd8, 0xd8, 0xd4, 0xdd,
	0x72, 0x69, 0xd7, 0xa0, 0xd9, 0xf4, 0x6f, 0x7e, 0x73, 0x06, 0x35, 0xf5, 0x8f, 0x8e, 0xf3, 0x99,
	0xc3, 0xd8, 0x17, 0x50, 0xcb, 0x8c, 0x92, 0x08, 0x49, 0xca, 0xe7, 0x24, 0x3c, 0x97, 0xb8, 0x34,
	0x79, 0x6c, 0xa4, 0x6b, 0x36, 0x06, 0xb0, 0x69, 0xaf, 0xd7, 0xf9, 0x79, 0x18, 0x52, 0x5a, 0x33,
	0x3b, 0x9d, 0xff, 0x06, 0x67, 0x16, 0x77, 0x78, 0xc0, 0xf7, 0x9d, 0x01, 0x84, 0xfb, 0x79, 0xc3,
	0x24, 0xd8, 0x5f, 0x15, 0x68, 0x45, 0x9e, 0x63, 0xae, 0x4d, 0x89, 0xee, 0xbf, 0x90, 0x3c, 0x83,
	0xda, 0x9f, 0xa6, 0x6b, 0x39, 0xdc, 0xe0, 0xb4, 0x74, 0x02, 0x49, 0xf5, 0x87, 0x46, 0x0e, 0xc3,
	0x47, 0x70, 0x12, 0xad, 0xc3, 0x5e, 0x10, 0xf1, 0x7e, 0x06, 0xb0, 0x0e, 0xb4, 0xcb, 0x8e, 0x45,
	0x82, 0xf9, 0x80, 0xc4, 0x53, 0xa6, 0x5e, 0x98, 0xfe, 0x7c, 0x6f, 0x19, 0x8a, 0x9a, 0x53, 0x68,
	0x32, 0x6b, 0x4e, 0xe1, 0x8a, 0xb5, 0xa0, 0xb1, 0xe1, 0x93, 0x04, 0x5b, 0x41, 0x5b, 0xb2, 0x98,
	0xb7, 0xf8, 0xb8, 0x5d, 0xe2, 0x3d, 0x3c, 0x2c, 0xf5, 0x1b, 0xf5, 0x89, 0xe9, 0x07, 0xf6, 0x89,
	0xe9, 0x1d, 0xfa, 0xc4, 0xe0, 0xef, 0x7b, 0x10, 0x4f, 0x3e, 0xf8, 0x35, 0x9c, 0xa4, 0x1d, 0x1a,
	0x9b, 0xbd, 0x78, 0x3a, 0x52, 0x07, 0x05, 0xbd, 0x55, 0x82, 0x92, 0xc0, 0xb1, 0x9c, 0x84, 0xf2,
	0x5d, 0x0e, 0x1f, 0x25, 0xb2, 0x65, 0x6d, 0x57, 0x3f, 0xdf, 0xb1, 0x4b, 0x02, 0x7f, 0x85, 0x46,
	0x49, 0x46, 0xf0, 0x42, 0xd1, 0x2a, 0xb9, 0x26, 0xfd, 0xf1, 0xce, 0x7d, 0x12, 0xf8, 0x1c, 0x20,
	0xeb, 0x53, 0xd8, 0xca, 0x89, 0x27, 0xad, 0x52, 0x6f, 0x97, 0xc1, 0x24, 0xf0, 0x2b, 0x38, 0x4e,
	0x1a, 0x05, 0x36, 0x94, 0x4c, 0x24, 0xc4, 0xa2, 0x37, 0x37, 0x41, 0x12, 0xf8, 0x02, 0x34, 0x85,
	0xf9, 0x31, 0xb5, 0x9e, 0x6f, 0x07, 0xba, 0x5e, 0x8e, 0x27, 0x9e, 0x13, 0xae, 0xcb, 0x3c, 0x2b,
	0x94, 0x9a, 0x79, 0xce, 0x51, 0xe2, 0x00, 0xee, 0xc5, 0x24, 0x85, 0x98, 0x09, 0xa4, 0x1e, 0x1b,
	0x1b, 0x18, 0x89, 0xb0, 0x0a, 0xd2, 0x1e, 0x91, 0x55, 0x81, 0xda, 0xa4, 0xf4, 0x56, 0x09, 0x2a,
	0xe3, 0xac, 0xa9, 0x74, 0x84, 0x0f, 0x13, 0xb1, 0x02, 0xfb, 0xe9, 0x9d, 0xf2, 0x0d, 0x12, 0x78,
	0x1d, 0x36, 0xc9, 0x22, 0x4b, 0xe0, 0x79, 0x96, 0x99, 0x12, 0x62, 0xd3, 0x2f, 0x76, 0x6d, 0x93,
	0xc0, 0x1f, 0xe1, 0xac, 0xf0, 0xb3, 0x63, 0x9a, 0xeb, 0x4d, 0xe6, 0xd1, 0x3f, 0xdb, 0xba, 0x47,
	0x02, 0x87, 0x70, 0xaa, 0x4e, 0x96, 0x94, 0x05, 0x59, 0x98, 0x65, 0xb3, 0x20, 0x8b, 0x93, 0x28,
	0x7e, 0xaf, 0xce, 0x4a, 0x72, 0xd4, 0xf9, 0x74, 0xb3, 0xe0, 0xe2, 0xf7, 0x44, 0x56, 0x15, 0x9b,
	0xaf, 0x81, 0xe1, 0x93, 0x3f, 0x1e, 0x87, 0x8f, 0x95, 0xc9, 0xe8, 0x4a, 0x79, 0xa5, 0x44, 0xe2,
	0xcf, 0xa3, 0xcf, 0xcd, 0x91, 0x04, 0xbf, 0xfc, 0x27, 0x00, 0x00, 0xff, 0xff, 0x05, 0x4c, 0x24,
	0x27, 0xf3, 0x0c, 0x00, 0x00,
}
