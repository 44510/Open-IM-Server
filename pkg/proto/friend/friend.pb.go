// Code generated by protoc-gen-go. DO NOT EDIT.
// source: friend/friend.proto

package friend // import "Open_IM/pkg/proto/friend"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import sdk_ws "Open_IM/pkg/proto/sdk_ws"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetFriendsInfoReq struct {
	FromUserID           string   `protobuf:"bytes,1,opt,name=fromUserID" json:"fromUserID,omitempty"`
	ToUserIDs            []string `protobuf:"bytes,2,rep,name=toUserIDs" json:"toUserIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFriendsInfoReq) Reset()         { *m = GetFriendsInfoReq{} }
func (m *GetFriendsInfoReq) String() string { return proto.CompactTextString(m) }
func (*GetFriendsInfoReq) ProtoMessage()    {}
func (*GetFriendsInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{0}
}
func (m *GetFriendsInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFriendsInfoReq.Unmarshal(m, b)
}
func (m *GetFriendsInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFriendsInfoReq.Marshal(b, m, deterministic)
}
func (dst *GetFriendsInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFriendsInfoReq.Merge(dst, src)
}
func (m *GetFriendsInfoReq) XXX_Size() int {
	return xxx_messageInfo_GetFriendsInfoReq.Size(m)
}
func (m *GetFriendsInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFriendsInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetFriendsInfoReq proto.InternalMessageInfo

func (m *GetFriendsInfoReq) GetFromUserID() string {
	if m != nil {
		return m.FromUserID
	}
	return ""
}

func (m *GetFriendsInfoReq) GetToUserIDs() []string {
	if m != nil {
		return m.ToUserIDs
	}
	return nil
}

type GetFriendsInfoResp struct {
	FriendInfoList       []*sdk_ws.FriendInfo `protobuf:"bytes,1,rep,name=FriendInfoList" json:"FriendInfoList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetFriendsInfoResp) Reset()         { *m = GetFriendsInfoResp{} }
func (m *GetFriendsInfoResp) String() string { return proto.CompactTextString(m) }
func (*GetFriendsInfoResp) ProtoMessage()    {}
func (*GetFriendsInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{1}
}
func (m *GetFriendsInfoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFriendsInfoResp.Unmarshal(m, b)
}
func (m *GetFriendsInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFriendsInfoResp.Marshal(b, m, deterministic)
}
func (dst *GetFriendsInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFriendsInfoResp.Merge(dst, src)
}
func (m *GetFriendsInfoResp) XXX_Size() int {
	return xxx_messageInfo_GetFriendsInfoResp.Size(m)
}
func (m *GetFriendsInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFriendsInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetFriendsInfoResp proto.InternalMessageInfo

func (m *GetFriendsInfoResp) GetFriendInfoList() []*sdk_ws.FriendInfo {
	if m != nil {
		return m.FriendInfoList
	}
	return nil
}

type AddFriendReq struct {
	FromUserID           string   `protobuf:"bytes,1,opt,name=fromUserID" json:"fromUserID,omitempty"`
	ToUserID             string   `protobuf:"bytes,2,opt,name=toUserID" json:"toUserID,omitempty"`
	ReqMsg               string   `protobuf:"bytes,3,opt,name=reqMsg" json:"reqMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFriendReq) Reset()         { *m = AddFriendReq{} }
func (m *AddFriendReq) String() string { return proto.CompactTextString(m) }
func (*AddFriendReq) ProtoMessage()    {}
func (*AddFriendReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{2}
}
func (m *AddFriendReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFriendReq.Unmarshal(m, b)
}
func (m *AddFriendReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFriendReq.Marshal(b, m, deterministic)
}
func (dst *AddFriendReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFriendReq.Merge(dst, src)
}
func (m *AddFriendReq) XXX_Size() int {
	return xxx_messageInfo_AddFriendReq.Size(m)
}
func (m *AddFriendReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFriendReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddFriendReq proto.InternalMessageInfo

func (m *AddFriendReq) GetFromUserID() string {
	if m != nil {
		return m.FromUserID
	}
	return ""
}

func (m *AddFriendReq) GetToUserID() string {
	if m != nil {
		return m.ToUserID
	}
	return ""
}

func (m *AddFriendReq) GetReqMsg() string {
	if m != nil {
		return m.ReqMsg
	}
	return ""
}

type AddFriendResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFriendResp) Reset()         { *m = AddFriendResp{} }
func (m *AddFriendResp) String() string { return proto.CompactTextString(m) }
func (*AddFriendResp) ProtoMessage()    {}
func (*AddFriendResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{3}
}
func (m *AddFriendResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFriendResp.Unmarshal(m, b)
}
func (m *AddFriendResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFriendResp.Marshal(b, m, deterministic)
}
func (dst *AddFriendResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFriendResp.Merge(dst, src)
}
func (m *AddFriendResp) XXX_Size() int {
	return xxx_messageInfo_AddFriendResp.Size(m)
}
func (m *AddFriendResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFriendResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddFriendResp proto.InternalMessageInfo

type ImportFriendReq struct {
	FriendUserIDList     []string `protobuf:"bytes,1,rep,name=FriendUserIDList" json:"FriendUserIDList,omitempty"`
	FromUserID           string   `protobuf:"bytes,2,opt,name=FromUserID" json:"FromUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportFriendReq) Reset()         { *m = ImportFriendReq{} }
func (m *ImportFriendReq) String() string { return proto.CompactTextString(m) }
func (*ImportFriendReq) ProtoMessage()    {}
func (*ImportFriendReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{4}
}
func (m *ImportFriendReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportFriendReq.Unmarshal(m, b)
}
func (m *ImportFriendReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportFriendReq.Marshal(b, m, deterministic)
}
func (dst *ImportFriendReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportFriendReq.Merge(dst, src)
}
func (m *ImportFriendReq) XXX_Size() int {
	return xxx_messageInfo_ImportFriendReq.Size(m)
}
func (m *ImportFriendReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportFriendReq.DiscardUnknown(m)
}

var xxx_messageInfo_ImportFriendReq proto.InternalMessageInfo

func (m *ImportFriendReq) GetFriendUserIDList() []string {
	if m != nil {
		return m.FriendUserIDList
	}
	return nil
}

func (m *ImportFriendReq) GetFromUserID() string {
	if m != nil {
		return m.FromUserID
	}
	return ""
}

type ImportFriendResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportFriendResp) Reset()         { *m = ImportFriendResp{} }
func (m *ImportFriendResp) String() string { return proto.CompactTextString(m) }
func (*ImportFriendResp) ProtoMessage()    {}
func (*ImportFriendResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{5}
}
func (m *ImportFriendResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportFriendResp.Unmarshal(m, b)
}
func (m *ImportFriendResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportFriendResp.Marshal(b, m, deterministic)
}
func (dst *ImportFriendResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportFriendResp.Merge(dst, src)
}
func (m *ImportFriendResp) XXX_Size() int {
	return xxx_messageInfo_ImportFriendResp.Size(m)
}
func (m *ImportFriendResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportFriendResp.DiscardUnknown(m)
}

var xxx_messageInfo_ImportFriendResp proto.InternalMessageInfo

type GetToFriendApplyListReq struct {
	UserID               string                    `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	Pagination           *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=pagination" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetToFriendApplyListReq) Reset()         { *m = GetToFriendApplyListReq{} }
func (m *GetToFriendApplyListReq) String() string { return proto.CompactTextString(m) }
func (*GetToFriendApplyListReq) ProtoMessage()    {}
func (*GetToFriendApplyListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{6}
}
func (m *GetToFriendApplyListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetToFriendApplyListReq.Unmarshal(m, b)
}
func (m *GetToFriendApplyListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetToFriendApplyListReq.Marshal(b, m, deterministic)
}
func (dst *GetToFriendApplyListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetToFriendApplyListReq.Merge(dst, src)
}
func (m *GetToFriendApplyListReq) XXX_Size() int {
	return xxx_messageInfo_GetToFriendApplyListReq.Size(m)
}
func (m *GetToFriendApplyListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetToFriendApplyListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetToFriendApplyListReq proto.InternalMessageInfo

func (m *GetToFriendApplyListReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetToFriendApplyListReq) GetPagination() *sdk_ws.RequestPagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type GetToFriendApplyListResp struct {
	FriendRequestList    []*sdk_ws.FriendRequest `protobuf:"bytes,1,rep,name=FriendRequestList" json:"FriendRequestList,omitempty"`
	Total                int32                   `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetToFriendApplyListResp) Reset()         { *m = GetToFriendApplyListResp{} }
func (m *GetToFriendApplyListResp) String() string { return proto.CompactTextString(m) }
func (*GetToFriendApplyListResp) ProtoMessage()    {}
func (*GetToFriendApplyListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{7}
}
func (m *GetToFriendApplyListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetToFriendApplyListResp.Unmarshal(m, b)
}
func (m *GetToFriendApplyListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetToFriendApplyListResp.Marshal(b, m, deterministic)
}
func (dst *GetToFriendApplyListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetToFriendApplyListResp.Merge(dst, src)
}
func (m *GetToFriendApplyListResp) XXX_Size() int {
	return xxx_messageInfo_GetToFriendApplyListResp.Size(m)
}
func (m *GetToFriendApplyListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetToFriendApplyListResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetToFriendApplyListResp proto.InternalMessageInfo

func (m *GetToFriendApplyListResp) GetFriendRequestList() []*sdk_ws.FriendRequest {
	if m != nil {
		return m.FriendRequestList
	}
	return nil
}

func (m *GetToFriendApplyListResp) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type GetFriendListReq struct {
	Pagination           *sdk_ws.RequestPagination `protobuf:"bytes,1,opt,name=pagination" json:"pagination,omitempty"`
	UserID               string                    `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetFriendListReq) Reset()         { *m = GetFriendListReq{} }
func (m *GetFriendListReq) String() string { return proto.CompactTextString(m) }
func (*GetFriendListReq) ProtoMessage()    {}
func (*GetFriendListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{8}
}
func (m *GetFriendListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFriendListReq.Unmarshal(m, b)
}
func (m *GetFriendListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFriendListReq.Marshal(b, m, deterministic)
}
func (dst *GetFriendListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFriendListReq.Merge(dst, src)
}
func (m *GetFriendListReq) XXX_Size() int {
	return xxx_messageInfo_GetFriendListReq.Size(m)
}
func (m *GetFriendListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFriendListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetFriendListReq proto.InternalMessageInfo

func (m *GetFriendListReq) GetPagination() *sdk_ws.RequestPagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *GetFriendListReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

type GetFriendListResp struct {
	FriendInfoList       []*sdk_ws.FriendInfo `protobuf:"bytes,1,rep,name=FriendInfoList" json:"FriendInfoList,omitempty"`
	Total                int32                `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetFriendListResp) Reset()         { *m = GetFriendListResp{} }
func (m *GetFriendListResp) String() string { return proto.CompactTextString(m) }
func (*GetFriendListResp) ProtoMessage()    {}
func (*GetFriendListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{9}
}
func (m *GetFriendListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFriendListResp.Unmarshal(m, b)
}
func (m *GetFriendListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFriendListResp.Marshal(b, m, deterministic)
}
func (dst *GetFriendListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFriendListResp.Merge(dst, src)
}
func (m *GetFriendListResp) XXX_Size() int {
	return xxx_messageInfo_GetFriendListResp.Size(m)
}
func (m *GetFriendListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFriendListResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetFriendListResp proto.InternalMessageInfo

func (m *GetFriendListResp) GetFriendInfoList() []*sdk_ws.FriendInfo {
	if m != nil {
		return m.FriendInfoList
	}
	return nil
}

func (m *GetFriendListResp) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type AddBlacklistReq struct {
	FromUserID           string   `protobuf:"bytes,1,opt,name=fromUserID" json:"fromUserID,omitempty"`
	ToUserID             string   `protobuf:"bytes,2,opt,name=toUserID" json:"toUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddBlacklistReq) Reset()         { *m = AddBlacklistReq{} }
func (m *AddBlacklistReq) String() string { return proto.CompactTextString(m) }
func (*AddBlacklistReq) ProtoMessage()    {}
func (*AddBlacklistReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{10}
}
func (m *AddBlacklistReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBlacklistReq.Unmarshal(m, b)
}
func (m *AddBlacklistReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBlacklistReq.Marshal(b, m, deterministic)
}
func (dst *AddBlacklistReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBlacklistReq.Merge(dst, src)
}
func (m *AddBlacklistReq) XXX_Size() int {
	return xxx_messageInfo_AddBlacklistReq.Size(m)
}
func (m *AddBlacklistReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBlacklistReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddBlacklistReq proto.InternalMessageInfo

func (m *AddBlacklistReq) GetFromUserID() string {
	if m != nil {
		return m.FromUserID
	}
	return ""
}

func (m *AddBlacklistReq) GetToUserID() string {
	if m != nil {
		return m.ToUserID
	}
	return ""
}

type AddBlacklistResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddBlacklistResp) Reset()         { *m = AddBlacklistResp{} }
func (m *AddBlacklistResp) String() string { return proto.CompactTextString(m) }
func (*AddBlacklistResp) ProtoMessage()    {}
func (*AddBlacklistResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{11}
}
func (m *AddBlacklistResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBlacklistResp.Unmarshal(m, b)
}
func (m *AddBlacklistResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBlacklistResp.Marshal(b, m, deterministic)
}
func (dst *AddBlacklistResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBlacklistResp.Merge(dst, src)
}
func (m *AddBlacklistResp) XXX_Size() int {
	return xxx_messageInfo_AddBlacklistResp.Size(m)
}
func (m *AddBlacklistResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBlacklistResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddBlacklistResp proto.InternalMessageInfo

type RemoveBlacklistReq struct {
	FromUserID           string   `protobuf:"bytes,1,opt,name=fromUserID" json:"fromUserID,omitempty"`
	ToUserID             string   `protobuf:"bytes,2,opt,name=toUserID" json:"toUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveBlacklistReq) Reset()         { *m = RemoveBlacklistReq{} }
func (m *RemoveBlacklistReq) String() string { return proto.CompactTextString(m) }
func (*RemoveBlacklistReq) ProtoMessage()    {}
func (*RemoveBlacklistReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{12}
}
func (m *RemoveBlacklistReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveBlacklistReq.Unmarshal(m, b)
}
func (m *RemoveBlacklistReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveBlacklistReq.Marshal(b, m, deterministic)
}
func (dst *RemoveBlacklistReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveBlacklistReq.Merge(dst, src)
}
func (m *RemoveBlacklistReq) XXX_Size() int {
	return xxx_messageInfo_RemoveBlacklistReq.Size(m)
}
func (m *RemoveBlacklistReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveBlacklistReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveBlacklistReq proto.InternalMessageInfo

func (m *RemoveBlacklistReq) GetFromUserID() string {
	if m != nil {
		return m.FromUserID
	}
	return ""
}

func (m *RemoveBlacklistReq) GetToUserID() string {
	if m != nil {
		return m.ToUserID
	}
	return ""
}

type RemoveBlacklistResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveBlacklistResp) Reset()         { *m = RemoveBlacklistResp{} }
func (m *RemoveBlacklistResp) String() string { return proto.CompactTextString(m) }
func (*RemoveBlacklistResp) ProtoMessage()    {}
func (*RemoveBlacklistResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{13}
}
func (m *RemoveBlacklistResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveBlacklistResp.Unmarshal(m, b)
}
func (m *RemoveBlacklistResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveBlacklistResp.Marshal(b, m, deterministic)
}
func (dst *RemoveBlacklistResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveBlacklistResp.Merge(dst, src)
}
func (m *RemoveBlacklistResp) XXX_Size() int {
	return xxx_messageInfo_RemoveBlacklistResp.Size(m)
}
func (m *RemoveBlacklistResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveBlacklistResp.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveBlacklistResp proto.InternalMessageInfo

type GetBlacklistReq struct {
	UserID               string                    `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	Pagination           *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=pagination" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetBlacklistReq) Reset()         { *m = GetBlacklistReq{} }
func (m *GetBlacklistReq) String() string { return proto.CompactTextString(m) }
func (*GetBlacklistReq) ProtoMessage()    {}
func (*GetBlacklistReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{14}
}
func (m *GetBlacklistReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlacklistReq.Unmarshal(m, b)
}
func (m *GetBlacklistReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlacklistReq.Marshal(b, m, deterministic)
}
func (dst *GetBlacklistReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlacklistReq.Merge(dst, src)
}
func (m *GetBlacklistReq) XXX_Size() int {
	return xxx_messageInfo_GetBlacklistReq.Size(m)
}
func (m *GetBlacklistReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlacklistReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlacklistReq proto.InternalMessageInfo

func (m *GetBlacklistReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetBlacklistReq) GetPagination() *sdk_ws.RequestPagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type GetBlacklistResp struct {
	BlackUserInfoList    []*sdk_ws.PublicUserInfo `protobuf:"bytes,1,rep,name=BlackUserInfoList" json:"BlackUserInfoList,omitempty"`
	Total                int32                    `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetBlacklistResp) Reset()         { *m = GetBlacklistResp{} }
func (m *GetBlacklistResp) String() string { return proto.CompactTextString(m) }
func (*GetBlacklistResp) ProtoMessage()    {}
func (*GetBlacklistResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{15}
}
func (m *GetBlacklistResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlacklistResp.Unmarshal(m, b)
}
func (m *GetBlacklistResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlacklistResp.Marshal(b, m, deterministic)
}
func (dst *GetBlacklistResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlacklistResp.Merge(dst, src)
}
func (m *GetBlacklistResp) XXX_Size() int {
	return xxx_messageInfo_GetBlacklistResp.Size(m)
}
func (m *GetBlacklistResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlacklistResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlacklistResp proto.InternalMessageInfo

func (m *GetBlacklistResp) GetBlackUserInfoList() []*sdk_ws.PublicUserInfo {
	if m != nil {
		return m.BlackUserInfoList
	}
	return nil
}

func (m *GetBlacklistResp) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type IsFriendReq struct {
	FromUserID           string   `protobuf:"bytes,1,opt,name=fromUserID" json:"fromUserID,omitempty"`
	ToUserID             string   `protobuf:"bytes,2,opt,name=toUserID" json:"toUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsFriendReq) Reset()         { *m = IsFriendReq{} }
func (m *IsFriendReq) String() string { return proto.CompactTextString(m) }
func (*IsFriendReq) ProtoMessage()    {}
func (*IsFriendReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{16}
}
func (m *IsFriendReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsFriendReq.Unmarshal(m, b)
}
func (m *IsFriendReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsFriendReq.Marshal(b, m, deterministic)
}
func (dst *IsFriendReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsFriendReq.Merge(dst, src)
}
func (m *IsFriendReq) XXX_Size() int {
	return xxx_messageInfo_IsFriendReq.Size(m)
}
func (m *IsFriendReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IsFriendReq.DiscardUnknown(m)
}

var xxx_messageInfo_IsFriendReq proto.InternalMessageInfo

func (m *IsFriendReq) GetFromUserID() string {
	if m != nil {
		return m.FromUserID
	}
	return ""
}

func (m *IsFriendReq) GetToUserID() string {
	if m != nil {
		return m.ToUserID
	}
	return ""
}

type IsFriendResp struct {
	Response             bool     `protobuf:"varint,1,opt,name=Response" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsFriendResp) Reset()         { *m = IsFriendResp{} }
func (m *IsFriendResp) String() string { return proto.CompactTextString(m) }
func (*IsFriendResp) ProtoMessage()    {}
func (*IsFriendResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{17}
}
func (m *IsFriendResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsFriendResp.Unmarshal(m, b)
}
func (m *IsFriendResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsFriendResp.Marshal(b, m, deterministic)
}
func (dst *IsFriendResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsFriendResp.Merge(dst, src)
}
func (m *IsFriendResp) XXX_Size() int {
	return xxx_messageInfo_IsFriendResp.Size(m)
}
func (m *IsFriendResp) XXX_DiscardUnknown() {
	xxx_messageInfo_IsFriendResp.DiscardUnknown(m)
}

var xxx_messageInfo_IsFriendResp proto.InternalMessageInfo

func (m *IsFriendResp) GetResponse() bool {
	if m != nil {
		return m.Response
	}
	return false
}

type IsInBlackListReq struct {
	FromUserID           string   `protobuf:"bytes,1,opt,name=fromUserID" json:"fromUserID,omitempty"`
	ToUserID             string   `protobuf:"bytes,2,opt,name=toUserID" json:"toUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsInBlackListReq) Reset()         { *m = IsInBlackListReq{} }
func (m *IsInBlackListReq) String() string { return proto.CompactTextString(m) }
func (*IsInBlackListReq) ProtoMessage()    {}
func (*IsInBlackListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{18}
}
func (m *IsInBlackListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsInBlackListReq.Unmarshal(m, b)
}
func (m *IsInBlackListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsInBlackListReq.Marshal(b, m, deterministic)
}
func (dst *IsInBlackListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsInBlackListReq.Merge(dst, src)
}
func (m *IsInBlackListReq) XXX_Size() int {
	return xxx_messageInfo_IsInBlackListReq.Size(m)
}
func (m *IsInBlackListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IsInBlackListReq.DiscardUnknown(m)
}

var xxx_messageInfo_IsInBlackListReq proto.InternalMessageInfo

func (m *IsInBlackListReq) GetFromUserID() string {
	if m != nil {
		return m.FromUserID
	}
	return ""
}

func (m *IsInBlackListReq) GetToUserID() string {
	if m != nil {
		return m.ToUserID
	}
	return ""
}

type IsInBlackListResp struct {
	Response             bool     `protobuf:"varint,1,opt,name=Response" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsInBlackListResp) Reset()         { *m = IsInBlackListResp{} }
func (m *IsInBlackListResp) String() string { return proto.CompactTextString(m) }
func (*IsInBlackListResp) ProtoMessage()    {}
func (*IsInBlackListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{19}
}
func (m *IsInBlackListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsInBlackListResp.Unmarshal(m, b)
}
func (m *IsInBlackListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsInBlackListResp.Marshal(b, m, deterministic)
}
func (dst *IsInBlackListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsInBlackListResp.Merge(dst, src)
}
func (m *IsInBlackListResp) XXX_Size() int {
	return xxx_messageInfo_IsInBlackListResp.Size(m)
}
func (m *IsInBlackListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_IsInBlackListResp.DiscardUnknown(m)
}

var xxx_messageInfo_IsInBlackListResp proto.InternalMessageInfo

func (m *IsInBlackListResp) GetResponse() bool {
	if m != nil {
		return m.Response
	}
	return false
}

type DeleteFriendReq struct {
	FromUserID           string   `protobuf:"bytes,1,opt,name=fromUserID" json:"fromUserID,omitempty"`
	ToUserID             string   `protobuf:"bytes,2,opt,name=toUserID" json:"toUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteFriendReq) Reset()         { *m = DeleteFriendReq{} }
func (m *DeleteFriendReq) String() string { return proto.CompactTextString(m) }
func (*DeleteFriendReq) ProtoMessage()    {}
func (*DeleteFriendReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{20}
}
func (m *DeleteFriendReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteFriendReq.Unmarshal(m, b)
}
func (m *DeleteFriendReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteFriendReq.Marshal(b, m, deterministic)
}
func (dst *DeleteFriendReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteFriendReq.Merge(dst, src)
}
func (m *DeleteFriendReq) XXX_Size() int {
	return xxx_messageInfo_DeleteFriendReq.Size(m)
}
func (m *DeleteFriendReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteFriendReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteFriendReq proto.InternalMessageInfo

func (m *DeleteFriendReq) GetFromUserID() string {
	if m != nil {
		return m.FromUserID
	}
	return ""
}

func (m *DeleteFriendReq) GetToUserID() string {
	if m != nil {
		return m.ToUserID
	}
	return ""
}

type DeleteFriendResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteFriendResp) Reset()         { *m = DeleteFriendResp{} }
func (m *DeleteFriendResp) String() string { return proto.CompactTextString(m) }
func (*DeleteFriendResp) ProtoMessage()    {}
func (*DeleteFriendResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{21}
}
func (m *DeleteFriendResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteFriendResp.Unmarshal(m, b)
}
func (m *DeleteFriendResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteFriendResp.Marshal(b, m, deterministic)
}
func (dst *DeleteFriendResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteFriendResp.Merge(dst, src)
}
func (m *DeleteFriendResp) XXX_Size() int {
	return xxx_messageInfo_DeleteFriendResp.Size(m)
}
func (m *DeleteFriendResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteFriendResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteFriendResp proto.InternalMessageInfo

// process
type FriendApplyResponseReq struct {
	FromUserID           string   `protobuf:"bytes,1,opt,name=fromUserID" json:"fromUserID,omitempty"`
	ToUserID             string   `protobuf:"bytes,2,opt,name=toUserID" json:"toUserID,omitempty"`
	HandleResult         int32    `protobuf:"varint,3,opt,name=handleResult" json:"handleResult,omitempty"`
	HandleMsg            string   `protobuf:"bytes,4,opt,name=handleMsg" json:"handleMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendApplyResponseReq) Reset()         { *m = FriendApplyResponseReq{} }
func (m *FriendApplyResponseReq) String() string { return proto.CompactTextString(m) }
func (*FriendApplyResponseReq) ProtoMessage()    {}
func (*FriendApplyResponseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{22}
}
func (m *FriendApplyResponseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendApplyResponseReq.Unmarshal(m, b)
}
func (m *FriendApplyResponseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendApplyResponseReq.Marshal(b, m, deterministic)
}
func (dst *FriendApplyResponseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendApplyResponseReq.Merge(dst, src)
}
func (m *FriendApplyResponseReq) XXX_Size() int {
	return xxx_messageInfo_FriendApplyResponseReq.Size(m)
}
func (m *FriendApplyResponseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendApplyResponseReq.DiscardUnknown(m)
}

var xxx_messageInfo_FriendApplyResponseReq proto.InternalMessageInfo

func (m *FriendApplyResponseReq) GetFromUserID() string {
	if m != nil {
		return m.FromUserID
	}
	return ""
}

func (m *FriendApplyResponseReq) GetToUserID() string {
	if m != nil {
		return m.ToUserID
	}
	return ""
}

func (m *FriendApplyResponseReq) GetHandleResult() int32 {
	if m != nil {
		return m.HandleResult
	}
	return 0
}

func (m *FriendApplyResponseReq) GetHandleMsg() string {
	if m != nil {
		return m.HandleMsg
	}
	return ""
}

type FriendApplyResponseResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendApplyResponseResp) Reset()         { *m = FriendApplyResponseResp{} }
func (m *FriendApplyResponseResp) String() string { return proto.CompactTextString(m) }
func (*FriendApplyResponseResp) ProtoMessage()    {}
func (*FriendApplyResponseResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{23}
}
func (m *FriendApplyResponseResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendApplyResponseResp.Unmarshal(m, b)
}
func (m *FriendApplyResponseResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendApplyResponseResp.Marshal(b, m, deterministic)
}
func (dst *FriendApplyResponseResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendApplyResponseResp.Merge(dst, src)
}
func (m *FriendApplyResponseResp) XXX_Size() int {
	return xxx_messageInfo_FriendApplyResponseResp.Size(m)
}
func (m *FriendApplyResponseResp) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendApplyResponseResp.DiscardUnknown(m)
}

var xxx_messageInfo_FriendApplyResponseResp proto.InternalMessageInfo

type SetFriendRemarkReq struct {
	FromUserID           string   `protobuf:"bytes,1,opt,name=fromUserID" json:"fromUserID,omitempty"`
	ToUserID             string   `protobuf:"bytes,2,opt,name=toUserID" json:"toUserID,omitempty"`
	Remark               string   `protobuf:"bytes,3,opt,name=remark" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetFriendRemarkReq) Reset()         { *m = SetFriendRemarkReq{} }
func (m *SetFriendRemarkReq) String() string { return proto.CompactTextString(m) }
func (*SetFriendRemarkReq) ProtoMessage()    {}
func (*SetFriendRemarkReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{24}
}
func (m *SetFriendRemarkReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFriendRemarkReq.Unmarshal(m, b)
}
func (m *SetFriendRemarkReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFriendRemarkReq.Marshal(b, m, deterministic)
}
func (dst *SetFriendRemarkReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFriendRemarkReq.Merge(dst, src)
}
func (m *SetFriendRemarkReq) XXX_Size() int {
	return xxx_messageInfo_SetFriendRemarkReq.Size(m)
}
func (m *SetFriendRemarkReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFriendRemarkReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetFriendRemarkReq proto.InternalMessageInfo

func (m *SetFriendRemarkReq) GetFromUserID() string {
	if m != nil {
		return m.FromUserID
	}
	return ""
}

func (m *SetFriendRemarkReq) GetToUserID() string {
	if m != nil {
		return m.ToUserID
	}
	return ""
}

func (m *SetFriendRemarkReq) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type SetFriendRemarkResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetFriendRemarkResp) Reset()         { *m = SetFriendRemarkResp{} }
func (m *SetFriendRemarkResp) String() string { return proto.CompactTextString(m) }
func (*SetFriendRemarkResp) ProtoMessage()    {}
func (*SetFriendRemarkResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{25}
}
func (m *SetFriendRemarkResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFriendRemarkResp.Unmarshal(m, b)
}
func (m *SetFriendRemarkResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFriendRemarkResp.Marshal(b, m, deterministic)
}
func (dst *SetFriendRemarkResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFriendRemarkResp.Merge(dst, src)
}
func (m *SetFriendRemarkResp) XXX_Size() int {
	return xxx_messageInfo_SetFriendRemarkResp.Size(m)
}
func (m *SetFriendRemarkResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFriendRemarkResp.DiscardUnknown(m)
}

var xxx_messageInfo_SetFriendRemarkResp proto.InternalMessageInfo

type GetFromFriendApplyListReq struct {
	UserID               string                    `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	Pagination           *sdk_ws.RequestPagination `protobuf:"bytes,2,opt,name=pagination" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetFromFriendApplyListReq) Reset()         { *m = GetFromFriendApplyListReq{} }
func (m *GetFromFriendApplyListReq) String() string { return proto.CompactTextString(m) }
func (*GetFromFriendApplyListReq) ProtoMessage()    {}
func (*GetFromFriendApplyListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{26}
}
func (m *GetFromFriendApplyListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFromFriendApplyListReq.Unmarshal(m, b)
}
func (m *GetFromFriendApplyListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFromFriendApplyListReq.Marshal(b, m, deterministic)
}
func (dst *GetFromFriendApplyListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFromFriendApplyListReq.Merge(dst, src)
}
func (m *GetFromFriendApplyListReq) XXX_Size() int {
	return xxx_messageInfo_GetFromFriendApplyListReq.Size(m)
}
func (m *GetFromFriendApplyListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFromFriendApplyListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetFromFriendApplyListReq proto.InternalMessageInfo

func (m *GetFromFriendApplyListReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetFromFriendApplyListReq) GetPagination() *sdk_ws.RequestPagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type GetFromFriendApplyListResp struct {
	FriendRequestList    []*sdk_ws.FriendRequest `protobuf:"bytes,1,rep,name=friendRequestList" json:"friendRequestList,omitempty"`
	Total                int32                   `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetFromFriendApplyListResp) Reset()         { *m = GetFromFriendApplyListResp{} }
func (m *GetFromFriendApplyListResp) String() string { return proto.CompactTextString(m) }
func (*GetFromFriendApplyListResp) ProtoMessage()    {}
func (*GetFromFriendApplyListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_971ef02230ce9e85, []int{27}
}
func (m *GetFromFriendApplyListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFromFriendApplyListResp.Unmarshal(m, b)
}
func (m *GetFromFriendApplyListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFromFriendApplyListResp.Marshal(b, m, deterministic)
}
func (dst *GetFromFriendApplyListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFromFriendApplyListResp.Merge(dst, src)
}
func (m *GetFromFriendApplyListResp) XXX_Size() int {
	return xxx_messageInfo_GetFromFriendApplyListResp.Size(m)
}
func (m *GetFromFriendApplyListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFromFriendApplyListResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetFromFriendApplyListResp proto.InternalMessageInfo

func (m *GetFromFriendApplyListResp) GetFriendRequestList() []*sdk_ws.FriendRequest {
	if m != nil {
		return m.FriendRequestList
	}
	return nil
}

func (m *GetFromFriendApplyListResp) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func init() {
	proto.RegisterType((*GetFriendsInfoReq)(nil), "friend.GetFriendsInfoReq")
	proto.RegisterType((*GetFriendsInfoResp)(nil), "friend.GetFriendsInfoResp")
	proto.RegisterType((*AddFriendReq)(nil), "friend.AddFriendReq")
	proto.RegisterType((*AddFriendResp)(nil), "friend.AddFriendResp")
	proto.RegisterType((*ImportFriendReq)(nil), "friend.ImportFriendReq")
	proto.RegisterType((*ImportFriendResp)(nil), "friend.ImportFriendResp")
	proto.RegisterType((*GetToFriendApplyListReq)(nil), "friend.GetToFriendApplyListReq")
	proto.RegisterType((*GetToFriendApplyListResp)(nil), "friend.GetToFriendApplyListResp")
	proto.RegisterType((*GetFriendListReq)(nil), "friend.GetFriendListReq")
	proto.RegisterType((*GetFriendListResp)(nil), "friend.GetFriendListResp")
	proto.RegisterType((*AddBlacklistReq)(nil), "friend.AddBlacklistReq")
	proto.RegisterType((*AddBlacklistResp)(nil), "friend.AddBlacklistResp")
	proto.RegisterType((*RemoveBlacklistReq)(nil), "friend.RemoveBlacklistReq")
	proto.RegisterType((*RemoveBlacklistResp)(nil), "friend.RemoveBlacklistResp")
	proto.RegisterType((*GetBlacklistReq)(nil), "friend.GetBlacklistReq")
	proto.RegisterType((*GetBlacklistResp)(nil), "friend.GetBlacklistResp")
	proto.RegisterType((*IsFriendReq)(nil), "friend.IsFriendReq")
	proto.RegisterType((*IsFriendResp)(nil), "friend.IsFriendResp")
	proto.RegisterType((*IsInBlackListReq)(nil), "friend.IsInBlackListReq")
	proto.RegisterType((*IsInBlackListResp)(nil), "friend.IsInBlackListResp")
	proto.RegisterType((*DeleteFriendReq)(nil), "friend.DeleteFriendReq")
	proto.RegisterType((*DeleteFriendResp)(nil), "friend.DeleteFriendResp")
	proto.RegisterType((*FriendApplyResponseReq)(nil), "friend.FriendApplyResponseReq")
	proto.RegisterType((*FriendApplyResponseResp)(nil), "friend.FriendApplyResponseResp")
	proto.RegisterType((*SetFriendRemarkReq)(nil), "friend.SetFriendRemarkReq")
	proto.RegisterType((*SetFriendRemarkResp)(nil), "friend.SetFriendRemarkResp")
	proto.RegisterType((*GetFromFriendApplyListReq)(nil), "friend.GetFromFriendApplyListReq")
	proto.RegisterType((*GetFromFriendApplyListResp)(nil), "friend.GetFromFriendApplyListResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Friend service

type FriendClient interface {
	// 申请加好友
	AddFriend(ctx context.Context, in *AddFriendReq, opts ...grpc.CallOption) (*AddFriendResp, error)
	// 获取收到的好友申请列表
	GetToFriendApplyList(ctx context.Context, in *GetToFriendApplyListReq, opts ...grpc.CallOption) (*GetToFriendApplyListResp, error)
	// 获取主动发出去的好友申请列表
	GetFromFriendApplyList(ctx context.Context, in *GetFromFriendApplyListReq, opts ...grpc.CallOption) (*GetFromFriendApplyListResp, error)
	// 获取好友列表
	GetFriendList(ctx context.Context, in *GetFriendListReq, opts ...grpc.CallOption) (*GetFriendListResp, error)
	// 添加黑名单
	AddBlacklist(ctx context.Context, in *AddBlacklistReq, opts ...grpc.CallOption) (*AddBlacklistResp, error)
	// 移除黑名单
	RemoveBlacklist(ctx context.Context, in *RemoveBlacklistReq, opts ...grpc.CallOption) (*RemoveBlacklistResp, error)
	// 判断是否好友关系
	IsFriend(ctx context.Context, in *IsFriendReq, opts ...grpc.CallOption) (*IsFriendResp, error)
	// 判断是否在黑名单中
	IsInBlackList(ctx context.Context, in *IsInBlackListReq, opts ...grpc.CallOption) (*IsInBlackListResp, error)
	// 获取黑名单列表
	GetBlacklist(ctx context.Context, in *GetBlacklistReq, opts ...grpc.CallOption) (*GetBlacklistResp, error)
	// 删除好友
	DeleteFriend(ctx context.Context, in *DeleteFriendReq, opts ...grpc.CallOption) (*DeleteFriendResp, error)
	// 对好友申请响应（同意或拒绝）
	FriendApplyResponse(ctx context.Context, in *FriendApplyResponseReq, opts ...grpc.CallOption) (*FriendApplyResponseResp, error)
	// 设置好友备注
	SetFriendRemark(ctx context.Context, in *SetFriendRemarkReq, opts ...grpc.CallOption) (*SetFriendRemarkResp, error)
	// 导入好友关系
	ImportFriend(ctx context.Context, in *ImportFriendReq, opts ...grpc.CallOption) (*ImportFriendResp, error)
	// 获取指定好友信息
	GetFriendsInfo(ctx context.Context, in *GetFriendsInfoReq, opts ...grpc.CallOption) (*GetFriendsInfoResp, error)
}

type friendClient struct {
	cc *grpc.ClientConn
}

func NewFriendClient(cc *grpc.ClientConn) FriendClient {
	return &friendClient{cc}
}

func (c *friendClient) AddFriend(ctx context.Context, in *AddFriendReq, opts ...grpc.CallOption) (*AddFriendResp, error) {
	out := new(AddFriendResp)
	err := grpc.Invoke(ctx, "/friend.friend/addFriend", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) GetToFriendApplyList(ctx context.Context, in *GetToFriendApplyListReq, opts ...grpc.CallOption) (*GetToFriendApplyListResp, error) {
	out := new(GetToFriendApplyListResp)
	err := grpc.Invoke(ctx, "/friend.friend/getToFriendApplyList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) GetFromFriendApplyList(ctx context.Context, in *GetFromFriendApplyListReq, opts ...grpc.CallOption) (*GetFromFriendApplyListResp, error) {
	out := new(GetFromFriendApplyListResp)
	err := grpc.Invoke(ctx, "/friend.friend/getFromFriendApplyList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) GetFriendList(ctx context.Context, in *GetFriendListReq, opts ...grpc.CallOption) (*GetFriendListResp, error) {
	out := new(GetFriendListResp)
	err := grpc.Invoke(ctx, "/friend.friend/getFriendList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) AddBlacklist(ctx context.Context, in *AddBlacklistReq, opts ...grpc.CallOption) (*AddBlacklistResp, error) {
	out := new(AddBlacklistResp)
	err := grpc.Invoke(ctx, "/friend.friend/addBlacklist", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) RemoveBlacklist(ctx context.Context, in *RemoveBlacklistReq, opts ...grpc.CallOption) (*RemoveBlacklistResp, error) {
	out := new(RemoveBlacklistResp)
	err := grpc.Invoke(ctx, "/friend.friend/removeBlacklist", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) IsFriend(ctx context.Context, in *IsFriendReq, opts ...grpc.CallOption) (*IsFriendResp, error) {
	out := new(IsFriendResp)
	err := grpc.Invoke(ctx, "/friend.friend/isFriend", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) IsInBlackList(ctx context.Context, in *IsInBlackListReq, opts ...grpc.CallOption) (*IsInBlackListResp, error) {
	out := new(IsInBlackListResp)
	err := grpc.Invoke(ctx, "/friend.friend/isInBlackList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) GetBlacklist(ctx context.Context, in *GetBlacklistReq, opts ...grpc.CallOption) (*GetBlacklistResp, error) {
	out := new(GetBlacklistResp)
	err := grpc.Invoke(ctx, "/friend.friend/getBlacklist", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) DeleteFriend(ctx context.Context, in *DeleteFriendReq, opts ...grpc.CallOption) (*DeleteFriendResp, error) {
	out := new(DeleteFriendResp)
	err := grpc.Invoke(ctx, "/friend.friend/deleteFriend", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) FriendApplyResponse(ctx context.Context, in *FriendApplyResponseReq, opts ...grpc.CallOption) (*FriendApplyResponseResp, error) {
	out := new(FriendApplyResponseResp)
	err := grpc.Invoke(ctx, "/friend.friend/friendApplyResponse", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) SetFriendRemark(ctx context.Context, in *SetFriendRemarkReq, opts ...grpc.CallOption) (*SetFriendRemarkResp, error) {
	out := new(SetFriendRemarkResp)
	err := grpc.Invoke(ctx, "/friend.friend/setFriendRemark", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) ImportFriend(ctx context.Context, in *ImportFriendReq, opts ...grpc.CallOption) (*ImportFriendResp, error) {
	out := new(ImportFriendResp)
	err := grpc.Invoke(ctx, "/friend.friend/importFriend", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) GetFriendsInfo(ctx context.Context, in *GetFriendsInfoReq, opts ...grpc.CallOption) (*GetFriendsInfoResp, error) {
	out := new(GetFriendsInfoResp)
	err := grpc.Invoke(ctx, "/friend.friend/getFriendsInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Friend service

type FriendServer interface {
	// 申请加好友
	AddFriend(context.Context, *AddFriendReq) (*AddFriendResp, error)
	// 获取收到的好友申请列表
	GetToFriendApplyList(context.Context, *GetToFriendApplyListReq) (*GetToFriendApplyListResp, error)
	// 获取主动发出去的好友申请列表
	GetFromFriendApplyList(context.Context, *GetFromFriendApplyListReq) (*GetFromFriendApplyListResp, error)
	// 获取好友列表
	GetFriendList(context.Context, *GetFriendListReq) (*GetFriendListResp, error)
	// 添加黑名单
	AddBlacklist(context.Context, *AddBlacklistReq) (*AddBlacklistResp, error)
	// 移除黑名单
	RemoveBlacklist(context.Context, *RemoveBlacklistReq) (*RemoveBlacklistResp, error)
	// 判断是否好友关系
	IsFriend(context.Context, *IsFriendReq) (*IsFriendResp, error)
	// 判断是否在黑名单中
	IsInBlackList(context.Context, *IsInBlackListReq) (*IsInBlackListResp, error)
	// 获取黑名单列表
	GetBlacklist(context.Context, *GetBlacklistReq) (*GetBlacklistResp, error)
	// 删除好友
	DeleteFriend(context.Context, *DeleteFriendReq) (*DeleteFriendResp, error)
	// 对好友申请响应（同意或拒绝）
	FriendApplyResponse(context.Context, *FriendApplyResponseReq) (*FriendApplyResponseResp, error)
	// 设置好友备注
	SetFriendRemark(context.Context, *SetFriendRemarkReq) (*SetFriendRemarkResp, error)
	// 导入好友关系
	ImportFriend(context.Context, *ImportFriendReq) (*ImportFriendResp, error)
	// 获取指定好友信息
	GetFriendsInfo(context.Context, *GetFriendsInfoReq) (*GetFriendsInfoResp, error)
}

func RegisterFriendServer(s *grpc.Server, srv FriendServer) {
	s.RegisterService(&_Friend_serviceDesc, srv)
}

func _Friend_AddFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFriendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).AddFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/AddFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).AddFriend(ctx, req.(*AddFriendReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_GetToFriendApplyList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetToFriendApplyListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).GetToFriendApplyList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/GetToFriendApplyList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).GetToFriendApplyList(ctx, req.(*GetToFriendApplyListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_GetFromFriendApplyList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFromFriendApplyListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).GetFromFriendApplyList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/GetFromFriendApplyList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).GetFromFriendApplyList(ctx, req.(*GetFromFriendApplyListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_GetFriendList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFriendListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).GetFriendList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/GetFriendList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).GetFriendList(ctx, req.(*GetFriendListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_AddBlacklist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBlacklistReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).AddBlacklist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/AddBlacklist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).AddBlacklist(ctx, req.(*AddBlacklistReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_RemoveBlacklist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveBlacklistReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).RemoveBlacklist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/RemoveBlacklist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).RemoveBlacklist(ctx, req.(*RemoveBlacklistReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_IsFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsFriendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).IsFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/IsFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).IsFriend(ctx, req.(*IsFriendReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_IsInBlackList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsInBlackListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).IsInBlackList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/IsInBlackList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).IsInBlackList(ctx, req.(*IsInBlackListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_GetBlacklist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlacklistReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).GetBlacklist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/GetBlacklist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).GetBlacklist(ctx, req.(*GetBlacklistReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_DeleteFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFriendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).DeleteFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/DeleteFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).DeleteFriend(ctx, req.(*DeleteFriendReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_FriendApplyResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FriendApplyResponseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).FriendApplyResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/FriendApplyResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).FriendApplyResponse(ctx, req.(*FriendApplyResponseReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_SetFriendRemark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetFriendRemarkReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).SetFriendRemark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/SetFriendRemark",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).SetFriendRemark(ctx, req.(*SetFriendRemarkReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_ImportFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportFriendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).ImportFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/ImportFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).ImportFriend(ctx, req.(*ImportFriendReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_GetFriendsInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFriendsInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).GetFriendsInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/friend.friend/GetFriendsInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).GetFriendsInfo(ctx, req.(*GetFriendsInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Friend_serviceDesc = grpc.ServiceDesc{
	ServiceName: "friend.friend",
	HandlerType: (*FriendServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "addFriend",
			Handler:    _Friend_AddFriend_Handler,
		},
		{
			MethodName: "getToFriendApplyList",
			Handler:    _Friend_GetToFriendApplyList_Handler,
		},
		{
			MethodName: "getFromFriendApplyList",
			Handler:    _Friend_GetFromFriendApplyList_Handler,
		},
		{
			MethodName: "getFriendList",
			Handler:    _Friend_GetFriendList_Handler,
		},
		{
			MethodName: "addBlacklist",
			Handler:    _Friend_AddBlacklist_Handler,
		},
		{
			MethodName: "removeBlacklist",
			Handler:    _Friend_RemoveBlacklist_Handler,
		},
		{
			MethodName: "isFriend",
			Handler:    _Friend_IsFriend_Handler,
		},
		{
			MethodName: "isInBlackList",
			Handler:    _Friend_IsInBlackList_Handler,
		},
		{
			MethodName: "getBlacklist",
			Handler:    _Friend_GetBlacklist_Handler,
		},
		{
			MethodName: "deleteFriend",
			Handler:    _Friend_DeleteFriend_Handler,
		},
		{
			MethodName: "friendApplyResponse",
			Handler:    _Friend_FriendApplyResponse_Handler,
		},
		{
			MethodName: "setFriendRemark",
			Handler:    _Friend_SetFriendRemark_Handler,
		},
		{
			MethodName: "importFriend",
			Handler:    _Friend_ImportFriend_Handler,
		},
		{
			MethodName: "getFriendsInfo",
			Handler:    _Friend_GetFriendsInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "friend/friend.proto",
}

func init() { proto.RegisterFile("friend/friend.proto", fileDescriptor_friend_971ef02230ce9e85) }

var fileDescriptor_friend_971ef02230ce9e85 = []byte{
	// 899 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0x5f, 0x6f, 0xdb, 0x36,
	0x10, 0x87, 0x93, 0x25, 0x88, 0x2f, 0x6e, 0xed, 0x5c, 0xd2, 0x44, 0xd1, 0xb6, 0xc6, 0x21, 0xf6,
	0x10, 0x14, 0x68, 0x0c, 0x64, 0x18, 0x30, 0x60, 0x4f, 0x2e, 0xb2, 0x06, 0x1a, 0xea, 0x36, 0x53,
	0xb7, 0x01, 0xdb, 0x30, 0x18, 0x4a, 0x4d, 0xbb, 0x42, 0x64, 0x89, 0xd1, 0xc9, 0x0d, 0xf2, 0x36,
	0xec, 0x61, 0x1f, 0x61, 0x9f, 0x77, 0x10, 0x69, 0x89, 0xd4, 0xbf, 0xb6, 0x68, 0xbc, 0x3d, 0xc9,
	0x3c, 0xde, 0xff, 0xa3, 0x7f, 0x3f, 0x12, 0x76, 0xa7, 0xb1, 0xcf, 0xc3, 0xc9, 0x40, 0x7d, 0x4e,
	0x45, 0x1c, 0x25, 0x11, 0x6e, 0xaa, 0x95, 0x7d, 0xf2, 0x4a, 0xf0, 0xf0, 0xa9, 0x33, 0x7a, 0xfa,
	0x9a, 0xc7, 0xef, 0x78, 0x3c, 0x10, 0xd7, 0xb3, 0x81, 0xd4, 0x18, 0xd0, 0xe4, 0x7a, 0x7c, 0x4b,
	0x83, 0x5b, 0x52, 0x16, 0xec, 0x47, 0xd8, 0xb9, 0xe0, 0xc9, 0x73, 0x69, 0x46, 0x4e, 0x38, 0x8d,
	0x5c, 0x7e, 0x83, 0x8f, 0x01, 0xa6, 0x71, 0x34, 0xff, 0x99, 0x78, 0xec, 0x9c, 0x5b, 0xad, 0x7e,
	0xeb, 0xa4, 0xed, 0x1a, 0x12, 0xfc, 0x02, 0xda, 0x49, 0xa4, 0x7e, 0x93, 0xb5, 0xd6, 0x5f, 0x3f,
	0x69, 0xbb, 0x5a, 0xc0, 0x7e, 0x07, 0x2c, 0xbb, 0x24, 0x81, 0xdf, 0xc3, 0x43, 0x25, 0x4a, 0x25,
	0x2f, 0x7c, 0x4a, 0xac, 0x56, 0x7f, 0xfd, 0x64, 0xfb, 0xec, 0xcb, 0x53, 0x92, 0x39, 0x8e, 0x3d,
	0xe1, 0x8f, 0x85, 0x17, 0x7b, 0x73, 0x3a, 0xd5, 0x8a, 0x6e, 0xc9, 0x88, 0x5d, 0x41, 0x67, 0x38,
	0x99, 0x28, 0xe1, 0xc7, 0xa4, 0x6a, 0xc3, 0x56, 0x96, 0x99, 0xb5, 0x26, 0x77, 0xf3, 0x35, 0xee,
	0xc3, 0x66, 0xcc, 0x6f, 0x46, 0x34, 0xb3, 0xd6, 0xe5, 0xce, 0x72, 0xc5, 0xba, 0xf0, 0xc0, 0x88,
	0x41, 0x82, 0xfd, 0x01, 0x5d, 0x67, 0x2e, 0xa2, 0x38, 0xd1, 0x71, 0x9f, 0x40, 0x4f, 0x2d, 0x94,
	0xaf, 0xbc, 0xa0, 0xb6, 0x5b, 0x91, 0xa7, 0x39, 0x3e, 0xd7, 0x39, 0xaa, 0x2c, 0x0c, 0x09, 0x43,
	0xe8, 0x15, 0xdd, 0x93, 0x60, 0xb7, 0x70, 0x70, 0xc1, 0x93, 0x9f, 0x22, 0x25, 0x1a, 0x0a, 0x11,
	0xdc, 0xa5, 0xbe, 0xd2, 0xd0, 0xfb, 0xb0, 0xb9, 0x30, 0xcb, 0x5d, 0xae, 0xf0, 0x1c, 0x40, 0x78,
	0x33, 0x3f, 0xf4, 0x12, 0x3f, 0x0a, 0x65, 0x98, 0xed, 0xb3, 0xaf, 0x6a, 0xba, 0xeb, 0xf2, 0x9b,
	0x05, 0xa7, 0xe4, 0x32, 0xd7, 0x75, 0x0d, 0x3b, 0xf6, 0x67, 0x0b, 0xac, 0xfa, 0xc8, 0x24, 0xf0,
	0x25, 0xec, 0xe4, 0x2d, 0x48, 0x7d, 0x18, 0x73, 0xec, 0x37, 0xce, 0x71, 0xa9, 0xeb, 0x56, 0x4d,
	0x71, 0x0f, 0x36, 0x92, 0x28, 0xf1, 0x02, 0x99, 0xed, 0x86, 0xab, 0x16, 0x4c, 0x40, 0x2f, 0x3f,
	0x40, 0x59, 0xd1, 0xc5, 0xe2, 0x5a, 0x9f, 0x56, 0x9c, 0xd1, 0xba, 0x35, 0xb3, 0x75, 0x4c, 0x18,
	0xff, 0x82, 0xbc, 0xd8, 0xd5, 0x9c, 0xd8, 0x86, 0x1a, 0x47, 0xd0, 0x1d, 0x4e, 0x26, 0xcf, 0x02,
	0xef, 0xcd, 0x75, 0xb0, 0x2c, 0xf1, 0x1e, 0x47, 0x39, 0x3d, 0x42, 0x45, 0x77, 0x24, 0xd8, 0x25,
	0xa0, 0xcb, 0xe7, 0xd1, 0x3b, 0xbe, 0xb2, 0x28, 0x8f, 0x60, 0xb7, 0xe2, 0x91, 0x04, 0x8b, 0xa0,
	0x7b, 0xc1, 0x93, 0x42, 0x94, 0xff, 0xf6, 0x8c, 0xde, 0xc9, 0x03, 0x52, 0x48, 0x02, 0x5f, 0xc1,
	0x8e, 0x14, 0xc8, 0x54, 0x8b, 0x03, 0x3b, 0xae, 0x09, 0x70, 0xb9, 0xb8, 0x0a, 0xfc, 0x37, 0x99,
	0xb2, 0x5b, 0xb5, 0x6d, 0x98, 0x9b, 0x03, 0xdb, 0x0e, 0xad, 0x04, 0x7e, 0xd8, 0x13, 0xe8, 0x68,
	0x57, 0x24, 0x52, 0xdd, 0xf4, 0x1b, 0x85, 0xc4, 0xa5, 0xa7, 0x2d, 0x37, 0x5f, 0xb3, 0x97, 0xd0,
	0x73, 0xc8, 0x09, 0x65, 0x96, 0x2f, 0x56, 0x30, 0xc9, 0x01, 0xec, 0x94, 0xfc, 0x7d, 0x20, 0x81,
	0x11, 0x74, 0xcf, 0x79, 0xc0, 0x13, 0xbe, 0x9a, 0xda, 0x11, 0x7a, 0x45, 0x77, 0x24, 0xd8, 0x3f,
	0x2d, 0xd8, 0x37, 0x40, 0x27, 0x0b, 0x7d, 0x5f, 0x94, 0x67, 0xd0, 0x79, 0xeb, 0x85, 0x93, 0x80,
	0xbb, 0x9c, 0x16, 0x41, 0x22, 0xb1, 0x7e, 0xc3, 0x2d, 0xc8, 0x52, 0x42, 0x53, 0xeb, 0x94, 0x0c,
	0x3e, 0x93, 0x0e, 0xb4, 0x80, 0x1d, 0xc2, 0x41, 0x6d, 0x5e, 0x24, 0xd8, 0x5b, 0xc0, 0xd7, 0x3c,
	0xc7, 0xed, 0xb9, 0x17, 0x5f, 0xaf, 0x84, 0x94, 0x52, 0x47, 0x9a, 0x94, 0xd2, 0x55, 0xfa, 0xdf,
	0xab, 0x44, 0x22, 0xc1, 0xee, 0xe0, 0x50, 0x22, 0x57, 0x34, 0xff, 0xdf, 0x99, 0xe2, 0xaf, 0x16,
	0xd8, 0x4d, 0xb1, 0x15, 0x57, 0x4c, 0x3f, 0x9d, 0x2b, 0xa6, 0x1f, 0xc7, 0x15, 0x67, 0x7f, 0x6f,
	0xc1, 0xf2, 0xd2, 0x83, 0xdf, 0x42, 0xdb, 0xcb, 0x68, 0x1b, 0xf7, 0x4e, 0x97, 0x17, 0x23, 0xf3,
	0xb6, 0x60, 0x3f, 0xaa, 0x91, 0x92, 0xc0, 0x5f, 0x61, 0x6f, 0x56, 0x43, 0x79, 0x78, 0x94, 0xa9,
	0x37, 0x50, 0xb1, 0xdd, 0x7f, 0xbf, 0x02, 0x09, 0x1c, 0xc3, 0xfe, 0xac, 0xb6, 0x47, 0x78, 0x6c,
	0xd8, 0xd6, 0xcf, 0xcf, 0x66, 0x1f, 0x52, 0x21, 0x81, 0xe7, 0xf0, 0x60, 0x66, 0x52, 0x17, 0x5a,
	0x05, 0x23, 0x83, 0x43, 0xed, 0xc3, 0x86, 0x1d, 0x12, 0x38, 0x84, 0x8e, 0x67, 0xf0, 0x07, 0x1e,
	0x18, 0x8d, 0x32, 0x81, 0xdd, 0xb6, 0xea, 0x37, 0x48, 0xe0, 0x0f, 0xd0, 0x8d, 0x8b, 0xe4, 0x80,
	0x76, 0xa6, 0x5c, 0xe5, 0x21, 0xfb, 0xf3, 0xc6, 0x3d, 0x12, 0xf8, 0x0d, 0x6c, 0xf9, 0x4b, 0x68,
	0xc4, 0xdd, 0x4c, 0xd1, 0xc0, 0x5d, 0x7b, 0xaf, 0x2a, 0x54, 0xbd, 0xf0, 0x4d, 0x54, 0xd3, 0xbd,
	0x28, 0x83, 0xa7, 0xee, 0x45, 0x15, 0x06, 0x87, 0xd0, 0x99, 0x19, 0xec, 0xa2, 0x7b, 0x51, 0x22,
	0x39, 0xdb, 0xaa, 0xdf, 0x50, 0x2e, 0x26, 0x06, 0xbc, 0x69, 0x17, 0x25, 0x0c, 0xd5, 0x2e, 0xca,
	0x68, 0x88, 0xbf, 0x64, 0x37, 0xfc, 0x02, 0xe8, 0xe0, 0xe3, 0xcc, 0xa0, 0x1e, 0x29, 0xed, 0xa3,
	0xf7, 0xee, 0xab, 0x31, 0x51, 0x11, 0x47, 0xf4, 0x98, 0xaa, 0x50, 0xa6, 0xc7, 0x54, 0x03, 0x3e,
	0x69, 0x99, 0xbe, 0x71, 0x71, 0xd5, 0x65, 0x96, 0x6e, 0xcb, 0xba, 0xcc, 0xf2, 0x3d, 0x17, 0x2f,
	0xe0, 0xe1, 0xac, 0xf0, 0x58, 0xc0, 0xea, 0x29, 0xcd, 0xde, 0x25, 0xb6, 0xdd, 0xb4, 0x45, 0xe2,
	0xd9, 0xf1, 0x6f, 0x47, 0xe9, 0xa3, 0x67, 0xec, 0x8c, 0x8c, 0xd7, 0x8e, 0x52, 0xff, 0x4e, 0x7d,
	0xae, 0x36, 0xa5, 0xf0, 0xeb, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x03, 0x49, 0x98, 0x1f, 0x3b,
	0x0d, 0x00, 0x00,
}
