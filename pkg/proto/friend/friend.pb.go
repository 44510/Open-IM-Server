// Code generated by protoc-gen-go. DO NOT EDIT.
// source: friend/friend.proto

package friend // import "OpenIM/pkg/proto/friend"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import sdkws "OpenIM/pkg/proto/sdkws"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetPaginationFriendsReq struct {
	Pagination           *sdkws.RequestPagination `protobuf:"bytes,1,opt,name=pagination" json:"pagination,omitempty"`
	UserID               string                   `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetPaginationFriendsReq) Reset()         { *m = GetPaginationFriendsReq{} }
func (m *GetPaginationFriendsReq) String() string { return proto.CompactTextString(m) }
func (*GetPaginationFriendsReq) ProtoMessage()    {}
func (*GetPaginationFriendsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{0}
}
func (m *GetPaginationFriendsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPaginationFriendsReq.Unmarshal(m, b)
}
func (m *GetPaginationFriendsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPaginationFriendsReq.Marshal(b, m, deterministic)
}
func (dst *GetPaginationFriendsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPaginationFriendsReq.Merge(dst, src)
}
func (m *GetPaginationFriendsReq) XXX_Size() int {
	return xxx_messageInfo_GetPaginationFriendsReq.Size(m)
}
func (m *GetPaginationFriendsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPaginationFriendsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPaginationFriendsReq proto.InternalMessageInfo

func (m *GetPaginationFriendsReq) GetPagination() *sdkws.RequestPagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *GetPaginationFriendsReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

type GetPaginationFriendsResp struct {
	FriendsInfo          []*sdkws.FriendInfo `protobuf:"bytes,1,rep,name=FriendsInfo" json:"FriendsInfo,omitempty"`
	Total                int32               `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetPaginationFriendsResp) Reset()         { *m = GetPaginationFriendsResp{} }
func (m *GetPaginationFriendsResp) String() string { return proto.CompactTextString(m) }
func (*GetPaginationFriendsResp) ProtoMessage()    {}
func (*GetPaginationFriendsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{1}
}
func (m *GetPaginationFriendsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPaginationFriendsResp.Unmarshal(m, b)
}
func (m *GetPaginationFriendsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPaginationFriendsResp.Marshal(b, m, deterministic)
}
func (dst *GetPaginationFriendsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPaginationFriendsResp.Merge(dst, src)
}
func (m *GetPaginationFriendsResp) XXX_Size() int {
	return xxx_messageInfo_GetPaginationFriendsResp.Size(m)
}
func (m *GetPaginationFriendsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPaginationFriendsResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetPaginationFriendsResp proto.InternalMessageInfo

func (m *GetPaginationFriendsResp) GetFriendsInfo() []*sdkws.FriendInfo {
	if m != nil {
		return m.FriendsInfo
	}
	return nil
}

func (m *GetPaginationFriendsResp) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type ApplyToAddFriendReq struct {
	FromUserID           string   `protobuf:"bytes,1,opt,name=fromUserID" json:"fromUserID,omitempty"`
	ToUserID             string   `protobuf:"bytes,2,opt,name=toUserID" json:"toUserID,omitempty"`
	ReqMsg               string   `protobuf:"bytes,3,opt,name=reqMsg" json:"reqMsg,omitempty"`
	Ex                   string   `protobuf:"bytes,4,opt,name=ex" json:"ex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyToAddFriendReq) Reset()         { *m = ApplyToAddFriendReq{} }
func (m *ApplyToAddFriendReq) String() string { return proto.CompactTextString(m) }
func (*ApplyToAddFriendReq) ProtoMessage()    {}
func (*ApplyToAddFriendReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{2}
}
func (m *ApplyToAddFriendReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyToAddFriendReq.Unmarshal(m, b)
}
func (m *ApplyToAddFriendReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyToAddFriendReq.Marshal(b, m, deterministic)
}
func (dst *ApplyToAddFriendReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyToAddFriendReq.Merge(dst, src)
}
func (m *ApplyToAddFriendReq) XXX_Size() int {
	return xxx_messageInfo_ApplyToAddFriendReq.Size(m)
}
func (m *ApplyToAddFriendReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyToAddFriendReq.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyToAddFriendReq proto.InternalMessageInfo

func (m *ApplyToAddFriendReq) GetFromUserID() string {
	if m != nil {
		return m.FromUserID
	}
	return ""
}

func (m *ApplyToAddFriendReq) GetToUserID() string {
	if m != nil {
		return m.ToUserID
	}
	return ""
}

func (m *ApplyToAddFriendReq) GetReqMsg() string {
	if m != nil {
		return m.ReqMsg
	}
	return ""
}

func (m *ApplyToAddFriendReq) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

type ApplyToAddFriendResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyToAddFriendResp) Reset()         { *m = ApplyToAddFriendResp{} }
func (m *ApplyToAddFriendResp) String() string { return proto.CompactTextString(m) }
func (*ApplyToAddFriendResp) ProtoMessage()    {}
func (*ApplyToAddFriendResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{3}
}
func (m *ApplyToAddFriendResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyToAddFriendResp.Unmarshal(m, b)
}
func (m *ApplyToAddFriendResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyToAddFriendResp.Marshal(b, m, deterministic)
}
func (dst *ApplyToAddFriendResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyToAddFriendResp.Merge(dst, src)
}
func (m *ApplyToAddFriendResp) XXX_Size() int {
	return xxx_messageInfo_ApplyToAddFriendResp.Size(m)
}
func (m *ApplyToAddFriendResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyToAddFriendResp.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyToAddFriendResp proto.InternalMessageInfo

type ImportFriendReq struct {
	OwnerUserID          string   `protobuf:"bytes,1,opt,name=ownerUserID" json:"ownerUserID,omitempty"`
	FriendUserIDs        []string `protobuf:"bytes,2,rep,name=friendUserIDs" json:"friendUserIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportFriendReq) Reset()         { *m = ImportFriendReq{} }
func (m *ImportFriendReq) String() string { return proto.CompactTextString(m) }
func (*ImportFriendReq) ProtoMessage()    {}
func (*ImportFriendReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{4}
}
func (m *ImportFriendReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportFriendReq.Unmarshal(m, b)
}
func (m *ImportFriendReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportFriendReq.Marshal(b, m, deterministic)
}
func (dst *ImportFriendReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportFriendReq.Merge(dst, src)
}
func (m *ImportFriendReq) XXX_Size() int {
	return xxx_messageInfo_ImportFriendReq.Size(m)
}
func (m *ImportFriendReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportFriendReq.DiscardUnknown(m)
}

var xxx_messageInfo_ImportFriendReq proto.InternalMessageInfo

func (m *ImportFriendReq) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *ImportFriendReq) GetFriendUserIDs() []string {
	if m != nil {
		return m.FriendUserIDs
	}
	return nil
}

type ImportFriendResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportFriendResp) Reset()         { *m = ImportFriendResp{} }
func (m *ImportFriendResp) String() string { return proto.CompactTextString(m) }
func (*ImportFriendResp) ProtoMessage()    {}
func (*ImportFriendResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{5}
}
func (m *ImportFriendResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportFriendResp.Unmarshal(m, b)
}
func (m *ImportFriendResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportFriendResp.Marshal(b, m, deterministic)
}
func (dst *ImportFriendResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportFriendResp.Merge(dst, src)
}
func (m *ImportFriendResp) XXX_Size() int {
	return xxx_messageInfo_ImportFriendResp.Size(m)
}
func (m *ImportFriendResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportFriendResp.DiscardUnknown(m)
}

var xxx_messageInfo_ImportFriendResp proto.InternalMessageInfo

type GetPaginationFriendsApplyToReq struct {
	UserID               string                   `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	Pagination           *sdkws.RequestPagination `protobuf:"bytes,2,opt,name=pagination" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetPaginationFriendsApplyToReq) Reset()         { *m = GetPaginationFriendsApplyToReq{} }
func (m *GetPaginationFriendsApplyToReq) String() string { return proto.CompactTextString(m) }
func (*GetPaginationFriendsApplyToReq) ProtoMessage()    {}
func (*GetPaginationFriendsApplyToReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{6}
}
func (m *GetPaginationFriendsApplyToReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPaginationFriendsApplyToReq.Unmarshal(m, b)
}
func (m *GetPaginationFriendsApplyToReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPaginationFriendsApplyToReq.Marshal(b, m, deterministic)
}
func (dst *GetPaginationFriendsApplyToReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPaginationFriendsApplyToReq.Merge(dst, src)
}
func (m *GetPaginationFriendsApplyToReq) XXX_Size() int {
	return xxx_messageInfo_GetPaginationFriendsApplyToReq.Size(m)
}
func (m *GetPaginationFriendsApplyToReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPaginationFriendsApplyToReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPaginationFriendsApplyToReq proto.InternalMessageInfo

func (m *GetPaginationFriendsApplyToReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetPaginationFriendsApplyToReq) GetPagination() *sdkws.RequestPagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type GetPaginationFriendsApplyToResp struct {
	FriendRequests       []*sdkws.FriendRequest `protobuf:"bytes,1,rep,name=FriendRequests" json:"FriendRequests,omitempty"`
	Total                int32                  `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetPaginationFriendsApplyToResp) Reset()         { *m = GetPaginationFriendsApplyToResp{} }
func (m *GetPaginationFriendsApplyToResp) String() string { return proto.CompactTextString(m) }
func (*GetPaginationFriendsApplyToResp) ProtoMessage()    {}
func (*GetPaginationFriendsApplyToResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{7}
}
func (m *GetPaginationFriendsApplyToResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPaginationFriendsApplyToResp.Unmarshal(m, b)
}
func (m *GetPaginationFriendsApplyToResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPaginationFriendsApplyToResp.Marshal(b, m, deterministic)
}
func (dst *GetPaginationFriendsApplyToResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPaginationFriendsApplyToResp.Merge(dst, src)
}
func (m *GetPaginationFriendsApplyToResp) XXX_Size() int {
	return xxx_messageInfo_GetPaginationFriendsApplyToResp.Size(m)
}
func (m *GetPaginationFriendsApplyToResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPaginationFriendsApplyToResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetPaginationFriendsApplyToResp proto.InternalMessageInfo

func (m *GetPaginationFriendsApplyToResp) GetFriendRequests() []*sdkws.FriendRequest {
	if m != nil {
		return m.FriendRequests
	}
	return nil
}

func (m *GetPaginationFriendsApplyToResp) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type GetDesignatedFriendsReq struct {
	OwnerUserID          string   `protobuf:"bytes,1,opt,name=ownerUserID" json:"ownerUserID,omitempty"`
	FriendUserIDs        []string `protobuf:"bytes,2,rep,name=friendUserIDs" json:"friendUserIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDesignatedFriendsReq) Reset()         { *m = GetDesignatedFriendsReq{} }
func (m *GetDesignatedFriendsReq) String() string { return proto.CompactTextString(m) }
func (*GetDesignatedFriendsReq) ProtoMessage()    {}
func (*GetDesignatedFriendsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{8}
}
func (m *GetDesignatedFriendsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDesignatedFriendsReq.Unmarshal(m, b)
}
func (m *GetDesignatedFriendsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDesignatedFriendsReq.Marshal(b, m, deterministic)
}
func (dst *GetDesignatedFriendsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDesignatedFriendsReq.Merge(dst, src)
}
func (m *GetDesignatedFriendsReq) XXX_Size() int {
	return xxx_messageInfo_GetDesignatedFriendsReq.Size(m)
}
func (m *GetDesignatedFriendsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDesignatedFriendsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetDesignatedFriendsReq proto.InternalMessageInfo

func (m *GetDesignatedFriendsReq) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *GetDesignatedFriendsReq) GetFriendUserIDs() []string {
	if m != nil {
		return m.FriendUserIDs
	}
	return nil
}

type GetDesignatedFriendsResp struct {
	FriendsInfo          []*sdkws.FriendInfo `protobuf:"bytes,1,rep,name=friendsInfo" json:"friendsInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetDesignatedFriendsResp) Reset()         { *m = GetDesignatedFriendsResp{} }
func (m *GetDesignatedFriendsResp) String() string { return proto.CompactTextString(m) }
func (*GetDesignatedFriendsResp) ProtoMessage()    {}
func (*GetDesignatedFriendsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{9}
}
func (m *GetDesignatedFriendsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDesignatedFriendsResp.Unmarshal(m, b)
}
func (m *GetDesignatedFriendsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDesignatedFriendsResp.Marshal(b, m, deterministic)
}
func (dst *GetDesignatedFriendsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDesignatedFriendsResp.Merge(dst, src)
}
func (m *GetDesignatedFriendsResp) XXX_Size() int {
	return xxx_messageInfo_GetDesignatedFriendsResp.Size(m)
}
func (m *GetDesignatedFriendsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDesignatedFriendsResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetDesignatedFriendsResp proto.InternalMessageInfo

func (m *GetDesignatedFriendsResp) GetFriendsInfo() []*sdkws.FriendInfo {
	if m != nil {
		return m.FriendsInfo
	}
	return nil
}

type AddBlackReq struct {
	OwnerUserID          string   `protobuf:"bytes,1,opt,name=ownerUserID" json:"ownerUserID,omitempty"`
	BlackUserID          string   `protobuf:"bytes,2,opt,name=blackUserID" json:"blackUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddBlackReq) Reset()         { *m = AddBlackReq{} }
func (m *AddBlackReq) String() string { return proto.CompactTextString(m) }
func (*AddBlackReq) ProtoMessage()    {}
func (*AddBlackReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{10}
}
func (m *AddBlackReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBlackReq.Unmarshal(m, b)
}
func (m *AddBlackReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBlackReq.Marshal(b, m, deterministic)
}
func (dst *AddBlackReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBlackReq.Merge(dst, src)
}
func (m *AddBlackReq) XXX_Size() int {
	return xxx_messageInfo_AddBlackReq.Size(m)
}
func (m *AddBlackReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBlackReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddBlackReq proto.InternalMessageInfo

func (m *AddBlackReq) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *AddBlackReq) GetBlackUserID() string {
	if m != nil {
		return m.BlackUserID
	}
	return ""
}

type AddBlackResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddBlackResp) Reset()         { *m = AddBlackResp{} }
func (m *AddBlackResp) String() string { return proto.CompactTextString(m) }
func (*AddBlackResp) ProtoMessage()    {}
func (*AddBlackResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{11}
}
func (m *AddBlackResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBlackResp.Unmarshal(m, b)
}
func (m *AddBlackResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBlackResp.Marshal(b, m, deterministic)
}
func (dst *AddBlackResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBlackResp.Merge(dst, src)
}
func (m *AddBlackResp) XXX_Size() int {
	return xxx_messageInfo_AddBlackResp.Size(m)
}
func (m *AddBlackResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBlackResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddBlackResp proto.InternalMessageInfo

type RemoveBlackReq struct {
	OwnerUserID          string   `protobuf:"bytes,1,opt,name=ownerUserID" json:"ownerUserID,omitempty"`
	BlackUserID          string   `protobuf:"bytes,2,opt,name=blackUserID" json:"blackUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveBlackReq) Reset()         { *m = RemoveBlackReq{} }
func (m *RemoveBlackReq) String() string { return proto.CompactTextString(m) }
func (*RemoveBlackReq) ProtoMessage()    {}
func (*RemoveBlackReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{12}
}
func (m *RemoveBlackReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveBlackReq.Unmarshal(m, b)
}
func (m *RemoveBlackReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveBlackReq.Marshal(b, m, deterministic)
}
func (dst *RemoveBlackReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveBlackReq.Merge(dst, src)
}
func (m *RemoveBlackReq) XXX_Size() int {
	return xxx_messageInfo_RemoveBlackReq.Size(m)
}
func (m *RemoveBlackReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveBlackReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveBlackReq proto.InternalMessageInfo

func (m *RemoveBlackReq) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *RemoveBlackReq) GetBlackUserID() string {
	if m != nil {
		return m.BlackUserID
	}
	return ""
}

type RemoveBlackResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveBlackResp) Reset()         { *m = RemoveBlackResp{} }
func (m *RemoveBlackResp) String() string { return proto.CompactTextString(m) }
func (*RemoveBlackResp) ProtoMessage()    {}
func (*RemoveBlackResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{13}
}
func (m *RemoveBlackResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveBlackResp.Unmarshal(m, b)
}
func (m *RemoveBlackResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveBlackResp.Marshal(b, m, deterministic)
}
func (dst *RemoveBlackResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveBlackResp.Merge(dst, src)
}
func (m *RemoveBlackResp) XXX_Size() int {
	return xxx_messageInfo_RemoveBlackResp.Size(m)
}
func (m *RemoveBlackResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveBlackResp.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveBlackResp proto.InternalMessageInfo

type GetPaginationBlacksReq struct {
	UserID               string                   `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	Pagination           *sdkws.RequestPagination `protobuf:"bytes,2,opt,name=pagination" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetPaginationBlacksReq) Reset()         { *m = GetPaginationBlacksReq{} }
func (m *GetPaginationBlacksReq) String() string { return proto.CompactTextString(m) }
func (*GetPaginationBlacksReq) ProtoMessage()    {}
func (*GetPaginationBlacksReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{14}
}
func (m *GetPaginationBlacksReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPaginationBlacksReq.Unmarshal(m, b)
}
func (m *GetPaginationBlacksReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPaginationBlacksReq.Marshal(b, m, deterministic)
}
func (dst *GetPaginationBlacksReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPaginationBlacksReq.Merge(dst, src)
}
func (m *GetPaginationBlacksReq) XXX_Size() int {
	return xxx_messageInfo_GetPaginationBlacksReq.Size(m)
}
func (m *GetPaginationBlacksReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPaginationBlacksReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPaginationBlacksReq proto.InternalMessageInfo

func (m *GetPaginationBlacksReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetPaginationBlacksReq) GetPagination() *sdkws.RequestPagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type GetPaginationBlacksResp struct {
	Blacks               []*sdkws.BlackInfo `protobuf:"bytes,1,rep,name=blacks" json:"blacks,omitempty"`
	Total                int32              `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetPaginationBlacksResp) Reset()         { *m = GetPaginationBlacksResp{} }
func (m *GetPaginationBlacksResp) String() string { return proto.CompactTextString(m) }
func (*GetPaginationBlacksResp) ProtoMessage()    {}
func (*GetPaginationBlacksResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{15}
}
func (m *GetPaginationBlacksResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPaginationBlacksResp.Unmarshal(m, b)
}
func (m *GetPaginationBlacksResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPaginationBlacksResp.Marshal(b, m, deterministic)
}
func (dst *GetPaginationBlacksResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPaginationBlacksResp.Merge(dst, src)
}
func (m *GetPaginationBlacksResp) XXX_Size() int {
	return xxx_messageInfo_GetPaginationBlacksResp.Size(m)
}
func (m *GetPaginationBlacksResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPaginationBlacksResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetPaginationBlacksResp proto.InternalMessageInfo

func (m *GetPaginationBlacksResp) GetBlacks() []*sdkws.BlackInfo {
	if m != nil {
		return m.Blacks
	}
	return nil
}

func (m *GetPaginationBlacksResp) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type IsFriendReq struct {
	UserID1              string   `protobuf:"bytes,1,opt,name=userID1" json:"userID1,omitempty"`
	UserID2              string   `protobuf:"bytes,2,opt,name=userID2" json:"userID2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsFriendReq) Reset()         { *m = IsFriendReq{} }
func (m *IsFriendReq) String() string { return proto.CompactTextString(m) }
func (*IsFriendReq) ProtoMessage()    {}
func (*IsFriendReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{16}
}
func (m *IsFriendReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsFriendReq.Unmarshal(m, b)
}
func (m *IsFriendReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsFriendReq.Marshal(b, m, deterministic)
}
func (dst *IsFriendReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsFriendReq.Merge(dst, src)
}
func (m *IsFriendReq) XXX_Size() int {
	return xxx_messageInfo_IsFriendReq.Size(m)
}
func (m *IsFriendReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IsFriendReq.DiscardUnknown(m)
}

var xxx_messageInfo_IsFriendReq proto.InternalMessageInfo

func (m *IsFriendReq) GetUserID1() string {
	if m != nil {
		return m.UserID1
	}
	return ""
}

func (m *IsFriendReq) GetUserID2() string {
	if m != nil {
		return m.UserID2
	}
	return ""
}

type IsFriendResp struct {
	InUser1Friends       bool     `protobuf:"varint,1,opt,name=inUser1Friends" json:"inUser1Friends,omitempty"`
	InUser2Friends       bool     `protobuf:"varint,2,opt,name=inUser2Friends" json:"inUser2Friends,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsFriendResp) Reset()         { *m = IsFriendResp{} }
func (m *IsFriendResp) String() string { return proto.CompactTextString(m) }
func (*IsFriendResp) ProtoMessage()    {}
func (*IsFriendResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{17}
}
func (m *IsFriendResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsFriendResp.Unmarshal(m, b)
}
func (m *IsFriendResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsFriendResp.Marshal(b, m, deterministic)
}
func (dst *IsFriendResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsFriendResp.Merge(dst, src)
}
func (m *IsFriendResp) XXX_Size() int {
	return xxx_messageInfo_IsFriendResp.Size(m)
}
func (m *IsFriendResp) XXX_DiscardUnknown() {
	xxx_messageInfo_IsFriendResp.DiscardUnknown(m)
}

var xxx_messageInfo_IsFriendResp proto.InternalMessageInfo

func (m *IsFriendResp) GetInUser1Friends() bool {
	if m != nil {
		return m.InUser1Friends
	}
	return false
}

func (m *IsFriendResp) GetInUser2Friends() bool {
	if m != nil {
		return m.InUser2Friends
	}
	return false
}

type IsBlackReq struct {
	UserID1              string   `protobuf:"bytes,1,opt,name=userID1" json:"userID1,omitempty"`
	UserID2              string   `protobuf:"bytes,2,opt,name=userID2" json:"userID2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsBlackReq) Reset()         { *m = IsBlackReq{} }
func (m *IsBlackReq) String() string { return proto.CompactTextString(m) }
func (*IsBlackReq) ProtoMessage()    {}
func (*IsBlackReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{18}
}
func (m *IsBlackReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsBlackReq.Unmarshal(m, b)
}
func (m *IsBlackReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsBlackReq.Marshal(b, m, deterministic)
}
func (dst *IsBlackReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsBlackReq.Merge(dst, src)
}
func (m *IsBlackReq) XXX_Size() int {
	return xxx_messageInfo_IsBlackReq.Size(m)
}
func (m *IsBlackReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IsBlackReq.DiscardUnknown(m)
}

var xxx_messageInfo_IsBlackReq proto.InternalMessageInfo

func (m *IsBlackReq) GetUserID1() string {
	if m != nil {
		return m.UserID1
	}
	return ""
}

func (m *IsBlackReq) GetUserID2() string {
	if m != nil {
		return m.UserID2
	}
	return ""
}

type IsBlackResp struct {
	InUser1Blacks        bool     `protobuf:"varint,1,opt,name=inUser1Blacks" json:"inUser1Blacks,omitempty"`
	InUser2Blacks        bool     `protobuf:"varint,2,opt,name=inUser2Blacks" json:"inUser2Blacks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsBlackResp) Reset()         { *m = IsBlackResp{} }
func (m *IsBlackResp) String() string { return proto.CompactTextString(m) }
func (*IsBlackResp) ProtoMessage()    {}
func (*IsBlackResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{19}
}
func (m *IsBlackResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsBlackResp.Unmarshal(m, b)
}
func (m *IsBlackResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsBlackResp.Marshal(b, m, deterministic)
}
func (dst *IsBlackResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsBlackResp.Merge(dst, src)
}
func (m *IsBlackResp) XXX_Size() int {
	return xxx_messageInfo_IsBlackResp.Size(m)
}
func (m *IsBlackResp) XXX_DiscardUnknown() {
	xxx_messageInfo_IsBlackResp.DiscardUnknown(m)
}

var xxx_messageInfo_IsBlackResp proto.InternalMessageInfo

func (m *IsBlackResp) GetInUser1Blacks() bool {
	if m != nil {
		return m.InUser1Blacks
	}
	return false
}

func (m *IsBlackResp) GetInUser2Blacks() bool {
	if m != nil {
		return m.InUser2Blacks
	}
	return false
}

type DeleteFriendReq struct {
	OwnerUserID          string   `protobuf:"bytes,1,opt,name=ownerUserID" json:"ownerUserID,omitempty"`
	FriendUserID         string   `protobuf:"bytes,2,opt,name=friendUserID" json:"friendUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteFriendReq) Reset()         { *m = DeleteFriendReq{} }
func (m *DeleteFriendReq) String() string { return proto.CompactTextString(m) }
func (*DeleteFriendReq) ProtoMessage()    {}
func (*DeleteFriendReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{20}
}
func (m *DeleteFriendReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteFriendReq.Unmarshal(m, b)
}
func (m *DeleteFriendReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteFriendReq.Marshal(b, m, deterministic)
}
func (dst *DeleteFriendReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteFriendReq.Merge(dst, src)
}
func (m *DeleteFriendReq) XXX_Size() int {
	return xxx_messageInfo_DeleteFriendReq.Size(m)
}
func (m *DeleteFriendReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteFriendReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteFriendReq proto.InternalMessageInfo

func (m *DeleteFriendReq) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *DeleteFriendReq) GetFriendUserID() string {
	if m != nil {
		return m.FriendUserID
	}
	return ""
}

type DeleteFriendResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteFriendResp) Reset()         { *m = DeleteFriendResp{} }
func (m *DeleteFriendResp) String() string { return proto.CompactTextString(m) }
func (*DeleteFriendResp) ProtoMessage()    {}
func (*DeleteFriendResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{21}
}
func (m *DeleteFriendResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteFriendResp.Unmarshal(m, b)
}
func (m *DeleteFriendResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteFriendResp.Marshal(b, m, deterministic)
}
func (dst *DeleteFriendResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteFriendResp.Merge(dst, src)
}
func (m *DeleteFriendResp) XXX_Size() int {
	return xxx_messageInfo_DeleteFriendResp.Size(m)
}
func (m *DeleteFriendResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteFriendResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteFriendResp proto.InternalMessageInfo

// process
type RespondFriendApplyReq struct {
	FromUserID           string   `protobuf:"bytes,1,opt,name=fromUserID" json:"fromUserID,omitempty"`
	ToUserID             string   `protobuf:"bytes,2,opt,name=toUserID" json:"toUserID,omitempty"`
	HandleResult         int32    `protobuf:"varint,3,opt,name=handleResult" json:"handleResult,omitempty"`
	HandleMsg            string   `protobuf:"bytes,4,opt,name=handleMsg" json:"handleMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespondFriendApplyReq) Reset()         { *m = RespondFriendApplyReq{} }
func (m *RespondFriendApplyReq) String() string { return proto.CompactTextString(m) }
func (*RespondFriendApplyReq) ProtoMessage()    {}
func (*RespondFriendApplyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{22}
}
func (m *RespondFriendApplyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespondFriendApplyReq.Unmarshal(m, b)
}
func (m *RespondFriendApplyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespondFriendApplyReq.Marshal(b, m, deterministic)
}
func (dst *RespondFriendApplyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespondFriendApplyReq.Merge(dst, src)
}
func (m *RespondFriendApplyReq) XXX_Size() int {
	return xxx_messageInfo_RespondFriendApplyReq.Size(m)
}
func (m *RespondFriendApplyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RespondFriendApplyReq.DiscardUnknown(m)
}

var xxx_messageInfo_RespondFriendApplyReq proto.InternalMessageInfo

func (m *RespondFriendApplyReq) GetFromUserID() string {
	if m != nil {
		return m.FromUserID
	}
	return ""
}

func (m *RespondFriendApplyReq) GetToUserID() string {
	if m != nil {
		return m.ToUserID
	}
	return ""
}

func (m *RespondFriendApplyReq) GetHandleResult() int32 {
	if m != nil {
		return m.HandleResult
	}
	return 0
}

func (m *RespondFriendApplyReq) GetHandleMsg() string {
	if m != nil {
		return m.HandleMsg
	}
	return ""
}

type RespondFriendApplyResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespondFriendApplyResp) Reset()         { *m = RespondFriendApplyResp{} }
func (m *RespondFriendApplyResp) String() string { return proto.CompactTextString(m) }
func (*RespondFriendApplyResp) ProtoMessage()    {}
func (*RespondFriendApplyResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{23}
}
func (m *RespondFriendApplyResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespondFriendApplyResp.Unmarshal(m, b)
}
func (m *RespondFriendApplyResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespondFriendApplyResp.Marshal(b, m, deterministic)
}
func (dst *RespondFriendApplyResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespondFriendApplyResp.Merge(dst, src)
}
func (m *RespondFriendApplyResp) XXX_Size() int {
	return xxx_messageInfo_RespondFriendApplyResp.Size(m)
}
func (m *RespondFriendApplyResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RespondFriendApplyResp.DiscardUnknown(m)
}

var xxx_messageInfo_RespondFriendApplyResp proto.InternalMessageInfo

type SetFriendRemarkReq struct {
	OwnerUserID          string   `protobuf:"bytes,1,opt,name=ownerUserID" json:"ownerUserID,omitempty"`
	FriendUserID         string   `protobuf:"bytes,2,opt,name=friendUserID" json:"friendUserID,omitempty"`
	Remark               string   `protobuf:"bytes,3,opt,name=remark" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetFriendRemarkReq) Reset()         { *m = SetFriendRemarkReq{} }
func (m *SetFriendRemarkReq) String() string { return proto.CompactTextString(m) }
func (*SetFriendRemarkReq) ProtoMessage()    {}
func (*SetFriendRemarkReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{24}
}
func (m *SetFriendRemarkReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFriendRemarkReq.Unmarshal(m, b)
}
func (m *SetFriendRemarkReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFriendRemarkReq.Marshal(b, m, deterministic)
}
func (dst *SetFriendRemarkReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFriendRemarkReq.Merge(dst, src)
}
func (m *SetFriendRemarkReq) XXX_Size() int {
	return xxx_messageInfo_SetFriendRemarkReq.Size(m)
}
func (m *SetFriendRemarkReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFriendRemarkReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetFriendRemarkReq proto.InternalMessageInfo

func (m *SetFriendRemarkReq) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *SetFriendRemarkReq) GetFriendUserID() string {
	if m != nil {
		return m.FriendUserID
	}
	return ""
}

func (m *SetFriendRemarkReq) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type SetFriendRemarkResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetFriendRemarkResp) Reset()         { *m = SetFriendRemarkResp{} }
func (m *SetFriendRemarkResp) String() string { return proto.CompactTextString(m) }
func (*SetFriendRemarkResp) ProtoMessage()    {}
func (*SetFriendRemarkResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{25}
}
func (m *SetFriendRemarkResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetFriendRemarkResp.Unmarshal(m, b)
}
func (m *SetFriendRemarkResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetFriendRemarkResp.Marshal(b, m, deterministic)
}
func (dst *SetFriendRemarkResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetFriendRemarkResp.Merge(dst, src)
}
func (m *SetFriendRemarkResp) XXX_Size() int {
	return xxx_messageInfo_SetFriendRemarkResp.Size(m)
}
func (m *SetFriendRemarkResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SetFriendRemarkResp.DiscardUnknown(m)
}

var xxx_messageInfo_SetFriendRemarkResp proto.InternalMessageInfo

type GetPaginationFriendsApplyFromReq struct {
	UserID               string                   `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	Pagination           *sdkws.RequestPagination `protobuf:"bytes,2,opt,name=pagination" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetPaginationFriendsApplyFromReq) Reset()         { *m = GetPaginationFriendsApplyFromReq{} }
func (m *GetPaginationFriendsApplyFromReq) String() string { return proto.CompactTextString(m) }
func (*GetPaginationFriendsApplyFromReq) ProtoMessage()    {}
func (*GetPaginationFriendsApplyFromReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{26}
}
func (m *GetPaginationFriendsApplyFromReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPaginationFriendsApplyFromReq.Unmarshal(m, b)
}
func (m *GetPaginationFriendsApplyFromReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPaginationFriendsApplyFromReq.Marshal(b, m, deterministic)
}
func (dst *GetPaginationFriendsApplyFromReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPaginationFriendsApplyFromReq.Merge(dst, src)
}
func (m *GetPaginationFriendsApplyFromReq) XXX_Size() int {
	return xxx_messageInfo_GetPaginationFriendsApplyFromReq.Size(m)
}
func (m *GetPaginationFriendsApplyFromReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPaginationFriendsApplyFromReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPaginationFriendsApplyFromReq proto.InternalMessageInfo

func (m *GetPaginationFriendsApplyFromReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetPaginationFriendsApplyFromReq) GetPagination() *sdkws.RequestPagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type GetPaginationFriendsApplyFromResp struct {
	FriendRequests       []*sdkws.FriendRequest `protobuf:"bytes,1,rep,name=friendRequests" json:"friendRequests,omitempty"`
	Total                int32                  `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetPaginationFriendsApplyFromResp) Reset()         { *m = GetPaginationFriendsApplyFromResp{} }
func (m *GetPaginationFriendsApplyFromResp) String() string { return proto.CompactTextString(m) }
func (*GetPaginationFriendsApplyFromResp) ProtoMessage()    {}
func (*GetPaginationFriendsApplyFromResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{27}
}
func (m *GetPaginationFriendsApplyFromResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPaginationFriendsApplyFromResp.Unmarshal(m, b)
}
func (m *GetPaginationFriendsApplyFromResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPaginationFriendsApplyFromResp.Marshal(b, m, deterministic)
}
func (dst *GetPaginationFriendsApplyFromResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPaginationFriendsApplyFromResp.Merge(dst, src)
}
func (m *GetPaginationFriendsApplyFromResp) XXX_Size() int {
	return xxx_messageInfo_GetPaginationFriendsApplyFromResp.Size(m)
}
func (m *GetPaginationFriendsApplyFromResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPaginationFriendsApplyFromResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetPaginationFriendsApplyFromResp proto.InternalMessageInfo

func (m *GetPaginationFriendsApplyFromResp) GetFriendRequests() []*sdkws.FriendRequest {
	if m != nil {
		return m.FriendRequests
	}
	return nil
}

func (m *GetPaginationFriendsApplyFromResp) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type GetFriendIDsReq struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFriendIDsReq) Reset()         { *m = GetFriendIDsReq{} }
func (m *GetFriendIDsReq) String() string { return proto.CompactTextString(m) }
func (*GetFriendIDsReq) ProtoMessage()    {}
func (*GetFriendIDsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{28}
}
func (m *GetFriendIDsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFriendIDsReq.Unmarshal(m, b)
}
func (m *GetFriendIDsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFriendIDsReq.Marshal(b, m, deterministic)
}
func (dst *GetFriendIDsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFriendIDsReq.Merge(dst, src)
}
func (m *GetFriendIDsReq) XXX_Size() int {
	return xxx_messageInfo_GetFriendIDsReq.Size(m)
}
func (m *GetFriendIDsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFriendIDsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetFriendIDsReq proto.InternalMessageInfo

func (m *GetFriendIDsReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

type GetFriendIDsResp struct {
	FriendIDs            []string `protobuf:"bytes,1,rep,name=friendIDs" json:"friendIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFriendIDsResp) Reset()         { *m = GetFriendIDsResp{} }
func (m *GetFriendIDsResp) String() string { return proto.CompactTextString(m) }
func (*GetFriendIDsResp) ProtoMessage()    {}
func (*GetFriendIDsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_friend_10585ad6091091a7, []int{29}
}
func (m *GetFriendIDsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFriendIDsResp.Unmarshal(m, b)
}
func (m *GetFriendIDsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFriendIDsResp.Marshal(b, m, deterministic)
}
func (dst *GetFriendIDsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFriendIDsResp.Merge(dst, src)
}
func (m *GetFriendIDsResp) XXX_Size() int {
	return xxx_messageInfo_GetFriendIDsResp.Size(m)
}
func (m *GetFriendIDsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFriendIDsResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetFriendIDsResp proto.InternalMessageInfo

func (m *GetFriendIDsResp) GetFriendIDs() []string {
	if m != nil {
		return m.FriendIDs
	}
	return nil
}

func init() {
	proto.RegisterType((*GetPaginationFriendsReq)(nil), "OpenIMServer.friend.getPaginationFriendsReq")
	proto.RegisterType((*GetPaginationFriendsResp)(nil), "OpenIMServer.friend.getPaginationFriendsResp")
	proto.RegisterType((*ApplyToAddFriendReq)(nil), "OpenIMServer.friend.applyToAddFriendReq")
	proto.RegisterType((*ApplyToAddFriendResp)(nil), "OpenIMServer.friend.applyToAddFriendResp")
	proto.RegisterType((*ImportFriendReq)(nil), "OpenIMServer.friend.importFriendReq")
	proto.RegisterType((*ImportFriendResp)(nil), "OpenIMServer.friend.importFriendResp")
	proto.RegisterType((*GetPaginationFriendsApplyToReq)(nil), "OpenIMServer.friend.getPaginationFriendsApplyToReq")
	proto.RegisterType((*GetPaginationFriendsApplyToResp)(nil), "OpenIMServer.friend.getPaginationFriendsApplyToResp")
	proto.RegisterType((*GetDesignatedFriendsReq)(nil), "OpenIMServer.friend.getDesignatedFriendsReq")
	proto.RegisterType((*GetDesignatedFriendsResp)(nil), "OpenIMServer.friend.getDesignatedFriendsResp")
	proto.RegisterType((*AddBlackReq)(nil), "OpenIMServer.friend.addBlackReq")
	proto.RegisterType((*AddBlackResp)(nil), "OpenIMServer.friend.addBlackResp")
	proto.RegisterType((*RemoveBlackReq)(nil), "OpenIMServer.friend.removeBlackReq")
	proto.RegisterType((*RemoveBlackResp)(nil), "OpenIMServer.friend.removeBlackResp")
	proto.RegisterType((*GetPaginationBlacksReq)(nil), "OpenIMServer.friend.getPaginationBlacksReq")
	proto.RegisterType((*GetPaginationBlacksResp)(nil), "OpenIMServer.friend.getPaginationBlacksResp")
	proto.RegisterType((*IsFriendReq)(nil), "OpenIMServer.friend.isFriendReq")
	proto.RegisterType((*IsFriendResp)(nil), "OpenIMServer.friend.isFriendResp")
	proto.RegisterType((*IsBlackReq)(nil), "OpenIMServer.friend.isBlackReq")
	proto.RegisterType((*IsBlackResp)(nil), "OpenIMServer.friend.isBlackResp")
	proto.RegisterType((*DeleteFriendReq)(nil), "OpenIMServer.friend.deleteFriendReq")
	proto.RegisterType((*DeleteFriendResp)(nil), "OpenIMServer.friend.deleteFriendResp")
	proto.RegisterType((*RespondFriendApplyReq)(nil), "OpenIMServer.friend.respondFriendApplyReq")
	proto.RegisterType((*RespondFriendApplyResp)(nil), "OpenIMServer.friend.respondFriendApplyResp")
	proto.RegisterType((*SetFriendRemarkReq)(nil), "OpenIMServer.friend.setFriendRemarkReq")
	proto.RegisterType((*SetFriendRemarkResp)(nil), "OpenIMServer.friend.setFriendRemarkResp")
	proto.RegisterType((*GetPaginationFriendsApplyFromReq)(nil), "OpenIMServer.friend.getPaginationFriendsApplyFromReq")
	proto.RegisterType((*GetPaginationFriendsApplyFromResp)(nil), "OpenIMServer.friend.getPaginationFriendsApplyFromResp")
	proto.RegisterType((*GetFriendIDsReq)(nil), "OpenIMServer.friend.getFriendIDsReq")
	proto.RegisterType((*GetFriendIDsResp)(nil), "OpenIMServer.friend.getFriendIDsResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Friend service

type FriendClient interface {
	// 申请加好友
	ApplyToAddFriend(ctx context.Context, in *ApplyToAddFriendReq, opts ...grpc.CallOption) (*ApplyToAddFriendResp, error)
	// 获取收到的好友申请列表
	GetPaginationFriendsApplyTo(ctx context.Context, in *GetPaginationFriendsApplyToReq, opts ...grpc.CallOption) (*GetPaginationFriendsApplyToResp, error)
	// 获取主动发出去的好友申请列表
	GetPaginationFriendsApplyFrom(ctx context.Context, in *GetPaginationFriendsApplyFromReq, opts ...grpc.CallOption) (*GetPaginationFriendsApplyFromResp, error)
	// 添加黑名单
	AddBlack(ctx context.Context, in *AddBlackReq, opts ...grpc.CallOption) (*AddBlackResp, error)
	// 移除黑名单
	RemoveBlack(ctx context.Context, in *RemoveBlackReq, opts ...grpc.CallOption) (*RemoveBlackResp, error)
	// 判断是否好友关系
	IsFriend(ctx context.Context, in *IsFriendReq, opts ...grpc.CallOption) (*IsFriendResp, error)
	// 判断是否在黑名单中
	IsBlack(ctx context.Context, in *IsBlackReq, opts ...grpc.CallOption) (*IsBlackResp, error)
	// 获取黑名单列表
	GetPaginationBlacks(ctx context.Context, in *GetPaginationBlacksReq, opts ...grpc.CallOption) (*GetPaginationBlacksResp, error)
	// 删除好友
	DeleteFriend(ctx context.Context, in *DeleteFriendReq, opts ...grpc.CallOption) (*DeleteFriendResp, error)
	// 对好友申请响应（同意或拒绝）
	RespondFriendApply(ctx context.Context, in *RespondFriendApplyReq, opts ...grpc.CallOption) (*RespondFriendApplyResp, error)
	// 设置好友备注
	SetFriendRemark(ctx context.Context, in *SetFriendRemarkReq, opts ...grpc.CallOption) (*SetFriendRemarkResp, error)
	// 导入好友关系
	ImportFriends(ctx context.Context, in *ImportFriendReq, opts ...grpc.CallOption) (*ImportFriendResp, error)
	// 翻页获取好友列表 无结果不返回错误
	GetDesignatedFriends(ctx context.Context, in *GetDesignatedFriendsReq, opts ...grpc.CallOption) (*GetDesignatedFriendsResp, error)
	// 获取指定好友信息 有id不存在也返回错误
	GetPaginationFriends(ctx context.Context, in *GetPaginationFriendsReq, opts ...grpc.CallOption) (*GetPaginationFriendsResp, error)
	// 获取好友ID列表
	GetFriendIDs(ctx context.Context, in *GetFriendIDsReq, opts ...grpc.CallOption) (*GetFriendIDsResp, error)
}

type friendClient struct {
	cc *grpc.ClientConn
}

func NewFriendClient(cc *grpc.ClientConn) FriendClient {
	return &friendClient{cc}
}

func (c *friendClient) ApplyToAddFriend(ctx context.Context, in *ApplyToAddFriendReq, opts ...grpc.CallOption) (*ApplyToAddFriendResp, error) {
	out := new(ApplyToAddFriendResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.friend.friend/applyToAddFriend", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) GetPaginationFriendsApplyTo(ctx context.Context, in *GetPaginationFriendsApplyToReq, opts ...grpc.CallOption) (*GetPaginationFriendsApplyToResp, error) {
	out := new(GetPaginationFriendsApplyToResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.friend.friend/getPaginationFriendsApplyTo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) GetPaginationFriendsApplyFrom(ctx context.Context, in *GetPaginationFriendsApplyFromReq, opts ...grpc.CallOption) (*GetPaginationFriendsApplyFromResp, error) {
	out := new(GetPaginationFriendsApplyFromResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.friend.friend/getPaginationFriendsApplyFrom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) AddBlack(ctx context.Context, in *AddBlackReq, opts ...grpc.CallOption) (*AddBlackResp, error) {
	out := new(AddBlackResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.friend.friend/addBlack", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) RemoveBlack(ctx context.Context, in *RemoveBlackReq, opts ...grpc.CallOption) (*RemoveBlackResp, error) {
	out := new(RemoveBlackResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.friend.friend/removeBlack", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) IsFriend(ctx context.Context, in *IsFriendReq, opts ...grpc.CallOption) (*IsFriendResp, error) {
	out := new(IsFriendResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.friend.friend/isFriend", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) IsBlack(ctx context.Context, in *IsBlackReq, opts ...grpc.CallOption) (*IsBlackResp, error) {
	out := new(IsBlackResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.friend.friend/isBlack", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) GetPaginationBlacks(ctx context.Context, in *GetPaginationBlacksReq, opts ...grpc.CallOption) (*GetPaginationBlacksResp, error) {
	out := new(GetPaginationBlacksResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.friend.friend/getPaginationBlacks", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) DeleteFriend(ctx context.Context, in *DeleteFriendReq, opts ...grpc.CallOption) (*DeleteFriendResp, error) {
	out := new(DeleteFriendResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.friend.friend/deleteFriend", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) RespondFriendApply(ctx context.Context, in *RespondFriendApplyReq, opts ...grpc.CallOption) (*RespondFriendApplyResp, error) {
	out := new(RespondFriendApplyResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.friend.friend/respondFriendApply", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) SetFriendRemark(ctx context.Context, in *SetFriendRemarkReq, opts ...grpc.CallOption) (*SetFriendRemarkResp, error) {
	out := new(SetFriendRemarkResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.friend.friend/setFriendRemark", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) ImportFriends(ctx context.Context, in *ImportFriendReq, opts ...grpc.CallOption) (*ImportFriendResp, error) {
	out := new(ImportFriendResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.friend.friend/importFriends", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) GetDesignatedFriends(ctx context.Context, in *GetDesignatedFriendsReq, opts ...grpc.CallOption) (*GetDesignatedFriendsResp, error) {
	out := new(GetDesignatedFriendsResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.friend.friend/getDesignatedFriends", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) GetPaginationFriends(ctx context.Context, in *GetPaginationFriendsReq, opts ...grpc.CallOption) (*GetPaginationFriendsResp, error) {
	out := new(GetPaginationFriendsResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.friend.friend/getPaginationFriends", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *friendClient) GetFriendIDs(ctx context.Context, in *GetFriendIDsReq, opts ...grpc.CallOption) (*GetFriendIDsResp, error) {
	out := new(GetFriendIDsResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.friend.friend/getFriendIDs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Friend service

type FriendServer interface {
	// 申请加好友
	ApplyToAddFriend(context.Context, *ApplyToAddFriendReq) (*ApplyToAddFriendResp, error)
	// 获取收到的好友申请列表
	GetPaginationFriendsApplyTo(context.Context, *GetPaginationFriendsApplyToReq) (*GetPaginationFriendsApplyToResp, error)
	// 获取主动发出去的好友申请列表
	GetPaginationFriendsApplyFrom(context.Context, *GetPaginationFriendsApplyFromReq) (*GetPaginationFriendsApplyFromResp, error)
	// 添加黑名单
	AddBlack(context.Context, *AddBlackReq) (*AddBlackResp, error)
	// 移除黑名单
	RemoveBlack(context.Context, *RemoveBlackReq) (*RemoveBlackResp, error)
	// 判断是否好友关系
	IsFriend(context.Context, *IsFriendReq) (*IsFriendResp, error)
	// 判断是否在黑名单中
	IsBlack(context.Context, *IsBlackReq) (*IsBlackResp, error)
	// 获取黑名单列表
	GetPaginationBlacks(context.Context, *GetPaginationBlacksReq) (*GetPaginationBlacksResp, error)
	// 删除好友
	DeleteFriend(context.Context, *DeleteFriendReq) (*DeleteFriendResp, error)
	// 对好友申请响应（同意或拒绝）
	RespondFriendApply(context.Context, *RespondFriendApplyReq) (*RespondFriendApplyResp, error)
	// 设置好友备注
	SetFriendRemark(context.Context, *SetFriendRemarkReq) (*SetFriendRemarkResp, error)
	// 导入好友关系
	ImportFriends(context.Context, *ImportFriendReq) (*ImportFriendResp, error)
	// 翻页获取好友列表 无结果不返回错误
	GetDesignatedFriends(context.Context, *GetDesignatedFriendsReq) (*GetDesignatedFriendsResp, error)
	// 获取指定好友信息 有id不存在也返回错误
	GetPaginationFriends(context.Context, *GetPaginationFriendsReq) (*GetPaginationFriendsResp, error)
	// 获取好友ID列表
	GetFriendIDs(context.Context, *GetFriendIDsReq) (*GetFriendIDsResp, error)
}

func RegisterFriendServer(s *grpc.Server, srv FriendServer) {
	s.RegisterService(&_Friend_serviceDesc, srv)
}

func _Friend_ApplyToAddFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyToAddFriendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).ApplyToAddFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.friend.friend/ApplyToAddFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).ApplyToAddFriend(ctx, req.(*ApplyToAddFriendReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_GetPaginationFriendsApplyTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPaginationFriendsApplyToReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).GetPaginationFriendsApplyTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.friend.friend/GetPaginationFriendsApplyTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).GetPaginationFriendsApplyTo(ctx, req.(*GetPaginationFriendsApplyToReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_GetPaginationFriendsApplyFrom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPaginationFriendsApplyFromReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).GetPaginationFriendsApplyFrom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.friend.friend/GetPaginationFriendsApplyFrom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).GetPaginationFriendsApplyFrom(ctx, req.(*GetPaginationFriendsApplyFromReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_AddBlack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBlackReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).AddBlack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.friend.friend/AddBlack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).AddBlack(ctx, req.(*AddBlackReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_RemoveBlack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveBlackReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).RemoveBlack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.friend.friend/RemoveBlack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).RemoveBlack(ctx, req.(*RemoveBlackReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_IsFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsFriendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).IsFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.friend.friend/IsFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).IsFriend(ctx, req.(*IsFriendReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_IsBlack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsBlackReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).IsBlack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.friend.friend/IsBlack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).IsBlack(ctx, req.(*IsBlackReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_GetPaginationBlacks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPaginationBlacksReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).GetPaginationBlacks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.friend.friend/GetPaginationBlacks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).GetPaginationBlacks(ctx, req.(*GetPaginationBlacksReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_DeleteFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFriendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).DeleteFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.friend.friend/DeleteFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).DeleteFriend(ctx, req.(*DeleteFriendReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_RespondFriendApply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RespondFriendApplyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).RespondFriendApply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.friend.friend/RespondFriendApply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).RespondFriendApply(ctx, req.(*RespondFriendApplyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_SetFriendRemark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetFriendRemarkReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).SetFriendRemark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.friend.friend/SetFriendRemark",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).SetFriendRemark(ctx, req.(*SetFriendRemarkReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_ImportFriends_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportFriendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).ImportFriends(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.friend.friend/ImportFriends",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).ImportFriends(ctx, req.(*ImportFriendReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_GetDesignatedFriends_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDesignatedFriendsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).GetDesignatedFriends(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.friend.friend/GetDesignatedFriends",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).GetDesignatedFriends(ctx, req.(*GetDesignatedFriendsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_GetPaginationFriends_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPaginationFriendsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).GetPaginationFriends(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.friend.friend/GetPaginationFriends",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).GetPaginationFriends(ctx, req.(*GetPaginationFriendsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Friend_GetFriendIDs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFriendIDsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FriendServer).GetFriendIDs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.friend.friend/GetFriendIDs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FriendServer).GetFriendIDs(ctx, req.(*GetFriendIDsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Friend_serviceDesc = grpc.ServiceDesc{
	ServiceName: "OpenIMServer.friend.friend",
	HandlerType: (*FriendServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "applyToAddFriend",
			Handler:    _Friend_ApplyToAddFriend_Handler,
		},
		{
			MethodName: "getPaginationFriendsApplyTo",
			Handler:    _Friend_GetPaginationFriendsApplyTo_Handler,
		},
		{
			MethodName: "getPaginationFriendsApplyFrom",
			Handler:    _Friend_GetPaginationFriendsApplyFrom_Handler,
		},
		{
			MethodName: "addBlack",
			Handler:    _Friend_AddBlack_Handler,
		},
		{
			MethodName: "removeBlack",
			Handler:    _Friend_RemoveBlack_Handler,
		},
		{
			MethodName: "isFriend",
			Handler:    _Friend_IsFriend_Handler,
		},
		{
			MethodName: "isBlack",
			Handler:    _Friend_IsBlack_Handler,
		},
		{
			MethodName: "getPaginationBlacks",
			Handler:    _Friend_GetPaginationBlacks_Handler,
		},
		{
			MethodName: "deleteFriend",
			Handler:    _Friend_DeleteFriend_Handler,
		},
		{
			MethodName: "respondFriendApply",
			Handler:    _Friend_RespondFriendApply_Handler,
		},
		{
			MethodName: "setFriendRemark",
			Handler:    _Friend_SetFriendRemark_Handler,
		},
		{
			MethodName: "importFriends",
			Handler:    _Friend_ImportFriends_Handler,
		},
		{
			MethodName: "getDesignatedFriends",
			Handler:    _Friend_GetDesignatedFriends_Handler,
		},
		{
			MethodName: "getPaginationFriends",
			Handler:    _Friend_GetPaginationFriends_Handler,
		},
		{
			MethodName: "getFriendIDs",
			Handler:    _Friend_GetFriendIDs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "friend/friend.proto",
}

func init() { proto.RegisterFile("friend/friend.proto", fileDescriptor_friend_10585ad6091091a7) }

var fileDescriptor_friend_10585ad6091091a7 = []byte{
	// 1029 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xcf, 0x6f, 0xdb, 0xc6,
	0x12, 0x06, 0xe5, 0x67, 0xc7, 0x1e, 0x29, 0x92, 0xdf, 0xc8, 0x71, 0x05, 0xb6, 0x71, 0xe8, 0x6d,
	0xd2, 0x28, 0x4d, 0x2c, 0x35, 0x4a, 0xd3, 0x4b, 0x2f, 0xb1, 0xe1, 0x06, 0x10, 0x50, 0x23, 0x2d,
	0x9b, 0xa0, 0x4d, 0x13, 0x14, 0x60, 0xca, 0x95, 0x2a, 0x58, 0x22, 0xd7, 0x1c, 0x3a, 0x76, 0x4e,
	0x45, 0x8b, 0x1e, 0x7a, 0xea, 0xad, 0xf7, 0xfe, 0xa9, 0x05, 0xb9, 0xa4, 0xb8, 0xa4, 0x96, 0xb2,
	0xe4, 0x1a, 0x39, 0x09, 0x33, 0xfa, 0xe6, 0xc7, 0xce, 0xcc, 0xce, 0xb7, 0x84, 0xe6, 0x20, 0x18,
	0x71, 0xcf, 0xed, 0xca, 0x9f, 0x8e, 0x08, 0xfc, 0xd0, 0xc7, 0xe6, 0x33, 0xc1, 0xbd, 0xfe, 0xd1,
	0x77, 0x3c, 0x78, 0xcb, 0x83, 0x8e, 0xfc, 0xcb, 0xbc, 0x1b, 0x29, 0xf7, 0xfa, 0x47, 0x7b, 0x52,
	0xdd, 0x15, 0xc7, 0xc3, 0x6e, 0x0c, 0xef, 0x92, 0x7b, 0x7c, 0x46, 0xdd, 0x33, 0x92, 0xd6, 0xec,
	0x1c, 0x3e, 0x18, 0xf2, 0xf0, 0x1b, 0x67, 0x38, 0xf2, 0x9c, 0x70, 0xe4, 0x7b, 0x4f, 0x63, 0x7b,
	0xb2, 0xf9, 0x09, 0x7e, 0x05, 0x20, 0xa6, 0xfa, 0x96, 0x61, 0x19, 0xed, 0x6a, 0xef, 0x4e, 0x27,
	0x17, 0x2d, 0x76, 0xd6, 0xb1, 0xf9, 0xc9, 0x29, 0x27, 0xc5, 0x89, 0xad, 0x18, 0xe2, 0x36, 0xac,
	0x9d, 0x12, 0x0f, 0xfa, 0x87, 0xad, 0x8a, 0x65, 0xb4, 0x37, 0xec, 0x44, 0x62, 0x01, 0xb4, 0xf4,
	0x91, 0x49, 0xe0, 0x13, 0xa8, 0x26, 0x62, 0xdf, 0x1b, 0xf8, 0x2d, 0xc3, 0x5a, 0x69, 0x57, 0x7b,
	0x3b, 0xba, 0xd8, 0x12, 0x16, 0xa1, 0x6c, 0xd5, 0x04, 0xb7, 0x60, 0x35, 0xf4, 0x43, 0x67, 0x1c,
	0x07, 0x5d, 0xb5, 0xa5, 0xc0, 0xde, 0x41, 0xd3, 0x11, 0x62, 0xfc, 0xee, 0xb9, 0xbf, 0xef, 0xba,
	0x12, 0x1e, 0x9d, 0x74, 0x07, 0x60, 0x10, 0xf8, 0x93, 0x17, 0x32, 0x4d, 0x23, 0x4e, 0x53, 0xd1,
	0xa0, 0x09, 0xeb, 0xa1, 0xff, 0x42, 0x3d, 0xc4, 0x54, 0x8e, 0x8e, 0x17, 0xf0, 0x93, 0x23, 0x1a,
	0xb6, 0x56, 0xe4, 0xf1, 0xa4, 0x84, 0x75, 0xa8, 0xf0, 0xf3, 0xd6, 0xff, 0x62, 0x5d, 0x85, 0x9f,
	0xb3, 0x6d, 0xd8, 0x9a, 0x0d, 0x4d, 0x82, 0xbd, 0x84, 0xc6, 0x68, 0x22, 0xfc, 0x20, 0xcc, 0xd2,
	0xb1, 0xa0, 0xea, 0x9f, 0x79, 0x3c, 0xc8, 0xe5, 0xa3, 0xaa, 0xf0, 0x36, 0x5c, 0x97, 0x8d, 0x96,
	0x32, 0xb5, 0x2a, 0xd6, 0x4a, 0x7b, 0xc3, 0xce, 0x2b, 0x19, 0xc2, 0x66, 0xde, 0x35, 0x09, 0xf6,
	0x2b, 0xec, 0xe8, 0xaa, 0xbe, 0x2f, 0x53, 0x8b, 0xa2, 0x67, 0xfd, 0x32, 0xd4, 0x7e, 0x15, 0xc6,
	0xa1, 0x72, 0xc9, 0x71, 0x60, 0xbf, 0x1b, 0x70, 0x6b, 0x6e, 0x06, 0x24, 0xb0, 0x0f, 0xf5, 0x69,
	0x35, 0x22, 0x57, 0x94, 0x4c, 0xc0, 0x6e, 0xf9, 0x04, 0x24, 0x48, 0xbb, 0x60, 0x58, 0x32, 0x07,
	0x4e, 0x3c, 0xf5, 0x87, 0x9c, 0x46, 0x43, 0xcf, 0x09, 0xb9, 0xab, 0x4c, 0xfd, 0x55, 0x15, 0xff,
	0x75, 0x3c, 0xde, 0x9a, 0x10, 0x72, 0xbc, 0x07, 0xcb, 0x8f, 0xb7, 0x62, 0xc2, 0xbe, 0x85, 0xaa,
	0xe3, 0xba, 0x07, 0x63, 0xe7, 0xe7, 0xe3, 0xc5, 0x92, 0xb6, 0xa0, 0xfa, 0x26, 0x42, 0xe7, 0xa6,
	0x58, 0x55, 0xb1, 0x3a, 0xd4, 0x32, 0x97, 0x24, 0xd8, 0x73, 0xa8, 0x07, 0x7c, 0xe2, 0xbf, 0xe5,
	0x57, 0x1a, 0xe5, 0xff, 0xd0, 0xc8, 0x79, 0x25, 0xc1, 0xce, 0x60, 0x3b, 0x37, 0x10, 0xf1, 0x3f,
	0xf4, 0x1e, 0x46, 0x71, 0x50, 0xd8, 0x7d, 0x69, 0x60, 0x12, 0xf8, 0x18, 0xd6, 0xe2, 0xac, 0xd3,
	0xc9, 0xbb, 0xa9, 0xf3, 0x1e, 0xe3, 0xe3, 0xde, 0x24, 0xe0, 0x92, 0x69, 0xdb, 0x87, 0xea, 0x88,
	0xb2, 0xeb, 0xdd, 0x82, 0x6b, 0xf2, 0x1c, 0x0f, 0x93, 0x63, 0xa5, 0x62, 0xf6, 0x4f, 0x2f, 0x29,
	0x5d, 0x2a, 0xb2, 0x9f, 0xa0, 0x96, 0xb9, 0x20, 0x81, 0x9f, 0x40, 0x7d, 0xe4, 0x45, 0x25, 0x7d,
	0x98, 0xcc, 0x55, 0xec, 0x6a, 0xdd, 0x2e, 0x68, 0x33, 0x5c, 0x2f, 0xc5, 0x55, 0x54, 0x5c, 0xaa,
	0x65, 0x4f, 0x00, 0x46, 0x34, 0x6d, 0xf4, 0x65, 0x32, 0x7c, 0x19, 0x1d, 0x72, 0xda, 0xd4, 0xe8,
	0x92, 0x24, 0xa9, 0x1c, 0xa4, 0x75, 0x8c, 0xe2, 0xe6, 0x95, 0x19, 0xaa, 0x97, 0xa0, 0x2a, 0x2a,
	0x2a, 0x51, 0xb2, 0xef, 0xa1, 0xe1, 0xf2, 0x31, 0x0f, 0xf9, 0x32, 0x2b, 0x92, 0x41, 0x4d, 0xbd,
	0x90, 0x49, 0xba, 0x39, 0x5d, 0xb4, 0x20, 0xf3, 0x8e, 0x49, 0xb0, 0xbf, 0x0d, 0xb8, 0x11, 0x70,
	0x12, 0xbe, 0x97, 0x5c, 0xd9, 0x78, 0x31, 0xfd, 0x57, 0x96, 0x60, 0x50, 0xfb, 0xc5, 0xf1, 0xdc,
	0x31, 0xb7, 0x39, 0x9d, 0x8e, 0xc3, 0x98, 0x2b, 0x56, 0xed, 0x9c, 0x0e, 0x3f, 0x82, 0x0d, 0x29,
	0x47, 0x64, 0x22, 0x89, 0x23, 0x53, 0xb0, 0x16, 0x6c, 0xeb, 0xd2, 0x22, 0xc1, 0x02, 0x40, 0xe2,
	0xd3, 0x1d, 0x3f, 0x71, 0x82, 0xe3, 0x2b, 0xab, 0x90, 0x64, 0xb7, 0xc8, 0x65, 0xc6, 0x6e, 0x91,
	0xc4, 0x6e, 0x40, 0x73, 0x26, 0x26, 0x09, 0xf6, 0x9b, 0x01, 0x56, 0xe9, 0x72, 0x7f, 0x1a, 0xf8,
	0x93, 0xf7, 0x70, 0xab, 0xff, 0x30, 0x60, 0xf7, 0x82, 0x1c, 0x24, 0xc5, 0x0c, 0x2e, 0x4b, 0x31,
	0x83, 0x45, 0x28, 0xe6, 0x1e, 0x34, 0x86, 0x69, 0x85, 0xfa, 0x87, 0xf3, 0xd6, 0x19, 0xfb, 0x0c,
	0x36, 0xf3, 0x50, 0x12, 0xd1, 0x30, 0x0c, 0x52, 0x45, 0x9c, 0xda, 0x86, 0x9d, 0x29, 0x7a, 0xff,
	0xd4, 0x60, 0x4d, 0x4a, 0x38, 0x84, 0xcd, 0xe2, 0xbb, 0x02, 0xdb, 0x1d, 0xcd, 0x9b, 0xb0, 0xa3,
	0x79, 0xf9, 0x98, 0xf7, 0x16, 0x44, 0x92, 0xc0, 0x3f, 0x0d, 0xf8, 0x70, 0x0e, 0x71, 0xe3, 0x23,
	0xad, 0xab, 0xf9, 0x8f, 0x0d, 0xf3, 0xf3, 0xe5, 0x8d, 0x48, 0xe0, 0x5f, 0x06, 0xdc, 0x9c, 0xdb,
	0x62, 0x7c, 0xbc, 0x9c, 0xdf, 0x64, 0x34, 0xcd, 0x2f, 0x2e, 0x63, 0x46, 0x02, 0x9f, 0xc1, 0x7a,
	0xca, 0x9d, 0x68, 0xe9, 0x4b, 0x9a, 0xb1, 0xb5, 0xb9, 0x7b, 0x01, 0x82, 0x04, 0xfe, 0x00, 0x55,
	0x85, 0x26, 0xf1, 0x63, 0xad, 0x45, 0x9e, 0x9e, 0xcd, 0xdb, 0x17, 0x83, 0x64, 0xaa, 0x29, 0x93,
	0x94, 0xa4, 0xaa, 0x70, 0x55, 0x49, 0xaa, 0x39, 0x2a, 0xfa, 0x1a, 0xae, 0x25, 0x8b, 0x1f, 0x6f,
	0x95, 0xa0, 0xa7, 0x29, 0x5a, 0xf3, 0x01, 0x24, 0x50, 0x40, 0x53, 0xc3, 0xc9, 0x78, 0xff, 0xe2,
	0xc6, 0x4c, 0x9f, 0x0d, 0xe6, 0x83, 0xc5, 0xc1, 0x24, 0xf0, 0x15, 0xd4, 0x54, 0x12, 0x40, 0x7d,
	0x19, 0x0b, 0x04, 0x64, 0xde, 0x59, 0x00, 0x45, 0x02, 0x27, 0x80, 0xb3, 0x5b, 0x1b, 0x3f, 0x2d,
	0xe9, 0x94, 0x86, 0x75, 0xcc, 0xfb, 0x0b, 0x63, 0x49, 0xa0, 0x0b, 0x8d, 0xc2, 0x5a, 0xc6, 0xbb,
	0x5a, 0xfb, 0x59, 0xc2, 0x30, 0xdb, 0x8b, 0x01, 0x49, 0xe0, 0x6b, 0xb8, 0xae, 0x7e, 0x57, 0x50,
	0x49, 0xc9, 0x0a, 0x9f, 0x35, 0x25, 0x25, 0x2b, 0x7e, 0xa1, 0x20, 0xc1, 0x96, 0xee, 0xe1, 0x8c,
	0xa5, 0x5d, 0xd5, 0x3d, 0xe3, 0xcd, 0xbd, 0x25, 0xd0, 0xd3, 0xa0, 0x33, 0xb7, 0x1c, 0x1f, 0x2c,
	0xbc, 0x10, 0xe6, 0x06, 0xd5, 0x7f, 0xe5, 0xbe, 0x82, 0x9a, 0xba, 0xf7, 0x4b, 0xca, 0x58, 0x60,
	0x91, 0x92, 0x32, 0x16, 0x09, 0xe4, 0xc0, 0xfa, 0x71, 0x47, 0xe2, 0x94, 0x6f, 0x7f, 0x89, 0xfd,
	0x52, 0xfe, 0xbc, 0x59, 0x8b, 0x95, 0x8f, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x16, 0x81, 0x4d,
	0x78, 0x56, 0x10, 0x00, 0x00,
}
