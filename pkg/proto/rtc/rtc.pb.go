// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rtc/rtc.proto

package rtc // import "OpenIM/pkg/proto/rtc"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import sdkws "OpenIM/pkg/proto/sdkws"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SignalMessageAssembleReq struct {
	SignalReq            *sdkws.SignalReq `protobuf:"bytes,1,opt,name=signalReq" json:"signalReq,omitempty"`
	OperationID          string           `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SignalMessageAssembleReq) Reset()         { *m = SignalMessageAssembleReq{} }
func (m *SignalMessageAssembleReq) String() string { return proto.CompactTextString(m) }
func (*SignalMessageAssembleReq) ProtoMessage()    {}
func (*SignalMessageAssembleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_rtc_1c78526032681b55, []int{0}
}
func (m *SignalMessageAssembleReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignalMessageAssembleReq.Unmarshal(m, b)
}
func (m *SignalMessageAssembleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignalMessageAssembleReq.Marshal(b, m, deterministic)
}
func (dst *SignalMessageAssembleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignalMessageAssembleReq.Merge(dst, src)
}
func (m *SignalMessageAssembleReq) XXX_Size() int {
	return xxx_messageInfo_SignalMessageAssembleReq.Size(m)
}
func (m *SignalMessageAssembleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SignalMessageAssembleReq.DiscardUnknown(m)
}

var xxx_messageInfo_SignalMessageAssembleReq proto.InternalMessageInfo

func (m *SignalMessageAssembleReq) GetSignalReq() *sdkws.SignalReq {
	if m != nil {
		return m.SignalReq
	}
	return nil
}

func (m *SignalMessageAssembleReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type SignalMessageAssembleResp struct {
	IsPass               bool              `protobuf:"varint,1,opt,name=isPass" json:"isPass,omitempty"`
	SignalResp           *sdkws.SignalResp `protobuf:"bytes,2,opt,name=signalResp" json:"signalResp,omitempty"`
	MsgData              *sdkws.MsgData    `protobuf:"bytes,3,opt,name=msgData" json:"msgData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SignalMessageAssembleResp) Reset()         { *m = SignalMessageAssembleResp{} }
func (m *SignalMessageAssembleResp) String() string { return proto.CompactTextString(m) }
func (*SignalMessageAssembleResp) ProtoMessage()    {}
func (*SignalMessageAssembleResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_rtc_1c78526032681b55, []int{1}
}
func (m *SignalMessageAssembleResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignalMessageAssembleResp.Unmarshal(m, b)
}
func (m *SignalMessageAssembleResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignalMessageAssembleResp.Marshal(b, m, deterministic)
}
func (dst *SignalMessageAssembleResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignalMessageAssembleResp.Merge(dst, src)
}
func (m *SignalMessageAssembleResp) XXX_Size() int {
	return xxx_messageInfo_SignalMessageAssembleResp.Size(m)
}
func (m *SignalMessageAssembleResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SignalMessageAssembleResp.DiscardUnknown(m)
}

var xxx_messageInfo_SignalMessageAssembleResp proto.InternalMessageInfo

func (m *SignalMessageAssembleResp) GetIsPass() bool {
	if m != nil {
		return m.IsPass
	}
	return false
}

func (m *SignalMessageAssembleResp) GetSignalResp() *sdkws.SignalResp {
	if m != nil {
		return m.SignalResp
	}
	return nil
}

func (m *SignalMessageAssembleResp) GetMsgData() *sdkws.MsgData {
	if m != nil {
		return m.MsgData
	}
	return nil
}

type SignalGetRoomsReq struct {
	RoomID               string   `protobuf:"bytes,1,opt,name=roomID" json:"roomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignalGetRoomsReq) Reset()         { *m = SignalGetRoomsReq{} }
func (m *SignalGetRoomsReq) String() string { return proto.CompactTextString(m) }
func (*SignalGetRoomsReq) ProtoMessage()    {}
func (*SignalGetRoomsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_rtc_1c78526032681b55, []int{2}
}
func (m *SignalGetRoomsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignalGetRoomsReq.Unmarshal(m, b)
}
func (m *SignalGetRoomsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignalGetRoomsReq.Marshal(b, m, deterministic)
}
func (dst *SignalGetRoomsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignalGetRoomsReq.Merge(dst, src)
}
func (m *SignalGetRoomsReq) XXX_Size() int {
	return xxx_messageInfo_SignalGetRoomsReq.Size(m)
}
func (m *SignalGetRoomsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SignalGetRoomsReq.DiscardUnknown(m)
}

var xxx_messageInfo_SignalGetRoomsReq proto.InternalMessageInfo

func (m *SignalGetRoomsReq) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

type SignalGetRoomsResp struct {
	Rooms                []*sdkws.SignalGetRoomByGroupIDReply `protobuf:"bytes,1,rep,name=rooms" json:"rooms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *SignalGetRoomsResp) Reset()         { *m = SignalGetRoomsResp{} }
func (m *SignalGetRoomsResp) String() string { return proto.CompactTextString(m) }
func (*SignalGetRoomsResp) ProtoMessage()    {}
func (*SignalGetRoomsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_rtc_1c78526032681b55, []int{3}
}
func (m *SignalGetRoomsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignalGetRoomsResp.Unmarshal(m, b)
}
func (m *SignalGetRoomsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignalGetRoomsResp.Marshal(b, m, deterministic)
}
func (dst *SignalGetRoomsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignalGetRoomsResp.Merge(dst, src)
}
func (m *SignalGetRoomsResp) XXX_Size() int {
	return xxx_messageInfo_SignalGetRoomsResp.Size(m)
}
func (m *SignalGetRoomsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SignalGetRoomsResp.DiscardUnknown(m)
}

var xxx_messageInfo_SignalGetRoomsResp proto.InternalMessageInfo

func (m *SignalGetRoomsResp) GetRooms() []*sdkws.SignalGetRoomByGroupIDReply {
	if m != nil {
		return m.Rooms
	}
	return nil
}

func init() {
	proto.RegisterType((*SignalMessageAssembleReq)(nil), "OpenIMServer.rtc.SignalMessageAssembleReq")
	proto.RegisterType((*SignalMessageAssembleResp)(nil), "OpenIMServer.rtc.SignalMessageAssembleResp")
	proto.RegisterType((*SignalGetRoomsReq)(nil), "OpenIMServer.rtc.SignalGetRoomsReq")
	proto.RegisterType((*SignalGetRoomsResp)(nil), "OpenIMServer.rtc.SignalGetRoomsResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RtcService service

type RtcServiceClient interface {
	SignalMessageAssemble(ctx context.Context, in *SignalMessageAssembleReq, opts ...grpc.CallOption) (*SignalMessageAssembleResp, error)
	SignalGetRooms(ctx context.Context, in *SignalGetRoomsReq, opts ...grpc.CallOption) (*SignalGetRoomsResp, error)
}

type rtcServiceClient struct {
	cc *grpc.ClientConn
}

func NewRtcServiceClient(cc *grpc.ClientConn) RtcServiceClient {
	return &rtcServiceClient{cc}
}

func (c *rtcServiceClient) SignalMessageAssemble(ctx context.Context, in *SignalMessageAssembleReq, opts ...grpc.CallOption) (*SignalMessageAssembleResp, error) {
	out := new(SignalMessageAssembleResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.rtc.RtcService/SignalMessageAssemble", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rtcServiceClient) SignalGetRooms(ctx context.Context, in *SignalGetRoomsReq, opts ...grpc.CallOption) (*SignalGetRoomsResp, error) {
	out := new(SignalGetRoomsResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.rtc.RtcService/SignalGetRooms", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RtcService service

type RtcServiceServer interface {
	SignalMessageAssemble(context.Context, *SignalMessageAssembleReq) (*SignalMessageAssembleResp, error)
	SignalGetRooms(context.Context, *SignalGetRoomsReq) (*SignalGetRoomsResp, error)
}

func RegisterRtcServiceServer(s *grpc.Server, srv RtcServiceServer) {
	s.RegisterService(&_RtcService_serviceDesc, srv)
}

func _RtcService_SignalMessageAssemble_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignalMessageAssembleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RtcServiceServer).SignalMessageAssemble(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.rtc.RtcService/SignalMessageAssemble",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RtcServiceServer).SignalMessageAssemble(ctx, req.(*SignalMessageAssembleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RtcService_SignalGetRooms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignalGetRoomsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RtcServiceServer).SignalGetRooms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.rtc.RtcService/SignalGetRooms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RtcServiceServer).SignalGetRooms(ctx, req.(*SignalGetRoomsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _RtcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "OpenIMServer.rtc.RtcService",
	HandlerType: (*RtcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignalMessageAssemble",
			Handler:    _RtcService_SignalMessageAssemble_Handler,
		},
		{
			MethodName: "SignalGetRooms",
			Handler:    _RtcService_SignalGetRooms_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rtc/rtc.proto",
}

func init() { proto.RegisterFile("rtc/rtc.proto", fileDescriptor_rtc_1c78526032681b55) }

var fileDescriptor_rtc_1c78526032681b55 = []byte{
	// 368 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xdd, 0x4a, 0xe3, 0x40,
	0x14, 0x80, 0xc9, 0x96, 0xed, 0x6e, 0x4f, 0xd8, 0x65, 0x77, 0x60, 0x4b, 0x36, 0xa2, 0x94, 0x28,
	0x58, 0x2c, 0x4d, 0x20, 0xe2, 0x55, 0x41, 0xb0, 0x44, 0x4a, 0x2e, 0x82, 0x32, 0xbd, 0xb3, 0x57,
	0x69, 0x1c, 0x42, 0x68, 0xd3, 0x99, 0xce, 0x19, 0x2d, 0x7d, 0x25, 0x5f, 0xc9, 0x97, 0x91, 0x4c,
	0x5a, 0x4c, 0x4b, 0xa3, 0x5e, 0x9e, 0x33, 0xdf, 0x77, 0x7e, 0x66, 0x06, 0x7e, 0x49, 0x95, 0x78,
	0x52, 0x25, 0xae, 0x90, 0x5c, 0x71, 0xf2, 0xe7, 0x4e, 0xb0, 0x45, 0x18, 0x8d, 0x99, 0x7c, 0x66,
	0xd2, 0x95, 0x2a, 0xb1, 0xcf, 0x8b, 0x4c, 0x3f, 0x8c, 0xfa, 0x65, 0xce, 0x13, 0xb3, 0xd4, 0xd3,
	0xac, 0x87, 0x8f, 0xb3, 0x15, 0x7a, 0x2b, 0x2c, 0x55, 0x67, 0x0d, 0xd6, 0x38, 0x4b, 0x17, 0xf1,
	0x3c, 0x62, 0x88, 0x71, 0xca, 0x6e, 0x10, 0x59, 0x3e, 0x9d, 0x33, 0xca, 0x96, 0x64, 0x00, 0x2d,
	0xd4, 0x67, 0x94, 0x2d, 0x2d, 0xa3, 0x63, 0x74, 0x4d, 0xff, 0xd8, 0xdd, 0x69, 0xa5, 0x8b, 0xb9,
	0xe3, 0x2d, 0x44, 0xdf, 0x79, 0xd2, 0x01, 0x93, 0x0b, 0x26, 0x63, 0x95, 0xf1, 0x45, 0x18, 0x58,
	0xdf, 0x3a, 0x46, 0xb7, 0x45, 0xab, 0x29, 0xe7, 0xc5, 0x80, 0xff, 0x35, 0xbd, 0x51, 0x90, 0x36,
	0x34, 0x33, 0xbc, 0x8f, 0x11, 0x75, 0xe7, 0x9f, 0x74, 0x13, 0x91, 0x6b, 0x80, 0x6d, 0x13, 0x14,
	0xba, 0xac, 0xe9, 0x9f, 0x7c, 0x34, 0x15, 0x0a, 0x5a, 0x31, 0xc8, 0x15, 0xfc, 0xc8, 0x31, 0x0d,
	0x62, 0x15, 0x5b, 0x0d, 0x2d, 0x1f, 0x1d, 0x92, 0xa3, 0x12, 0xa1, 0x5b, 0xd6, 0xe9, 0xc1, 0xdf,
	0xb2, 0xe0, 0x88, 0x29, 0xca, 0x79, 0x8e, 0xc5, 0x8e, 0x6d, 0x68, 0x4a, 0xce, 0xf3, 0x30, 0xd0,
	0x33, 0xb6, 0xe8, 0x26, 0x72, 0x26, 0x40, 0xf6, 0x61, 0x14, 0xe4, 0x16, 0xbe, 0x17, 0xe7, 0xc5,
	0x42, 0x8d, 0xae, 0xe9, 0x7b, 0xf5, 0x43, 0x6f, 0xb4, 0xe1, 0x7a, 0x24, 0xf9, 0x93, 0x08, 0x03,
	0xca, 0xc4, 0x7c, 0x4d, 0x4b, 0xdb, 0x7f, 0x35, 0x00, 0xa8, 0x4a, 0x0a, 0x2d, 0x4b, 0x18, 0x11,
	0xf0, 0xef, 0xe0, 0x25, 0x92, 0x0b, 0x77, 0xff, 0x57, 0xb8, 0x75, 0x2f, 0x6d, 0xf7, 0xbe, 0xcc,
	0xa2, 0x20, 0x13, 0xf8, 0xbd, 0xbb, 0x1d, 0x39, 0xad, 0xd3, 0x2b, 0x97, 0x65, 0x9f, 0x7d, 0x0e,
	0xa1, 0x18, 0xda, 0x0f, 0x56, 0x89, 0x55, 0xbe, 0xac, 0x54, 0xc9, 0x40, 0xaa, 0x64, 0xda, 0xd4,
	0xe1, 0xe5, 0x5b, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6d, 0x79, 0xb8, 0x52, 0xfe, 0x02, 0x00, 0x00,
}
