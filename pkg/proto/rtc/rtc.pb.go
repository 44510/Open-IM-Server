// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v4.22.0
// source: rtc/rtc.proto

package rtc

import (
	context "context"
	sdkws "github.com/OpenIMSDK/Open-IM-Server/pkg/proto/sdkws"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SignalMessageAssembleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignalReq   *sdkws.SignalReq `protobuf:"bytes,1,opt,name=signalReq,proto3" json:"signalReq,omitempty"`
	OperationID string           `protobuf:"bytes,2,opt,name=operationID,proto3" json:"operationID,omitempty"`
}

func (x *SignalMessageAssembleReq) Reset() {
	*x = SignalMessageAssembleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtc_rtc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalMessageAssembleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalMessageAssembleReq) ProtoMessage() {}

func (x *SignalMessageAssembleReq) ProtoReflect() protoreflect.Message {
	mi := &file_rtc_rtc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalMessageAssembleReq.ProtoReflect.Descriptor instead.
func (*SignalMessageAssembleReq) Descriptor() ([]byte, []int) {
	return file_rtc_rtc_proto_rawDescGZIP(), []int{0}
}

func (x *SignalMessageAssembleReq) GetSignalReq() *sdkws.SignalReq {
	if x != nil {
		return x.SignalReq
	}
	return nil
}

func (x *SignalMessageAssembleReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type SignalMessageAssembleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPass     bool              `protobuf:"varint,1,opt,name=isPass,proto3" json:"isPass,omitempty"`
	SignalResp *sdkws.SignalResp `protobuf:"bytes,2,opt,name=signalResp,proto3" json:"signalResp,omitempty"`
	MsgData    *sdkws.MsgData    `protobuf:"bytes,3,opt,name=msgData,proto3" json:"msgData,omitempty"`
}

func (x *SignalMessageAssembleResp) Reset() {
	*x = SignalMessageAssembleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtc_rtc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalMessageAssembleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalMessageAssembleResp) ProtoMessage() {}

func (x *SignalMessageAssembleResp) ProtoReflect() protoreflect.Message {
	mi := &file_rtc_rtc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalMessageAssembleResp.ProtoReflect.Descriptor instead.
func (*SignalMessageAssembleResp) Descriptor() ([]byte, []int) {
	return file_rtc_rtc_proto_rawDescGZIP(), []int{1}
}

func (x *SignalMessageAssembleResp) GetIsPass() bool {
	if x != nil {
		return x.IsPass
	}
	return false
}

func (x *SignalMessageAssembleResp) GetSignalResp() *sdkws.SignalResp {
	if x != nil {
		return x.SignalResp
	}
	return nil
}

func (x *SignalMessageAssembleResp) GetMsgData() *sdkws.MsgData {
	if x != nil {
		return x.MsgData
	}
	return nil
}

type SignalGetRoomsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID string `protobuf:"bytes,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
}

func (x *SignalGetRoomsReq) Reset() {
	*x = SignalGetRoomsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtc_rtc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalGetRoomsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalGetRoomsReq) ProtoMessage() {}

func (x *SignalGetRoomsReq) ProtoReflect() protoreflect.Message {
	mi := &file_rtc_rtc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalGetRoomsReq.ProtoReflect.Descriptor instead.
func (*SignalGetRoomsReq) Descriptor() ([]byte, []int) {
	return file_rtc_rtc_proto_rawDescGZIP(), []int{2}
}

func (x *SignalGetRoomsReq) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

type SignalGetRoomsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rooms []*sdkws.SignalGetRoomByGroupIDReply `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *SignalGetRoomsResp) Reset() {
	*x = SignalGetRoomsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rtc_rtc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalGetRoomsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalGetRoomsResp) ProtoMessage() {}

func (x *SignalGetRoomsResp) ProtoReflect() protoreflect.Message {
	mi := &file_rtc_rtc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalGetRoomsResp.ProtoReflect.Descriptor instead.
func (*SignalGetRoomsResp) Descriptor() ([]byte, []int) {
	return file_rtc_rtc_proto_rawDescGZIP(), []int{3}
}

func (x *SignalGetRoomsResp) GetRooms() []*sdkws.SignalGetRoomByGroupIDReply {
	if x != nil {
		return x.Rooms
	}
	return nil
}

var File_rtc_rtc_proto protoreflect.FileDescriptor

var file_rtc_rtc_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x72, 0x74, 0x63, 0x2f, 0x72, 0x74, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x74,
	0x63, 0x1a, 0x11, 0x73, 0x64, 0x6b, 0x77, 0x73, 0x2f, 0x73, 0x64, 0x6b, 0x77, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x79, 0x0a, 0x18, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x3b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x73, 0x64, 0x6b, 0x77, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22,
	0xaa, 0x01, 0x0a, 0x19, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x73, 0x50, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x73, 0x50, 0x61, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x64, 0x6b, 0x77, 0x73, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x64, 0x6b, 0x77, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2b, 0x0a, 0x11,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22, 0x5b, 0x0a, 0x12, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x45, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x64,
	0x6b, 0x77, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x32, 0xdb, 0x01, 0x0a, 0x0a, 0x52, 0x74, 0x63, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x70, 0x0a, 0x15, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x65, 0x12, 0x2a,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x74,
	0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41,
	0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x74, 0x63, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x73, 0x73, 0x65, 0x6d,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5b, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x74, 0x63, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x24,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x72, 0x74,
	0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x44, 0x4b, 0x2f, 0x4f, 0x70, 0x65,
	0x6e, 0x2d, 0x49, 0x4d, 0x2d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x74, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_rtc_rtc_proto_rawDescOnce sync.Once
	file_rtc_rtc_proto_rawDescData = file_rtc_rtc_proto_rawDesc
)

func file_rtc_rtc_proto_rawDescGZIP() []byte {
	file_rtc_rtc_proto_rawDescOnce.Do(func() {
		file_rtc_rtc_proto_rawDescData = protoimpl.X.CompressGZIP(file_rtc_rtc_proto_rawDescData)
	})
	return file_rtc_rtc_proto_rawDescData
}

var file_rtc_rtc_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_rtc_rtc_proto_goTypes = []interface{}{
	(*SignalMessageAssembleReq)(nil),          // 0: OpenIMServer.rtc.SignalMessageAssembleReq
	(*SignalMessageAssembleResp)(nil),         // 1: OpenIMServer.rtc.SignalMessageAssembleResp
	(*SignalGetRoomsReq)(nil),                 // 2: OpenIMServer.rtc.SignalGetRoomsReq
	(*SignalGetRoomsResp)(nil),                // 3: OpenIMServer.rtc.SignalGetRoomsResp
	(*sdkws.SignalReq)(nil),                   // 4: OpenIMServer.sdkws.SignalReq
	(*sdkws.SignalResp)(nil),                  // 5: OpenIMServer.sdkws.SignalResp
	(*sdkws.MsgData)(nil),                     // 6: OpenIMServer.sdkws.MsgData
	(*sdkws.SignalGetRoomByGroupIDReply)(nil), // 7: OpenIMServer.sdkws.SignalGetRoomByGroupIDReply
}
var file_rtc_rtc_proto_depIdxs = []int32{
	4, // 0: OpenIMServer.rtc.SignalMessageAssembleReq.signalReq:type_name -> OpenIMServer.sdkws.SignalReq
	5, // 1: OpenIMServer.rtc.SignalMessageAssembleResp.signalResp:type_name -> OpenIMServer.sdkws.SignalResp
	6, // 2: OpenIMServer.rtc.SignalMessageAssembleResp.msgData:type_name -> OpenIMServer.sdkws.MsgData
	7, // 3: OpenIMServer.rtc.SignalGetRoomsResp.rooms:type_name -> OpenIMServer.sdkws.SignalGetRoomByGroupIDReply
	0, // 4: OpenIMServer.rtc.RtcService.SignalMessageAssemble:input_type -> OpenIMServer.rtc.SignalMessageAssembleReq
	2, // 5: OpenIMServer.rtc.RtcService.SignalGetRooms:input_type -> OpenIMServer.rtc.SignalGetRoomsReq
	1, // 6: OpenIMServer.rtc.RtcService.SignalMessageAssemble:output_type -> OpenIMServer.rtc.SignalMessageAssembleResp
	3, // 7: OpenIMServer.rtc.RtcService.SignalGetRooms:output_type -> OpenIMServer.rtc.SignalGetRoomsResp
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_rtc_rtc_proto_init() }
func file_rtc_rtc_proto_init() {
	if File_rtc_rtc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rtc_rtc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalMessageAssembleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rtc_rtc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalMessageAssembleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rtc_rtc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalGetRoomsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rtc_rtc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalGetRoomsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rtc_rtc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rtc_rtc_proto_goTypes,
		DependencyIndexes: file_rtc_rtc_proto_depIdxs,
		MessageInfos:      file_rtc_rtc_proto_msgTypes,
	}.Build()
	File_rtc_rtc_proto = out.File
	file_rtc_rtc_proto_rawDesc = nil
	file_rtc_rtc_proto_goTypes = nil
	file_rtc_rtc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RtcServiceClient is the client API for RtcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RtcServiceClient interface {
	SignalMessageAssemble(ctx context.Context, in *SignalMessageAssembleReq, opts ...grpc.CallOption) (*SignalMessageAssembleResp, error)
	SignalGetRooms(ctx context.Context, in *SignalGetRoomsReq, opts ...grpc.CallOption) (*SignalGetRoomsResp, error)
}

type rtcServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRtcServiceClient(cc grpc.ClientConnInterface) RtcServiceClient {
	return &rtcServiceClient{cc}
}

func (c *rtcServiceClient) SignalMessageAssemble(ctx context.Context, in *SignalMessageAssembleReq, opts ...grpc.CallOption) (*SignalMessageAssembleResp, error) {
	out := new(SignalMessageAssembleResp)
	err := c.cc.Invoke(ctx, "/OpenIMServer.rtc.RtcService/SignalMessageAssemble", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rtcServiceClient) SignalGetRooms(ctx context.Context, in *SignalGetRoomsReq, opts ...grpc.CallOption) (*SignalGetRoomsResp, error) {
	out := new(SignalGetRoomsResp)
	err := c.cc.Invoke(ctx, "/OpenIMServer.rtc.RtcService/SignalGetRooms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RtcServiceServer is the server API for RtcService service.
type RtcServiceServer interface {
	SignalMessageAssemble(context.Context, *SignalMessageAssembleReq) (*SignalMessageAssembleResp, error)
	SignalGetRooms(context.Context, *SignalGetRoomsReq) (*SignalGetRoomsResp, error)
}

// UnimplementedRtcServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRtcServiceServer struct {
}

func (*UnimplementedRtcServiceServer) SignalMessageAssemble(context.Context, *SignalMessageAssembleReq) (*SignalMessageAssembleResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignalMessageAssemble not implemented")
}
func (*UnimplementedRtcServiceServer) SignalGetRooms(context.Context, *SignalGetRoomsReq) (*SignalGetRoomsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignalGetRooms not implemented")
}

func RegisterRtcServiceServer(s *grpc.Server, srv RtcServiceServer) {
	s.RegisterService(&_RtcService_serviceDesc, srv)
}

func _RtcService_SignalMessageAssemble_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignalMessageAssembleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RtcServiceServer).SignalMessageAssemble(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.rtc.RtcService/SignalMessageAssemble",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RtcServiceServer).SignalMessageAssemble(ctx, req.(*SignalMessageAssembleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RtcService_SignalGetRooms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignalGetRoomsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RtcServiceServer).SignalGetRooms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.rtc.RtcService/SignalGetRooms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RtcServiceServer).SignalGetRooms(ctx, req.(*SignalGetRoomsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _RtcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "OpenIMServer.rtc.RtcService",
	HandlerType: (*RtcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignalMessageAssemble",
			Handler:    _RtcService_SignalMessageAssemble_Handler,
		},
		{
			MethodName: "SignalGetRooms",
			Handler:    _RtcService_SignalGetRooms_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rtc/rtc.proto",
}
