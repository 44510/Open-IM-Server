syntax = "proto3";
package OpenIMServer.third;
import "sdkws/sdkws.proto";
option go_package = "github.com/OpenIMSDK/Open-IM-Server/pkg/proto/third";

message ApplyPutReq {
  string name = 1;
  int64 size = 2;
  string hash = 3;
  int64 fragmentSize = 4;
  int64 cleanTime = 5;
}

message ApplyPutResp {
  string url = 1;
  string putID = 2;
  int64 fragmentSize = 3;
  //  int64 expirationTime = 4;
  repeated string PutURLs = 5;
}

message ConfirmPutReq {
  string putID = 1;
}

message ConfirmPutResp {
  string url = 1;
}

message GetUrlReq {
  string name = 1; // 文件名
  int64 expires = 2; // url有效时间
}

message GetUrlResp {
  string url = 1;
  int64 size = 2;
  string hash = 3;
}

message GetPutReq {
  string putID = 1;
}

message GetPutFragment{
  int64 size = 1;
  string hash = 2;
}

message GetPutResp {
  string name = 1;
  int64 size = 2;
  string hash = 3;
  int64 fragmentSize = 4;
  int64 cleanTime = 5;
  repeated GetPutFragment fragments = 6;
}

message GetSignalInvitationInfoReq {
  string ClientMsgID = 1;
}

message GetSignalInvitationInfoResp {
  sdkws.InvitationInfo invitationInfo = 1;
  sdkws.OfflinePushInfo offlinePushInfo = 2;
}

message GetSignalInvitationInfoStartAppReq {
  string userID = 1;
}

message GetSignalInvitationInfoStartAppResp {
  sdkws.InvitationInfo invitationInfo = 1;
  sdkws.OfflinePushInfo offlinePushInfo = 2;
}

message FcmUpdateTokenReq {
  int32 PlatformID = 1;
  string FcmToken = 2;
  string account = 3;
  int64 expireTime = 4;
}

message FcmUpdateTokenResp {
}

message SetAppBadgeReq {
  string userID = 1;
  int32 AppUnreadCount = 2;
}

message SetAppBadgeResp {
}

service third {
  rpc ApplyPut(ApplyPutReq) returns(ApplyPutResp);
  rpc GetPut(GetPutReq) returns(GetPutResp);
  rpc ConfirmPut(ConfirmPutReq) returns(ConfirmPutResp);
  rpc GetUrl(GetUrlReq) returns(GetUrlResp);

  rpc GetSignalInvitationInfo(GetSignalInvitationInfoReq) returns(GetSignalInvitationInfoResp);
  rpc GetSignalInvitationInfoStartApp(GetSignalInvitationInfoStartAppReq) returns(GetSignalInvitationInfoStartAppResp);
  rpc FcmUpdateToken(FcmUpdateTokenReq) returns(FcmUpdateTokenResp);
  rpc SetAppBadge(SetAppBadgeReq) returns(SetAppBadgeResp);
}






