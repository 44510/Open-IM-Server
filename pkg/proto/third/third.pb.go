// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v4.22.0
// source: third/third.proto

package third

import (
	context "context"
	sdkws "github.com/OpenIMSDK/Open-IM-Server/pkg/proto/sdkws"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApplyPutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Size         int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size"`
	Hash         string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash"`
	FragmentSize int64  `protobuf:"varint,4,opt,name=fragmentSize,proto3" json:"fragmentSize"`
	CleanTime    int64  `protobuf:"varint,5,opt,name=cleanTime,proto3" json:"cleanTime"`
}

func (x *ApplyPutReq) Reset() {
	*x = ApplyPutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_third_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyPutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyPutReq) ProtoMessage() {}

func (x *ApplyPutReq) ProtoReflect() protoreflect.Message {
	mi := &file_third_third_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyPutReq.ProtoReflect.Descriptor instead.
func (*ApplyPutReq) Descriptor() ([]byte, []int) {
	return file_third_third_proto_rawDescGZIP(), []int{0}
}

func (x *ApplyPutReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplyPutReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ApplyPutReq) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ApplyPutReq) GetFragmentSize() int64 {
	if x != nil {
		return x.FragmentSize
	}
	return 0
}

func (x *ApplyPutReq) GetCleanTime() int64 {
	if x != nil {
		return x.CleanTime
	}
	return 0
}

type ApplyPutResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url          string `protobuf:"bytes,1,opt,name=url,proto3" json:"url"`
	PutID        string `protobuf:"bytes,2,opt,name=putID,proto3" json:"putID"`
	FragmentSize int64  `protobuf:"varint,3,opt,name=fragmentSize,proto3" json:"fragmentSize"`
	// int64 expirationTime = 4;
	PutURLs []string `protobuf:"bytes,5,rep,name=PutURLs,proto3" json:"PutURLs"`
}

func (x *ApplyPutResp) Reset() {
	*x = ApplyPutResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_third_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyPutResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyPutResp) ProtoMessage() {}

func (x *ApplyPutResp) ProtoReflect() protoreflect.Message {
	mi := &file_third_third_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyPutResp.ProtoReflect.Descriptor instead.
func (*ApplyPutResp) Descriptor() ([]byte, []int) {
	return file_third_third_proto_rawDescGZIP(), []int{1}
}

func (x *ApplyPutResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ApplyPutResp) GetPutID() string {
	if x != nil {
		return x.PutID
	}
	return ""
}

func (x *ApplyPutResp) GetFragmentSize() int64 {
	if x != nil {
		return x.FragmentSize
	}
	return 0
}

func (x *ApplyPutResp) GetPutURLs() []string {
	if x != nil {
		return x.PutURLs
	}
	return nil
}

type ConfirmPutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PutID string `protobuf:"bytes,1,opt,name=putID,proto3" json:"putID"`
}

func (x *ConfirmPutReq) Reset() {
	*x = ConfirmPutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_third_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmPutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmPutReq) ProtoMessage() {}

func (x *ConfirmPutReq) ProtoReflect() protoreflect.Message {
	mi := &file_third_third_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmPutReq.ProtoReflect.Descriptor instead.
func (*ConfirmPutReq) Descriptor() ([]byte, []int) {
	return file_third_third_proto_rawDescGZIP(), []int{2}
}

func (x *ConfirmPutReq) GetPutID() string {
	if x != nil {
		return x.PutID
	}
	return ""
}

type ConfirmPutResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url"`
}

func (x *ConfirmPutResp) Reset() {
	*x = ConfirmPutResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_third_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmPutResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmPutResp) ProtoMessage() {}

func (x *ConfirmPutResp) ProtoReflect() protoreflect.Message {
	mi := &file_third_third_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmPutResp.ProtoReflect.Descriptor instead.
func (*ConfirmPutResp) Descriptor() ([]byte, []int) {
	return file_third_third_proto_rawDescGZIP(), []int{3}
}

func (x *ConfirmPutResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetUrlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`        // 文件名
	Expires int64  `protobuf:"varint,2,opt,name=expires,proto3" json:"expires"` // url有效时间
}

func (x *GetUrlReq) Reset() {
	*x = GetUrlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_third_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUrlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUrlReq) ProtoMessage() {}

func (x *GetUrlReq) ProtoReflect() protoreflect.Message {
	mi := &file_third_third_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUrlReq.ProtoReflect.Descriptor instead.
func (*GetUrlReq) Descriptor() ([]byte, []int) {
	return file_third_third_proto_rawDescGZIP(), []int{4}
}

func (x *GetUrlReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetUrlReq) GetExpires() int64 {
	if x != nil {
		return x.Expires
	}
	return 0
}

type GetUrlResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url  string `protobuf:"bytes,1,opt,name=url,proto3" json:"url"`
	Size int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size"`
	Hash string `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash"`
}

func (x *GetUrlResp) Reset() {
	*x = GetUrlResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_third_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUrlResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUrlResp) ProtoMessage() {}

func (x *GetUrlResp) ProtoReflect() protoreflect.Message {
	mi := &file_third_third_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUrlResp.ProtoReflect.Descriptor instead.
func (*GetUrlResp) Descriptor() ([]byte, []int) {
	return file_third_third_proto_rawDescGZIP(), []int{5}
}

func (x *GetUrlResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetUrlResp) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetUrlResp) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type GetPutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PutID string `protobuf:"bytes,1,opt,name=putID,proto3" json:"putID"`
}

func (x *GetPutReq) Reset() {
	*x = GetPutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_third_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPutReq) ProtoMessage() {}

func (x *GetPutReq) ProtoReflect() protoreflect.Message {
	mi := &file_third_third_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPutReq.ProtoReflect.Descriptor instead.
func (*GetPutReq) Descriptor() ([]byte, []int) {
	return file_third_third_proto_rawDescGZIP(), []int{6}
}

func (x *GetPutReq) GetPutID() string {
	if x != nil {
		return x.PutID
	}
	return ""
}

type GetPutFragment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size int64  `protobuf:"varint,1,opt,name=size,proto3" json:"size"`
	Hash string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash"`
}

func (x *GetPutFragment) Reset() {
	*x = GetPutFragment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_third_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPutFragment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPutFragment) ProtoMessage() {}

func (x *GetPutFragment) ProtoReflect() protoreflect.Message {
	mi := &file_third_third_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPutFragment.ProtoReflect.Descriptor instead.
func (*GetPutFragment) Descriptor() ([]byte, []int) {
	return file_third_third_proto_rawDescGZIP(), []int{7}
}

func (x *GetPutFragment) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetPutFragment) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type GetPutResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Size         int64             `protobuf:"varint,2,opt,name=size,proto3" json:"size"`
	Hash         string            `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash"`
	FragmentSize int64             `protobuf:"varint,4,opt,name=fragmentSize,proto3" json:"fragmentSize"`
	CleanTime    int64             `protobuf:"varint,5,opt,name=cleanTime,proto3" json:"cleanTime"`
	Fragments    []*GetPutFragment `protobuf:"bytes,6,rep,name=fragments,proto3" json:"fragments"`
}

func (x *GetPutResp) Reset() {
	*x = GetPutResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_third_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPutResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPutResp) ProtoMessage() {}

func (x *GetPutResp) ProtoReflect() protoreflect.Message {
	mi := &file_third_third_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPutResp.ProtoReflect.Descriptor instead.
func (*GetPutResp) Descriptor() ([]byte, []int) {
	return file_third_third_proto_rawDescGZIP(), []int{8}
}

func (x *GetPutResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPutResp) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetPutResp) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *GetPutResp) GetFragmentSize() int64 {
	if x != nil {
		return x.FragmentSize
	}
	return 0
}

func (x *GetPutResp) GetCleanTime() int64 {
	if x != nil {
		return x.CleanTime
	}
	return 0
}

func (x *GetPutResp) GetFragments() []*GetPutFragment {
	if x != nil {
		return x.Fragments
	}
	return nil
}

type GetSignalInvitationInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientMsgID string `protobuf:"bytes,1,opt,name=ClientMsgID,proto3" json:"ClientMsgID"`
}

func (x *GetSignalInvitationInfoReq) Reset() {
	*x = GetSignalInvitationInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_third_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSignalInvitationInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignalInvitationInfoReq) ProtoMessage() {}

func (x *GetSignalInvitationInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_third_third_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignalInvitationInfoReq.ProtoReflect.Descriptor instead.
func (*GetSignalInvitationInfoReq) Descriptor() ([]byte, []int) {
	return file_third_third_proto_rawDescGZIP(), []int{9}
}

func (x *GetSignalInvitationInfoReq) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

type GetSignalInvitationInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvitationInfo  *sdkws.InvitationInfo  `protobuf:"bytes,1,opt,name=invitationInfo,proto3" json:"invitationInfo"`
	OfflinePushInfo *sdkws.OfflinePushInfo `protobuf:"bytes,2,opt,name=offlinePushInfo,proto3" json:"offlinePushInfo"`
}

func (x *GetSignalInvitationInfoResp) Reset() {
	*x = GetSignalInvitationInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_third_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSignalInvitationInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignalInvitationInfoResp) ProtoMessage() {}

func (x *GetSignalInvitationInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_third_third_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignalInvitationInfoResp.ProtoReflect.Descriptor instead.
func (*GetSignalInvitationInfoResp) Descriptor() ([]byte, []int) {
	return file_third_third_proto_rawDescGZIP(), []int{10}
}

func (x *GetSignalInvitationInfoResp) GetInvitationInfo() *sdkws.InvitationInfo {
	if x != nil {
		return x.InvitationInfo
	}
	return nil
}

func (x *GetSignalInvitationInfoResp) GetOfflinePushInfo() *sdkws.OfflinePushInfo {
	if x != nil {
		return x.OfflinePushInfo
	}
	return nil
}

type GetSignalInvitationInfoStartAppReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
}

func (x *GetSignalInvitationInfoStartAppReq) Reset() {
	*x = GetSignalInvitationInfoStartAppReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_third_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSignalInvitationInfoStartAppReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignalInvitationInfoStartAppReq) ProtoMessage() {}

func (x *GetSignalInvitationInfoStartAppReq) ProtoReflect() protoreflect.Message {
	mi := &file_third_third_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignalInvitationInfoStartAppReq.ProtoReflect.Descriptor instead.
func (*GetSignalInvitationInfoStartAppReq) Descriptor() ([]byte, []int) {
	return file_third_third_proto_rawDescGZIP(), []int{11}
}

func (x *GetSignalInvitationInfoStartAppReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetSignalInvitationInfoStartAppResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvitationInfo  *sdkws.InvitationInfo  `protobuf:"bytes,1,opt,name=invitationInfo,proto3" json:"invitationInfo"`
	OfflinePushInfo *sdkws.OfflinePushInfo `protobuf:"bytes,2,opt,name=offlinePushInfo,proto3" json:"offlinePushInfo"`
}

func (x *GetSignalInvitationInfoStartAppResp) Reset() {
	*x = GetSignalInvitationInfoStartAppResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_third_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSignalInvitationInfoStartAppResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignalInvitationInfoStartAppResp) ProtoMessage() {}

func (x *GetSignalInvitationInfoStartAppResp) ProtoReflect() protoreflect.Message {
	mi := &file_third_third_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignalInvitationInfoStartAppResp.ProtoReflect.Descriptor instead.
func (*GetSignalInvitationInfoStartAppResp) Descriptor() ([]byte, []int) {
	return file_third_third_proto_rawDescGZIP(), []int{12}
}

func (x *GetSignalInvitationInfoStartAppResp) GetInvitationInfo() *sdkws.InvitationInfo {
	if x != nil {
		return x.InvitationInfo
	}
	return nil
}

func (x *GetSignalInvitationInfoStartAppResp) GetOfflinePushInfo() *sdkws.OfflinePushInfo {
	if x != nil {
		return x.OfflinePushInfo
	}
	return nil
}

type FcmUpdateTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformID int32  `protobuf:"varint,1,opt,name=PlatformID,proto3" json:"PlatformID"`
	FcmToken   string `protobuf:"bytes,2,opt,name=FcmToken,proto3" json:"FcmToken"`
	Account    string `protobuf:"bytes,3,opt,name=account,proto3" json:"account"`
	ExpireTime int64  `protobuf:"varint,4,opt,name=expireTime,proto3" json:"expireTime"`
}

func (x *FcmUpdateTokenReq) Reset() {
	*x = FcmUpdateTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_third_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FcmUpdateTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FcmUpdateTokenReq) ProtoMessage() {}

func (x *FcmUpdateTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_third_third_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FcmUpdateTokenReq.ProtoReflect.Descriptor instead.
func (*FcmUpdateTokenReq) Descriptor() ([]byte, []int) {
	return file_third_third_proto_rawDescGZIP(), []int{13}
}

func (x *FcmUpdateTokenReq) GetPlatformID() int32 {
	if x != nil {
		return x.PlatformID
	}
	return 0
}

func (x *FcmUpdateTokenReq) GetFcmToken() string {
	if x != nil {
		return x.FcmToken
	}
	return ""
}

func (x *FcmUpdateTokenReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *FcmUpdateTokenReq) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

type FcmUpdateTokenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FcmUpdateTokenResp) Reset() {
	*x = FcmUpdateTokenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_third_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FcmUpdateTokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FcmUpdateTokenResp) ProtoMessage() {}

func (x *FcmUpdateTokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_third_third_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FcmUpdateTokenResp.ProtoReflect.Descriptor instead.
func (*FcmUpdateTokenResp) Descriptor() ([]byte, []int) {
	return file_third_third_proto_rawDescGZIP(), []int{14}
}

type SetAppBadgeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID         string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	AppUnreadCount int32  `protobuf:"varint,2,opt,name=AppUnreadCount,proto3" json:"AppUnreadCount"`
}

func (x *SetAppBadgeReq) Reset() {
	*x = SetAppBadgeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_third_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAppBadgeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAppBadgeReq) ProtoMessage() {}

func (x *SetAppBadgeReq) ProtoReflect() protoreflect.Message {
	mi := &file_third_third_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAppBadgeReq.ProtoReflect.Descriptor instead.
func (*SetAppBadgeReq) Descriptor() ([]byte, []int) {
	return file_third_third_proto_rawDescGZIP(), []int{15}
}

func (x *SetAppBadgeReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SetAppBadgeReq) GetAppUnreadCount() int32 {
	if x != nil {
		return x.AppUnreadCount
	}
	return 0
}

type SetAppBadgeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetAppBadgeResp) Reset() {
	*x = SetAppBadgeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_third_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAppBadgeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAppBadgeResp) ProtoMessage() {}

func (x *SetAppBadgeResp) ProtoReflect() protoreflect.Message {
	mi := &file_third_third_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAppBadgeResp.ProtoReflect.Descriptor instead.
func (*SetAppBadgeResp) Descriptor() ([]byte, []int) {
	return file_third_third_proto_rawDescGZIP(), []int{16}
}

var File_third_third_proto protoreflect.FileDescriptor

var file_third_third_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x1a, 0x11, 0x73, 0x64, 0x6b, 0x77, 0x73, 0x2f, 0x73,
	0x64, 0x6b, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x0b, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x72,
	0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c,
	0x65, 0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x6c, 0x65, 0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x74, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x75,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x75, 0x74, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x75, 0x74, 0x55, 0x52, 0x4c, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x50, 0x75, 0x74, 0x55, 0x52, 0x4c, 0x73, 0x22, 0x25,
	0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x75, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x75, 0x74, 0x49, 0x44, 0x22, 0x22, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x39, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x21, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x75, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x75, 0x74, 0x49, 0x44, 0x22,
	0x38, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0xcc, 0x01, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x72, 0x61, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x65, 0x61,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x65,
	0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x75, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x66,
	0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x3e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x22, 0xb8, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x73, 0x64, 0x6b, 0x77, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4d, 0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x64, 0x6b,
	0x77, 0x73, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x3c, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x22, 0xc0, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0e, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x73, 0x64, 0x6b, 0x77, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4d, 0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x64,
	0x6b, 0x77, 0x73, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x89, 0x01, 0x0a, 0x11, 0x46, 0x63, 0x6d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x63,
	0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x63,
	0x6d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x14, 0x0a, 0x12, 0x46, 0x63, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x50, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x26, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x41, 0x70, 0x70, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x32, 0x87, 0x06, 0x0a, 0x05,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x12, 0x4d, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x75,
	0x74, 0x12, 0x1f, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x75, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x20, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x75, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x50, 0x75, 0x74, 0x12, 0x1d,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a,
	0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x75, 0x74, 0x12, 0x21, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x75, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x47, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x7a, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x92, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x70, 0x70, 0x12, 0x36, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x71, 0x1a, 0x37, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x0e,
	0x46, 0x63, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x2e, 0x46, 0x63, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x46, 0x63, 0x6d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a,
	0x0b, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x42, 0x61, 0x64, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x44, 0x4b, 0x2f, 0x4f, 0x70,
	0x65, 0x6e, 0x2d, 0x49, 0x4d, 0x2d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_third_third_proto_rawDescOnce sync.Once
	file_third_third_proto_rawDescData = file_third_third_proto_rawDesc
)

func file_third_third_proto_rawDescGZIP() []byte {
	file_third_third_proto_rawDescOnce.Do(func() {
		file_third_third_proto_rawDescData = protoimpl.X.CompressGZIP(file_third_third_proto_rawDescData)
	})
	return file_third_third_proto_rawDescData
}

var file_third_third_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_third_third_proto_goTypes = []interface{}{
	(*ApplyPutReq)(nil),                         // 0: OpenIMServer.third.ApplyPutReq
	(*ApplyPutResp)(nil),                        // 1: OpenIMServer.third.ApplyPutResp
	(*ConfirmPutReq)(nil),                       // 2: OpenIMServer.third.ConfirmPutReq
	(*ConfirmPutResp)(nil),                      // 3: OpenIMServer.third.ConfirmPutResp
	(*GetUrlReq)(nil),                           // 4: OpenIMServer.third.GetUrlReq
	(*GetUrlResp)(nil),                          // 5: OpenIMServer.third.GetUrlResp
	(*GetPutReq)(nil),                           // 6: OpenIMServer.third.GetPutReq
	(*GetPutFragment)(nil),                      // 7: OpenIMServer.third.GetPutFragment
	(*GetPutResp)(nil),                          // 8: OpenIMServer.third.GetPutResp
	(*GetSignalInvitationInfoReq)(nil),          // 9: OpenIMServer.third.GetSignalInvitationInfoReq
	(*GetSignalInvitationInfoResp)(nil),         // 10: OpenIMServer.third.GetSignalInvitationInfoResp
	(*GetSignalInvitationInfoStartAppReq)(nil),  // 11: OpenIMServer.third.GetSignalInvitationInfoStartAppReq
	(*GetSignalInvitationInfoStartAppResp)(nil), // 12: OpenIMServer.third.GetSignalInvitationInfoStartAppResp
	(*FcmUpdateTokenReq)(nil),                   // 13: OpenIMServer.third.FcmUpdateTokenReq
	(*FcmUpdateTokenResp)(nil),                  // 14: OpenIMServer.third.FcmUpdateTokenResp
	(*SetAppBadgeReq)(nil),                      // 15: OpenIMServer.third.SetAppBadgeReq
	(*SetAppBadgeResp)(nil),                     // 16: OpenIMServer.third.SetAppBadgeResp
	(*sdkws.InvitationInfo)(nil),                // 17: OpenIMServer.sdkws.InvitationInfo
	(*sdkws.OfflinePushInfo)(nil),               // 18: OpenIMServer.sdkws.OfflinePushInfo
}
var file_third_third_proto_depIdxs = []int32{
	7,  // 0: OpenIMServer.third.GetPutResp.fragments:type_name -> OpenIMServer.third.GetPutFragment
	17, // 1: OpenIMServer.third.GetSignalInvitationInfoResp.invitationInfo:type_name -> OpenIMServer.sdkws.InvitationInfo
	18, // 2: OpenIMServer.third.GetSignalInvitationInfoResp.offlinePushInfo:type_name -> OpenIMServer.sdkws.OfflinePushInfo
	17, // 3: OpenIMServer.third.GetSignalInvitationInfoStartAppResp.invitationInfo:type_name -> OpenIMServer.sdkws.InvitationInfo
	18, // 4: OpenIMServer.third.GetSignalInvitationInfoStartAppResp.offlinePushInfo:type_name -> OpenIMServer.sdkws.OfflinePushInfo
	0,  // 5: OpenIMServer.third.third.ApplyPut:input_type -> OpenIMServer.third.ApplyPutReq
	6,  // 6: OpenIMServer.third.third.GetPut:input_type -> OpenIMServer.third.GetPutReq
	2,  // 7: OpenIMServer.third.third.ConfirmPut:input_type -> OpenIMServer.third.ConfirmPutReq
	4,  // 8: OpenIMServer.third.third.GetUrl:input_type -> OpenIMServer.third.GetUrlReq
	9,  // 9: OpenIMServer.third.third.GetSignalInvitationInfo:input_type -> OpenIMServer.third.GetSignalInvitationInfoReq
	11, // 10: OpenIMServer.third.third.GetSignalInvitationInfoStartApp:input_type -> OpenIMServer.third.GetSignalInvitationInfoStartAppReq
	13, // 11: OpenIMServer.third.third.FcmUpdateToken:input_type -> OpenIMServer.third.FcmUpdateTokenReq
	15, // 12: OpenIMServer.third.third.SetAppBadge:input_type -> OpenIMServer.third.SetAppBadgeReq
	1,  // 13: OpenIMServer.third.third.ApplyPut:output_type -> OpenIMServer.third.ApplyPutResp
	8,  // 14: OpenIMServer.third.third.GetPut:output_type -> OpenIMServer.third.GetPutResp
	3,  // 15: OpenIMServer.third.third.ConfirmPut:output_type -> OpenIMServer.third.ConfirmPutResp
	5,  // 16: OpenIMServer.third.third.GetUrl:output_type -> OpenIMServer.third.GetUrlResp
	10, // 17: OpenIMServer.third.third.GetSignalInvitationInfo:output_type -> OpenIMServer.third.GetSignalInvitationInfoResp
	12, // 18: OpenIMServer.third.third.GetSignalInvitationInfoStartApp:output_type -> OpenIMServer.third.GetSignalInvitationInfoStartAppResp
	14, // 19: OpenIMServer.third.third.FcmUpdateToken:output_type -> OpenIMServer.third.FcmUpdateTokenResp
	16, // 20: OpenIMServer.third.third.SetAppBadge:output_type -> OpenIMServer.third.SetAppBadgeResp
	13, // [13:21] is the sub-list for method output_type
	5,  // [5:13] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_third_third_proto_init() }
func file_third_third_proto_init() {
	if File_third_third_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_third_third_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyPutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_third_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyPutResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_third_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmPutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_third_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmPutResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_third_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUrlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_third_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUrlResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_third_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_third_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPutFragment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_third_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPutResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_third_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSignalInvitationInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_third_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSignalInvitationInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_third_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSignalInvitationInfoStartAppReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_third_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSignalInvitationInfoStartAppResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_third_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FcmUpdateTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_third_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FcmUpdateTokenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_third_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAppBadgeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_third_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAppBadgeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_third_third_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_third_third_proto_goTypes,
		DependencyIndexes: file_third_third_proto_depIdxs,
		MessageInfos:      file_third_third_proto_msgTypes,
	}.Build()
	File_third_third_proto = out.File
	file_third_third_proto_rawDesc = nil
	file_third_third_proto_goTypes = nil
	file_third_third_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ThirdClient is the client API for Third service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ThirdClient interface {
	ApplyPut(ctx context.Context, in *ApplyPutReq, opts ...grpc.CallOption) (*ApplyPutResp, error)
	GetPut(ctx context.Context, in *GetPutReq, opts ...grpc.CallOption) (*GetPutResp, error)
	ConfirmPut(ctx context.Context, in *ConfirmPutReq, opts ...grpc.CallOption) (*ConfirmPutResp, error)
	GetUrl(ctx context.Context, in *GetUrlReq, opts ...grpc.CallOption) (*GetUrlResp, error)
	GetSignalInvitationInfo(ctx context.Context, in *GetSignalInvitationInfoReq, opts ...grpc.CallOption) (*GetSignalInvitationInfoResp, error)
	GetSignalInvitationInfoStartApp(ctx context.Context, in *GetSignalInvitationInfoStartAppReq, opts ...grpc.CallOption) (*GetSignalInvitationInfoStartAppResp, error)
	FcmUpdateToken(ctx context.Context, in *FcmUpdateTokenReq, opts ...grpc.CallOption) (*FcmUpdateTokenResp, error)
	SetAppBadge(ctx context.Context, in *SetAppBadgeReq, opts ...grpc.CallOption) (*SetAppBadgeResp, error)
}

type thirdClient struct {
	cc grpc.ClientConnInterface
}

func NewThirdClient(cc grpc.ClientConnInterface) ThirdClient {
	return &thirdClient{cc}
}

func (c *thirdClient) ApplyPut(ctx context.Context, in *ApplyPutReq, opts ...grpc.CallOption) (*ApplyPutResp, error) {
	out := new(ApplyPutResp)
	err := c.cc.Invoke(ctx, "/OpenIMServer.third.third/ApplyPut", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdClient) GetPut(ctx context.Context, in *GetPutReq, opts ...grpc.CallOption) (*GetPutResp, error) {
	out := new(GetPutResp)
	err := c.cc.Invoke(ctx, "/OpenIMServer.third.third/GetPut", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdClient) ConfirmPut(ctx context.Context, in *ConfirmPutReq, opts ...grpc.CallOption) (*ConfirmPutResp, error) {
	out := new(ConfirmPutResp)
	err := c.cc.Invoke(ctx, "/OpenIMServer.third.third/ConfirmPut", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdClient) GetUrl(ctx context.Context, in *GetUrlReq, opts ...grpc.CallOption) (*GetUrlResp, error) {
	out := new(GetUrlResp)
	err := c.cc.Invoke(ctx, "/OpenIMServer.third.third/GetUrl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdClient) GetSignalInvitationInfo(ctx context.Context, in *GetSignalInvitationInfoReq, opts ...grpc.CallOption) (*GetSignalInvitationInfoResp, error) {
	out := new(GetSignalInvitationInfoResp)
	err := c.cc.Invoke(ctx, "/OpenIMServer.third.third/GetSignalInvitationInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdClient) GetSignalInvitationInfoStartApp(ctx context.Context, in *GetSignalInvitationInfoStartAppReq, opts ...grpc.CallOption) (*GetSignalInvitationInfoStartAppResp, error) {
	out := new(GetSignalInvitationInfoStartAppResp)
	err := c.cc.Invoke(ctx, "/OpenIMServer.third.third/GetSignalInvitationInfoStartApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdClient) FcmUpdateToken(ctx context.Context, in *FcmUpdateTokenReq, opts ...grpc.CallOption) (*FcmUpdateTokenResp, error) {
	out := new(FcmUpdateTokenResp)
	err := c.cc.Invoke(ctx, "/OpenIMServer.third.third/FcmUpdateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thirdClient) SetAppBadge(ctx context.Context, in *SetAppBadgeReq, opts ...grpc.CallOption) (*SetAppBadgeResp, error) {
	out := new(SetAppBadgeResp)
	err := c.cc.Invoke(ctx, "/OpenIMServer.third.third/SetAppBadge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ThirdServer is the server API for Third service.
type ThirdServer interface {
	ApplyPut(context.Context, *ApplyPutReq) (*ApplyPutResp, error)
	GetPut(context.Context, *GetPutReq) (*GetPutResp, error)
	ConfirmPut(context.Context, *ConfirmPutReq) (*ConfirmPutResp, error)
	GetUrl(context.Context, *GetUrlReq) (*GetUrlResp, error)
	GetSignalInvitationInfo(context.Context, *GetSignalInvitationInfoReq) (*GetSignalInvitationInfoResp, error)
	GetSignalInvitationInfoStartApp(context.Context, *GetSignalInvitationInfoStartAppReq) (*GetSignalInvitationInfoStartAppResp, error)
	FcmUpdateToken(context.Context, *FcmUpdateTokenReq) (*FcmUpdateTokenResp, error)
	SetAppBadge(context.Context, *SetAppBadgeReq) (*SetAppBadgeResp, error)
}

// UnimplementedThirdServer can be embedded to have forward compatible implementations.
type UnimplementedThirdServer struct {
}

func (*UnimplementedThirdServer) ApplyPut(context.Context, *ApplyPutReq) (*ApplyPutResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyPut not implemented")
}
func (*UnimplementedThirdServer) GetPut(context.Context, *GetPutReq) (*GetPutResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPut not implemented")
}
func (*UnimplementedThirdServer) ConfirmPut(context.Context, *ConfirmPutReq) (*ConfirmPutResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmPut not implemented")
}
func (*UnimplementedThirdServer) GetUrl(context.Context, *GetUrlReq) (*GetUrlResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUrl not implemented")
}
func (*UnimplementedThirdServer) GetSignalInvitationInfo(context.Context, *GetSignalInvitationInfoReq) (*GetSignalInvitationInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSignalInvitationInfo not implemented")
}
func (*UnimplementedThirdServer) GetSignalInvitationInfoStartApp(context.Context, *GetSignalInvitationInfoStartAppReq) (*GetSignalInvitationInfoStartAppResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSignalInvitationInfoStartApp not implemented")
}
func (*UnimplementedThirdServer) FcmUpdateToken(context.Context, *FcmUpdateTokenReq) (*FcmUpdateTokenResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FcmUpdateToken not implemented")
}
func (*UnimplementedThirdServer) SetAppBadge(context.Context, *SetAppBadgeReq) (*SetAppBadgeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAppBadge not implemented")
}

func RegisterThirdServer(s *grpc.Server, srv ThirdServer) {
	s.RegisterService(&_Third_serviceDesc, srv)
}

func _Third_ApplyPut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyPutReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdServer).ApplyPut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.third.third/ApplyPut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdServer).ApplyPut(ctx, req.(*ApplyPutReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Third_GetPut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPutReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdServer).GetPut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.third.third/GetPut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdServer).GetPut(ctx, req.(*GetPutReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Third_ConfirmPut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmPutReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdServer).ConfirmPut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.third.third/ConfirmPut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdServer).ConfirmPut(ctx, req.(*ConfirmPutReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Third_GetUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUrlReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdServer).GetUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.third.third/GetUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdServer).GetUrl(ctx, req.(*GetUrlReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Third_GetSignalInvitationInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSignalInvitationInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdServer).GetSignalInvitationInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.third.third/GetSignalInvitationInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdServer).GetSignalInvitationInfo(ctx, req.(*GetSignalInvitationInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Third_GetSignalInvitationInfoStartApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSignalInvitationInfoStartAppReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdServer).GetSignalInvitationInfoStartApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.third.third/GetSignalInvitationInfoStartApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdServer).GetSignalInvitationInfoStartApp(ctx, req.(*GetSignalInvitationInfoStartAppReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Third_FcmUpdateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FcmUpdateTokenReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdServer).FcmUpdateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.third.third/FcmUpdateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdServer).FcmUpdateToken(ctx, req.(*FcmUpdateTokenReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Third_SetAppBadge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAppBadgeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThirdServer).SetAppBadge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.third.third/SetAppBadge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThirdServer).SetAppBadge(ctx, req.(*SetAppBadgeReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Third_serviceDesc = grpc.ServiceDesc{
	ServiceName: "OpenIMServer.third.third",
	HandlerType: (*ThirdServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ApplyPut",
			Handler:    _Third_ApplyPut_Handler,
		},
		{
			MethodName: "GetPut",
			Handler:    _Third_GetPut_Handler,
		},
		{
			MethodName: "ConfirmPut",
			Handler:    _Third_ConfirmPut_Handler,
		},
		{
			MethodName: "GetUrl",
			Handler:    _Third_GetUrl_Handler,
		},
		{
			MethodName: "GetSignalInvitationInfo",
			Handler:    _Third_GetSignalInvitationInfo_Handler,
		},
		{
			MethodName: "GetSignalInvitationInfoStartApp",
			Handler:    _Third_GetSignalInvitationInfoStartApp_Handler,
		},
		{
			MethodName: "FcmUpdateToken",
			Handler:    _Third_FcmUpdateToken_Handler,
		},
		{
			MethodName: "SetAppBadge",
			Handler:    _Third_SetAppBadge_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "third/third.proto",
}
