// Code generated by protoc-gen-go. DO NOT EDIT.
// source: conversation/conversation.proto

package conversation // import "OpenIM/pkg/proto/conversation"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Conversation struct {
	OwnerUserID           string   `protobuf:"bytes,1,opt,name=ownerUserID" json:"ownerUserID,omitempty"`
	ConversationID        string   `protobuf:"bytes,2,opt,name=conversationID" json:"conversationID,omitempty"`
	RecvMsgOpt            int32    `protobuf:"varint,3,opt,name=recvMsgOpt" json:"recvMsgOpt,omitempty"`
	ConversationType      int32    `protobuf:"varint,4,opt,name=conversationType" json:"conversationType,omitempty"`
	UserID                string   `protobuf:"bytes,5,opt,name=userID" json:"userID,omitempty"`
	GroupID               string   `protobuf:"bytes,6,opt,name=groupID" json:"groupID,omitempty"`
	UnreadCount           int32    `protobuf:"varint,7,opt,name=unreadCount" json:"unreadCount,omitempty"`
	DraftTextTime         int64    `protobuf:"varint,8,opt,name=draftTextTime" json:"draftTextTime,omitempty"`
	IsPinned              bool     `protobuf:"varint,9,opt,name=isPinned" json:"isPinned,omitempty"`
	AttachedInfo          string   `protobuf:"bytes,10,opt,name=attachedInfo" json:"attachedInfo,omitempty"`
	IsPrivateChat         bool     `protobuf:"varint,11,opt,name=isPrivateChat" json:"isPrivateChat,omitempty"`
	GroupAtType           int32    `protobuf:"varint,12,opt,name=groupAtType" json:"groupAtType,omitempty"`
	IsNotInGroup          bool     `protobuf:"varint,13,opt,name=isNotInGroup" json:"isNotInGroup,omitempty"`
	Ex                    string   `protobuf:"bytes,14,opt,name=ex" json:"ex,omitempty"`
	UpdateUnreadCountTime int64    `protobuf:"varint,15,opt,name=updateUnreadCountTime" json:"updateUnreadCountTime,omitempty"`
	BurnDuration          int32    `protobuf:"varint,16,opt,name=burnDuration" json:"burnDuration,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *Conversation) Reset()         { *m = Conversation{} }
func (m *Conversation) String() string { return proto.CompactTextString(m) }
func (*Conversation) ProtoMessage()    {}
func (*Conversation) Descriptor() ([]byte, []int) {
	return fileDescriptor_conversation_46a825ce5b85f7cf, []int{0}
}
func (m *Conversation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Conversation.Unmarshal(m, b)
}
func (m *Conversation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Conversation.Marshal(b, m, deterministic)
}
func (dst *Conversation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Conversation.Merge(dst, src)
}
func (m *Conversation) XXX_Size() int {
	return xxx_messageInfo_Conversation.Size(m)
}
func (m *Conversation) XXX_DiscardUnknown() {
	xxx_messageInfo_Conversation.DiscardUnknown(m)
}

var xxx_messageInfo_Conversation proto.InternalMessageInfo

func (m *Conversation) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *Conversation) GetConversationID() string {
	if m != nil {
		return m.ConversationID
	}
	return ""
}

func (m *Conversation) GetRecvMsgOpt() int32 {
	if m != nil {
		return m.RecvMsgOpt
	}
	return 0
}

func (m *Conversation) GetConversationType() int32 {
	if m != nil {
		return m.ConversationType
	}
	return 0
}

func (m *Conversation) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Conversation) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *Conversation) GetUnreadCount() int32 {
	if m != nil {
		return m.UnreadCount
	}
	return 0
}

func (m *Conversation) GetDraftTextTime() int64 {
	if m != nil {
		return m.DraftTextTime
	}
	return 0
}

func (m *Conversation) GetIsPinned() bool {
	if m != nil {
		return m.IsPinned
	}
	return false
}

func (m *Conversation) GetAttachedInfo() string {
	if m != nil {
		return m.AttachedInfo
	}
	return ""
}

func (m *Conversation) GetIsPrivateChat() bool {
	if m != nil {
		return m.IsPrivateChat
	}
	return false
}

func (m *Conversation) GetGroupAtType() int32 {
	if m != nil {
		return m.GroupAtType
	}
	return 0
}

func (m *Conversation) GetIsNotInGroup() bool {
	if m != nil {
		return m.IsNotInGroup
	}
	return false
}

func (m *Conversation) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

func (m *Conversation) GetUpdateUnreadCountTime() int64 {
	if m != nil {
		return m.UpdateUnreadCountTime
	}
	return 0
}

func (m *Conversation) GetBurnDuration() int32 {
	if m != nil {
		return m.BurnDuration
	}
	return 0
}

type ModifyConversationFieldReq struct {
	Conversation         *Conversation `protobuf:"bytes,1,opt,name=conversation" json:"conversation,omitempty"`
	FieldType            int32         `protobuf:"varint,2,opt,name=fieldType" json:"fieldType,omitempty"`
	UserIDList           []string      `protobuf:"bytes,3,rep,name=userIDList" json:"userIDList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ModifyConversationFieldReq) Reset()         { *m = ModifyConversationFieldReq{} }
func (m *ModifyConversationFieldReq) String() string { return proto.CompactTextString(m) }
func (*ModifyConversationFieldReq) ProtoMessage()    {}
func (*ModifyConversationFieldReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_conversation_46a825ce5b85f7cf, []int{1}
}
func (m *ModifyConversationFieldReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModifyConversationFieldReq.Unmarshal(m, b)
}
func (m *ModifyConversationFieldReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModifyConversationFieldReq.Marshal(b, m, deterministic)
}
func (dst *ModifyConversationFieldReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModifyConversationFieldReq.Merge(dst, src)
}
func (m *ModifyConversationFieldReq) XXX_Size() int {
	return xxx_messageInfo_ModifyConversationFieldReq.Size(m)
}
func (m *ModifyConversationFieldReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ModifyConversationFieldReq.DiscardUnknown(m)
}

var xxx_messageInfo_ModifyConversationFieldReq proto.InternalMessageInfo

func (m *ModifyConversationFieldReq) GetConversation() *Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

func (m *ModifyConversationFieldReq) GetFieldType() int32 {
	if m != nil {
		return m.FieldType
	}
	return 0
}

func (m *ModifyConversationFieldReq) GetUserIDList() []string {
	if m != nil {
		return m.UserIDList
	}
	return nil
}

type ModifyConversationFieldResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModifyConversationFieldResp) Reset()         { *m = ModifyConversationFieldResp{} }
func (m *ModifyConversationFieldResp) String() string { return proto.CompactTextString(m) }
func (*ModifyConversationFieldResp) ProtoMessage()    {}
func (*ModifyConversationFieldResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_conversation_46a825ce5b85f7cf, []int{2}
}
func (m *ModifyConversationFieldResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModifyConversationFieldResp.Unmarshal(m, b)
}
func (m *ModifyConversationFieldResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModifyConversationFieldResp.Marshal(b, m, deterministic)
}
func (dst *ModifyConversationFieldResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModifyConversationFieldResp.Merge(dst, src)
}
func (m *ModifyConversationFieldResp) XXX_Size() int {
	return xxx_messageInfo_ModifyConversationFieldResp.Size(m)
}
func (m *ModifyConversationFieldResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ModifyConversationFieldResp.DiscardUnknown(m)
}

var xxx_messageInfo_ModifyConversationFieldResp proto.InternalMessageInfo

type SetConversationReq struct {
	Conversation         *Conversation `protobuf:"bytes,1,opt,name=Conversation" json:"Conversation,omitempty"`
	NotificationType     int32         `protobuf:"varint,2,opt,name=notificationType" json:"notificationType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SetConversationReq) Reset()         { *m = SetConversationReq{} }
func (m *SetConversationReq) String() string { return proto.CompactTextString(m) }
func (*SetConversationReq) ProtoMessage()    {}
func (*SetConversationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_conversation_46a825ce5b85f7cf, []int{3}
}
func (m *SetConversationReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConversationReq.Unmarshal(m, b)
}
func (m *SetConversationReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConversationReq.Marshal(b, m, deterministic)
}
func (dst *SetConversationReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConversationReq.Merge(dst, src)
}
func (m *SetConversationReq) XXX_Size() int {
	return xxx_messageInfo_SetConversationReq.Size(m)
}
func (m *SetConversationReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConversationReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetConversationReq proto.InternalMessageInfo

func (m *SetConversationReq) GetConversation() *Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

func (m *SetConversationReq) GetNotificationType() int32 {
	if m != nil {
		return m.NotificationType
	}
	return 0
}

type SetConversationResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetConversationResp) Reset()         { *m = SetConversationResp{} }
func (m *SetConversationResp) String() string { return proto.CompactTextString(m) }
func (*SetConversationResp) ProtoMessage()    {}
func (*SetConversationResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_conversation_46a825ce5b85f7cf, []int{4}
}
func (m *SetConversationResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConversationResp.Unmarshal(m, b)
}
func (m *SetConversationResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConversationResp.Marshal(b, m, deterministic)
}
func (dst *SetConversationResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConversationResp.Merge(dst, src)
}
func (m *SetConversationResp) XXX_Size() int {
	return xxx_messageInfo_SetConversationResp.Size(m)
}
func (m *SetConversationResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConversationResp.DiscardUnknown(m)
}

var xxx_messageInfo_SetConversationResp proto.InternalMessageInfo

type SetRecvMsgOptReq struct {
	OwnerUserID          string   `protobuf:"bytes,1,opt,name=OwnerUserID" json:"OwnerUserID,omitempty"`
	ConversationID       string   `protobuf:"bytes,2,opt,name=ConversationID" json:"ConversationID,omitempty"`
	RecvMsgOpt           int32    `protobuf:"varint,3,opt,name=RecvMsgOpt" json:"RecvMsgOpt,omitempty"`
	NotificationType     int32    `protobuf:"varint,4,opt,name=notificationType" json:"notificationType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetRecvMsgOptReq) Reset()         { *m = SetRecvMsgOptReq{} }
func (m *SetRecvMsgOptReq) String() string { return proto.CompactTextString(m) }
func (*SetRecvMsgOptReq) ProtoMessage()    {}
func (*SetRecvMsgOptReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_conversation_46a825ce5b85f7cf, []int{5}
}
func (m *SetRecvMsgOptReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRecvMsgOptReq.Unmarshal(m, b)
}
func (m *SetRecvMsgOptReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRecvMsgOptReq.Marshal(b, m, deterministic)
}
func (dst *SetRecvMsgOptReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRecvMsgOptReq.Merge(dst, src)
}
func (m *SetRecvMsgOptReq) XXX_Size() int {
	return xxx_messageInfo_SetRecvMsgOptReq.Size(m)
}
func (m *SetRecvMsgOptReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRecvMsgOptReq.DiscardUnknown(m)
}

var xxx_messageInfo_SetRecvMsgOptReq proto.InternalMessageInfo

func (m *SetRecvMsgOptReq) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *SetRecvMsgOptReq) GetConversationID() string {
	if m != nil {
		return m.ConversationID
	}
	return ""
}

func (m *SetRecvMsgOptReq) GetRecvMsgOpt() int32 {
	if m != nil {
		return m.RecvMsgOpt
	}
	return 0
}

func (m *SetRecvMsgOptReq) GetNotificationType() int32 {
	if m != nil {
		return m.NotificationType
	}
	return 0
}

type SetRecvMsgOptResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetRecvMsgOptResp) Reset()         { *m = SetRecvMsgOptResp{} }
func (m *SetRecvMsgOptResp) String() string { return proto.CompactTextString(m) }
func (*SetRecvMsgOptResp) ProtoMessage()    {}
func (*SetRecvMsgOptResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_conversation_46a825ce5b85f7cf, []int{6}
}
func (m *SetRecvMsgOptResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRecvMsgOptResp.Unmarshal(m, b)
}
func (m *SetRecvMsgOptResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRecvMsgOptResp.Marshal(b, m, deterministic)
}
func (dst *SetRecvMsgOptResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRecvMsgOptResp.Merge(dst, src)
}
func (m *SetRecvMsgOptResp) XXX_Size() int {
	return xxx_messageInfo_SetRecvMsgOptResp.Size(m)
}
func (m *SetRecvMsgOptResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRecvMsgOptResp.DiscardUnknown(m)
}

var xxx_messageInfo_SetRecvMsgOptResp proto.InternalMessageInfo

type GetConversationReq struct {
	ConversationID       string   `protobuf:"bytes,1,opt,name=ConversationID" json:"ConversationID,omitempty"`
	OwnerUserID          string   `protobuf:"bytes,2,opt,name=OwnerUserID" json:"OwnerUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConversationReq) Reset()         { *m = GetConversationReq{} }
func (m *GetConversationReq) String() string { return proto.CompactTextString(m) }
func (*GetConversationReq) ProtoMessage()    {}
func (*GetConversationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_conversation_46a825ce5b85f7cf, []int{7}
}
func (m *GetConversationReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConversationReq.Unmarshal(m, b)
}
func (m *GetConversationReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConversationReq.Marshal(b, m, deterministic)
}
func (dst *GetConversationReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConversationReq.Merge(dst, src)
}
func (m *GetConversationReq) XXX_Size() int {
	return xxx_messageInfo_GetConversationReq.Size(m)
}
func (m *GetConversationReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConversationReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetConversationReq proto.InternalMessageInfo

func (m *GetConversationReq) GetConversationID() string {
	if m != nil {
		return m.ConversationID
	}
	return ""
}

func (m *GetConversationReq) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

type GetConversationResp struct {
	Conversation         *Conversation `protobuf:"bytes,2,opt,name=Conversation" json:"Conversation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetConversationResp) Reset()         { *m = GetConversationResp{} }
func (m *GetConversationResp) String() string { return proto.CompactTextString(m) }
func (*GetConversationResp) ProtoMessage()    {}
func (*GetConversationResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_conversation_46a825ce5b85f7cf, []int{8}
}
func (m *GetConversationResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConversationResp.Unmarshal(m, b)
}
func (m *GetConversationResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConversationResp.Marshal(b, m, deterministic)
}
func (dst *GetConversationResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConversationResp.Merge(dst, src)
}
func (m *GetConversationResp) XXX_Size() int {
	return xxx_messageInfo_GetConversationResp.Size(m)
}
func (m *GetConversationResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConversationResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetConversationResp proto.InternalMessageInfo

func (m *GetConversationResp) GetConversation() *Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

type GetConversationsReq struct {
	OwnerUserID          string   `protobuf:"bytes,1,opt,name=OwnerUserID" json:"OwnerUserID,omitempty"`
	ConversationIDs      []string `protobuf:"bytes,2,rep,name=ConversationIDs" json:"ConversationIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConversationsReq) Reset()         { *m = GetConversationsReq{} }
func (m *GetConversationsReq) String() string { return proto.CompactTextString(m) }
func (*GetConversationsReq) ProtoMessage()    {}
func (*GetConversationsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_conversation_46a825ce5b85f7cf, []int{9}
}
func (m *GetConversationsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConversationsReq.Unmarshal(m, b)
}
func (m *GetConversationsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConversationsReq.Marshal(b, m, deterministic)
}
func (dst *GetConversationsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConversationsReq.Merge(dst, src)
}
func (m *GetConversationsReq) XXX_Size() int {
	return xxx_messageInfo_GetConversationsReq.Size(m)
}
func (m *GetConversationsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConversationsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetConversationsReq proto.InternalMessageInfo

func (m *GetConversationsReq) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *GetConversationsReq) GetConversationIDs() []string {
	if m != nil {
		return m.ConversationIDs
	}
	return nil
}

type GetConversationsResp struct {
	Conversations        []*Conversation `protobuf:"bytes,2,rep,name=Conversations" json:"Conversations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetConversationsResp) Reset()         { *m = GetConversationsResp{} }
func (m *GetConversationsResp) String() string { return proto.CompactTextString(m) }
func (*GetConversationsResp) ProtoMessage()    {}
func (*GetConversationsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_conversation_46a825ce5b85f7cf, []int{10}
}
func (m *GetConversationsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConversationsResp.Unmarshal(m, b)
}
func (m *GetConversationsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConversationsResp.Marshal(b, m, deterministic)
}
func (dst *GetConversationsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConversationsResp.Merge(dst, src)
}
func (m *GetConversationsResp) XXX_Size() int {
	return xxx_messageInfo_GetConversationsResp.Size(m)
}
func (m *GetConversationsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConversationsResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetConversationsResp proto.InternalMessageInfo

func (m *GetConversationsResp) GetConversations() []*Conversation {
	if m != nil {
		return m.Conversations
	}
	return nil
}

type GetAllConversationsReq struct {
	OwnerUserID          string   `protobuf:"bytes,1,opt,name=OwnerUserID" json:"OwnerUserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllConversationsReq) Reset()         { *m = GetAllConversationsReq{} }
func (m *GetAllConversationsReq) String() string { return proto.CompactTextString(m) }
func (*GetAllConversationsReq) ProtoMessage()    {}
func (*GetAllConversationsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_conversation_46a825ce5b85f7cf, []int{11}
}
func (m *GetAllConversationsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllConversationsReq.Unmarshal(m, b)
}
func (m *GetAllConversationsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllConversationsReq.Marshal(b, m, deterministic)
}
func (dst *GetAllConversationsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllConversationsReq.Merge(dst, src)
}
func (m *GetAllConversationsReq) XXX_Size() int {
	return xxx_messageInfo_GetAllConversationsReq.Size(m)
}
func (m *GetAllConversationsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllConversationsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllConversationsReq proto.InternalMessageInfo

func (m *GetAllConversationsReq) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

type GetAllConversationsResp struct {
	Conversations        []*Conversation `protobuf:"bytes,2,rep,name=Conversations" json:"Conversations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetAllConversationsResp) Reset()         { *m = GetAllConversationsResp{} }
func (m *GetAllConversationsResp) String() string { return proto.CompactTextString(m) }
func (*GetAllConversationsResp) ProtoMessage()    {}
func (*GetAllConversationsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_conversation_46a825ce5b85f7cf, []int{12}
}
func (m *GetAllConversationsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllConversationsResp.Unmarshal(m, b)
}
func (m *GetAllConversationsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllConversationsResp.Marshal(b, m, deterministic)
}
func (dst *GetAllConversationsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllConversationsResp.Merge(dst, src)
}
func (m *GetAllConversationsResp) XXX_Size() int {
	return xxx_messageInfo_GetAllConversationsResp.Size(m)
}
func (m *GetAllConversationsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllConversationsResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllConversationsResp proto.InternalMessageInfo

func (m *GetAllConversationsResp) GetConversations() []*Conversation {
	if m != nil {
		return m.Conversations
	}
	return nil
}

type BatchSetConversationsReq struct {
	Conversations        []*Conversation `protobuf:"bytes,1,rep,name=Conversations" json:"Conversations,omitempty"`
	OwnerUserID          string          `protobuf:"bytes,2,opt,name=OwnerUserID" json:"OwnerUserID,omitempty"`
	NotificationType     int32           `protobuf:"varint,3,opt,name=notificationType" json:"notificationType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BatchSetConversationsReq) Reset()         { *m = BatchSetConversationsReq{} }
func (m *BatchSetConversationsReq) String() string { return proto.CompactTextString(m) }
func (*BatchSetConversationsReq) ProtoMessage()    {}
func (*BatchSetConversationsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_conversation_46a825ce5b85f7cf, []int{13}
}
func (m *BatchSetConversationsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchSetConversationsReq.Unmarshal(m, b)
}
func (m *BatchSetConversationsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchSetConversationsReq.Marshal(b, m, deterministic)
}
func (dst *BatchSetConversationsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchSetConversationsReq.Merge(dst, src)
}
func (m *BatchSetConversationsReq) XXX_Size() int {
	return xxx_messageInfo_BatchSetConversationsReq.Size(m)
}
func (m *BatchSetConversationsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchSetConversationsReq.DiscardUnknown(m)
}

var xxx_messageInfo_BatchSetConversationsReq proto.InternalMessageInfo

func (m *BatchSetConversationsReq) GetConversations() []*Conversation {
	if m != nil {
		return m.Conversations
	}
	return nil
}

func (m *BatchSetConversationsReq) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *BatchSetConversationsReq) GetNotificationType() int32 {
	if m != nil {
		return m.NotificationType
	}
	return 0
}

type BatchSetConversationsResp struct {
	Success              []string `protobuf:"bytes,1,rep,name=Success" json:"Success,omitempty"`
	Failed               []string `protobuf:"bytes,2,rep,name=Failed" json:"Failed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchSetConversationsResp) Reset()         { *m = BatchSetConversationsResp{} }
func (m *BatchSetConversationsResp) String() string { return proto.CompactTextString(m) }
func (*BatchSetConversationsResp) ProtoMessage()    {}
func (*BatchSetConversationsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_conversation_46a825ce5b85f7cf, []int{14}
}
func (m *BatchSetConversationsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchSetConversationsResp.Unmarshal(m, b)
}
func (m *BatchSetConversationsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchSetConversationsResp.Marshal(b, m, deterministic)
}
func (dst *BatchSetConversationsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchSetConversationsResp.Merge(dst, src)
}
func (m *BatchSetConversationsResp) XXX_Size() int {
	return xxx_messageInfo_BatchSetConversationsResp.Size(m)
}
func (m *BatchSetConversationsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchSetConversationsResp.DiscardUnknown(m)
}

var xxx_messageInfo_BatchSetConversationsResp proto.InternalMessageInfo

func (m *BatchSetConversationsResp) GetSuccess() []string {
	if m != nil {
		return m.Success
	}
	return nil
}

func (m *BatchSetConversationsResp) GetFailed() []string {
	if m != nil {
		return m.Failed
	}
	return nil
}

type GetRecvMsgNotNotifyUserIDsReq struct {
	GroupID              string   `protobuf:"bytes,1,opt,name=groupID" json:"groupID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecvMsgNotNotifyUserIDsReq) Reset()         { *m = GetRecvMsgNotNotifyUserIDsReq{} }
func (m *GetRecvMsgNotNotifyUserIDsReq) String() string { return proto.CompactTextString(m) }
func (*GetRecvMsgNotNotifyUserIDsReq) ProtoMessage()    {}
func (*GetRecvMsgNotNotifyUserIDsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_conversation_46a825ce5b85f7cf, []int{15}
}
func (m *GetRecvMsgNotNotifyUserIDsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecvMsgNotNotifyUserIDsReq.Unmarshal(m, b)
}
func (m *GetRecvMsgNotNotifyUserIDsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecvMsgNotNotifyUserIDsReq.Marshal(b, m, deterministic)
}
func (dst *GetRecvMsgNotNotifyUserIDsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecvMsgNotNotifyUserIDsReq.Merge(dst, src)
}
func (m *GetRecvMsgNotNotifyUserIDsReq) XXX_Size() int {
	return xxx_messageInfo_GetRecvMsgNotNotifyUserIDsReq.Size(m)
}
func (m *GetRecvMsgNotNotifyUserIDsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecvMsgNotNotifyUserIDsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecvMsgNotNotifyUserIDsReq proto.InternalMessageInfo

func (m *GetRecvMsgNotNotifyUserIDsReq) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

type GetRecvMsgNotNotifyUserIDsResp struct {
	UserIDs              []string `protobuf:"bytes,1,rep,name=userIDs" json:"userIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecvMsgNotNotifyUserIDsResp) Reset()         { *m = GetRecvMsgNotNotifyUserIDsResp{} }
func (m *GetRecvMsgNotNotifyUserIDsResp) String() string { return proto.CompactTextString(m) }
func (*GetRecvMsgNotNotifyUserIDsResp) ProtoMessage()    {}
func (*GetRecvMsgNotNotifyUserIDsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_conversation_46a825ce5b85f7cf, []int{16}
}
func (m *GetRecvMsgNotNotifyUserIDsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecvMsgNotNotifyUserIDsResp.Unmarshal(m, b)
}
func (m *GetRecvMsgNotNotifyUserIDsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecvMsgNotNotifyUserIDsResp.Marshal(b, m, deterministic)
}
func (dst *GetRecvMsgNotNotifyUserIDsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecvMsgNotNotifyUserIDsResp.Merge(dst, src)
}
func (m *GetRecvMsgNotNotifyUserIDsResp) XXX_Size() int {
	return xxx_messageInfo_GetRecvMsgNotNotifyUserIDsResp.Size(m)
}
func (m *GetRecvMsgNotNotifyUserIDsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecvMsgNotNotifyUserIDsResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecvMsgNotNotifyUserIDsResp proto.InternalMessageInfo

func (m *GetRecvMsgNotNotifyUserIDsResp) GetUserIDs() []string {
	if m != nil {
		return m.UserIDs
	}
	return nil
}

func init() {
	proto.RegisterType((*Conversation)(nil), "OpenIMServer.conversation.Conversation")
	proto.RegisterType((*ModifyConversationFieldReq)(nil), "OpenIMServer.conversation.ModifyConversationFieldReq")
	proto.RegisterType((*ModifyConversationFieldResp)(nil), "OpenIMServer.conversation.ModifyConversationFieldResp")
	proto.RegisterType((*SetConversationReq)(nil), "OpenIMServer.conversation.SetConversationReq")
	proto.RegisterType((*SetConversationResp)(nil), "OpenIMServer.conversation.SetConversationResp")
	proto.RegisterType((*SetRecvMsgOptReq)(nil), "OpenIMServer.conversation.SetRecvMsgOptReq")
	proto.RegisterType((*SetRecvMsgOptResp)(nil), "OpenIMServer.conversation.SetRecvMsgOptResp")
	proto.RegisterType((*GetConversationReq)(nil), "OpenIMServer.conversation.GetConversationReq")
	proto.RegisterType((*GetConversationResp)(nil), "OpenIMServer.conversation.GetConversationResp")
	proto.RegisterType((*GetConversationsReq)(nil), "OpenIMServer.conversation.GetConversationsReq")
	proto.RegisterType((*GetConversationsResp)(nil), "OpenIMServer.conversation.GetConversationsResp")
	proto.RegisterType((*GetAllConversationsReq)(nil), "OpenIMServer.conversation.GetAllConversationsReq")
	proto.RegisterType((*GetAllConversationsResp)(nil), "OpenIMServer.conversation.GetAllConversationsResp")
	proto.RegisterType((*BatchSetConversationsReq)(nil), "OpenIMServer.conversation.BatchSetConversationsReq")
	proto.RegisterType((*BatchSetConversationsResp)(nil), "OpenIMServer.conversation.BatchSetConversationsResp")
	proto.RegisterType((*GetRecvMsgNotNotifyUserIDsReq)(nil), "OpenIMServer.conversation.GetRecvMsgNotNotifyUserIDsReq")
	proto.RegisterType((*GetRecvMsgNotNotifyUserIDsResp)(nil), "OpenIMServer.conversation.GetRecvMsgNotNotifyUserIDsResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Conversation service

type ConversationClient interface {
	ModifyConversationField(ctx context.Context, in *ModifyConversationFieldReq, opts ...grpc.CallOption) (*ModifyConversationFieldResp, error)
	GetConversation(ctx context.Context, in *GetConversationReq, opts ...grpc.CallOption) (*GetConversationResp, error)
	GetAllConversations(ctx context.Context, in *GetAllConversationsReq, opts ...grpc.CallOption) (*GetAllConversationsResp, error)
	GetConversations(ctx context.Context, in *GetConversationsReq, opts ...grpc.CallOption) (*GetConversationsResp, error)
	BatchSetConversations(ctx context.Context, in *BatchSetConversationsReq, opts ...grpc.CallOption) (*BatchSetConversationsResp, error)
	SetConversation(ctx context.Context, in *SetConversationReq, opts ...grpc.CallOption) (*SetConversationResp, error)
	SetRecvMsgOpt(ctx context.Context, in *SetRecvMsgOptReq, opts ...grpc.CallOption) (*SetRecvMsgOptResp, error)
	GetRecvMsgNotNotifyUserIDs(ctx context.Context, in *GetRecvMsgNotNotifyUserIDsReq, opts ...grpc.CallOption) (*GetRecvMsgNotNotifyUserIDsResp, error)
}

type conversationClient struct {
	cc *grpc.ClientConn
}

func NewConversationClient(cc *grpc.ClientConn) ConversationClient {
	return &conversationClient{cc}
}

func (c *conversationClient) ModifyConversationField(ctx context.Context, in *ModifyConversationFieldReq, opts ...grpc.CallOption) (*ModifyConversationFieldResp, error) {
	out := new(ModifyConversationFieldResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.conversation.conversation/ModifyConversationField", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationClient) GetConversation(ctx context.Context, in *GetConversationReq, opts ...grpc.CallOption) (*GetConversationResp, error) {
	out := new(GetConversationResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.conversation.conversation/GetConversation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationClient) GetAllConversations(ctx context.Context, in *GetAllConversationsReq, opts ...grpc.CallOption) (*GetAllConversationsResp, error) {
	out := new(GetAllConversationsResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.conversation.conversation/GetAllConversations", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationClient) GetConversations(ctx context.Context, in *GetConversationsReq, opts ...grpc.CallOption) (*GetConversationsResp, error) {
	out := new(GetConversationsResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.conversation.conversation/GetConversations", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationClient) BatchSetConversations(ctx context.Context, in *BatchSetConversationsReq, opts ...grpc.CallOption) (*BatchSetConversationsResp, error) {
	out := new(BatchSetConversationsResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.conversation.conversation/BatchSetConversations", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationClient) SetConversation(ctx context.Context, in *SetConversationReq, opts ...grpc.CallOption) (*SetConversationResp, error) {
	out := new(SetConversationResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.conversation.conversation/SetConversation", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationClient) SetRecvMsgOpt(ctx context.Context, in *SetRecvMsgOptReq, opts ...grpc.CallOption) (*SetRecvMsgOptResp, error) {
	out := new(SetRecvMsgOptResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.conversation.conversation/SetRecvMsgOpt", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *conversationClient) GetRecvMsgNotNotifyUserIDs(ctx context.Context, in *GetRecvMsgNotNotifyUserIDsReq, opts ...grpc.CallOption) (*GetRecvMsgNotNotifyUserIDsResp, error) {
	out := new(GetRecvMsgNotNotifyUserIDsResp)
	err := grpc.Invoke(ctx, "/OpenIMServer.conversation.conversation/GetRecvMsgNotNotifyUserIDs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Conversation service

type ConversationServer interface {
	ModifyConversationField(context.Context, *ModifyConversationFieldReq) (*ModifyConversationFieldResp, error)
	GetConversation(context.Context, *GetConversationReq) (*GetConversationResp, error)
	GetAllConversations(context.Context, *GetAllConversationsReq) (*GetAllConversationsResp, error)
	GetConversations(context.Context, *GetConversationsReq) (*GetConversationsResp, error)
	BatchSetConversations(context.Context, *BatchSetConversationsReq) (*BatchSetConversationsResp, error)
	SetConversation(context.Context, *SetConversationReq) (*SetConversationResp, error)
	SetRecvMsgOpt(context.Context, *SetRecvMsgOptReq) (*SetRecvMsgOptResp, error)
	GetRecvMsgNotNotifyUserIDs(context.Context, *GetRecvMsgNotNotifyUserIDsReq) (*GetRecvMsgNotNotifyUserIDsResp, error)
}

func RegisterConversationServer(s *grpc.Server, srv ConversationServer) {
	s.RegisterService(&_Conversation_serviceDesc, srv)
}

func _Conversation_ModifyConversationField_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyConversationFieldReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationServer).ModifyConversationField(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.conversation.conversation/ModifyConversationField",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationServer).ModifyConversationField(ctx, req.(*ModifyConversationFieldReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Conversation_GetConversation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConversationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationServer).GetConversation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.conversation.conversation/GetConversation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationServer).GetConversation(ctx, req.(*GetConversationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Conversation_GetAllConversations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllConversationsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationServer).GetAllConversations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.conversation.conversation/GetAllConversations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationServer).GetAllConversations(ctx, req.(*GetAllConversationsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Conversation_GetConversations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConversationsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationServer).GetConversations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.conversation.conversation/GetConversations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationServer).GetConversations(ctx, req.(*GetConversationsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Conversation_BatchSetConversations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchSetConversationsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationServer).BatchSetConversations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.conversation.conversation/BatchSetConversations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationServer).BatchSetConversations(ctx, req.(*BatchSetConversationsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Conversation_SetConversation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetConversationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationServer).SetConversation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.conversation.conversation/SetConversation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationServer).SetConversation(ctx, req.(*SetConversationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Conversation_SetRecvMsgOpt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRecvMsgOptReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationServer).SetRecvMsgOpt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.conversation.conversation/SetRecvMsgOpt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationServer).SetRecvMsgOpt(ctx, req.(*SetRecvMsgOptReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Conversation_GetRecvMsgNotNotifyUserIDs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecvMsgNotNotifyUserIDsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConversationServer).GetRecvMsgNotNotifyUserIDs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.conversation.conversation/GetRecvMsgNotNotifyUserIDs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConversationServer).GetRecvMsgNotNotifyUserIDs(ctx, req.(*GetRecvMsgNotNotifyUserIDsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Conversation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "OpenIMServer.conversation.conversation",
	HandlerType: (*ConversationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ModifyConversationField",
			Handler:    _Conversation_ModifyConversationField_Handler,
		},
		{
			MethodName: "GetConversation",
			Handler:    _Conversation_GetConversation_Handler,
		},
		{
			MethodName: "GetAllConversations",
			Handler:    _Conversation_GetAllConversations_Handler,
		},
		{
			MethodName: "GetConversations",
			Handler:    _Conversation_GetConversations_Handler,
		},
		{
			MethodName: "BatchSetConversations",
			Handler:    _Conversation_BatchSetConversations_Handler,
		},
		{
			MethodName: "SetConversation",
			Handler:    _Conversation_SetConversation_Handler,
		},
		{
			MethodName: "SetRecvMsgOpt",
			Handler:    _Conversation_SetRecvMsgOpt_Handler,
		},
		{
			MethodName: "GetRecvMsgNotNotifyUserIDs",
			Handler:    _Conversation_GetRecvMsgNotNotifyUserIDs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "conversation/conversation.proto",
}

func init() {
	proto.RegisterFile("conversation/conversation.proto", fileDescriptor_conversation_46a825ce5b85f7cf)
}

var fileDescriptor_conversation_46a825ce5b85f7cf = []byte{
	// 864 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xcf, 0x53, 0xfb, 0x44,
	0x14, 0x9f, 0xb4, 0x7c, 0x81, 0xbe, 0xb6, 0x50, 0x17, 0x81, 0x25, 0x0a, 0x76, 0x32, 0x8e, 0x76,
	0x10, 0xdb, 0x11, 0xd0, 0x11, 0x3c, 0x41, 0x3b, 0x74, 0x3a, 0x5a, 0xca, 0xa4, 0x70, 0xf1, 0xe0,
	0x4c, 0x68, 0xb6, 0x34, 0x5a, 0x93, 0x35, 0xbb, 0xa9, 0x30, 0xe3, 0xc9, 0x93, 0x17, 0x0f, 0xfe,
	0x15, 0xfa, 0x07, 0x38, 0xe3, 0x5f, 0xe6, 0xdd, 0xc9, 0xa6, 0x94, 0x6c, 0x37, 0xa9, 0x04, 0xbe,
	0xc7, 0xfd, 0x64, 0xdf, 0x7b, 0x9f, 0xf7, 0xe3, 0xb3, 0x6f, 0x02, 0x1f, 0x0c, 0x3c, 0x77, 0x42,
	0x7c, 0x66, 0x71, 0xc7, 0x73, 0x1b, 0xf1, 0x43, 0x9d, 0xfa, 0x1e, 0xf7, 0xd0, 0x4e, 0x8f, 0x12,
	0xb7, 0xd3, 0xed, 0x13, 0x7f, 0x42, 0xfc, 0x7a, 0xfc, 0x82, 0xf1, 0xf7, 0x12, 0x94, 0x9a, 0x31,
	0x00, 0x55, 0xa1, 0xe8, 0xfd, 0xec, 0x12, 0xff, 0x86, 0x11, 0xbf, 0xd3, 0xc2, 0x5a, 0x55, 0xab,
	0x15, 0xcc, 0x38, 0x84, 0x3e, 0x82, 0xb5, 0xb8, 0x8b, 0x4e, 0x0b, 0xe7, 0xc4, 0xa5, 0x39, 0x14,
	0xed, 0x01, 0xf8, 0x64, 0x30, 0xe9, 0xb2, 0xbb, 0x1e, 0xe5, 0x38, 0x5f, 0xd5, 0x6a, 0x6f, 0xcc,
	0x18, 0x82, 0xf6, 0xa1, 0x12, 0xb7, 0xb8, 0x7e, 0xa0, 0x04, 0x2f, 0x89, 0x5b, 0x0a, 0x8e, 0xb6,
	0x60, 0x39, 0x88, 0x08, 0xbd, 0x11, 0xb1, 0xa6, 0x27, 0x84, 0x61, 0xe5, 0xce, 0xf7, 0x02, 0xda,
	0x69, 0xe1, 0x65, 0xf1, 0xe1, 0xf1, 0x18, 0xe6, 0x11, 0xb8, 0x3e, 0xb1, 0xec, 0xa6, 0x17, 0xb8,
	0x1c, 0xaf, 0x08, 0xc7, 0x71, 0x08, 0x7d, 0x08, 0x65, 0xdb, 0xb7, 0x86, 0xfc, 0x9a, 0xdc, 0xf3,
	0x6b, 0xe7, 0x47, 0x82, 0x57, 0xab, 0x5a, 0x2d, 0x6f, 0xca, 0x20, 0xd2, 0x61, 0xd5, 0x61, 0x57,
	0x8e, 0xeb, 0x12, 0x1b, 0x17, 0xaa, 0x5a, 0x6d, 0xd5, 0x9c, 0x9d, 0x91, 0x01, 0x25, 0x8b, 0x73,
	0x6b, 0x30, 0x22, 0x76, 0xc7, 0x1d, 0x7a, 0x18, 0x04, 0x05, 0x09, 0x0b, 0xa3, 0x38, 0xec, 0xca,
	0x77, 0x26, 0x16, 0x27, 0xcd, 0x91, 0xc5, 0x71, 0x51, 0x38, 0x91, 0xc1, 0x90, 0xad, 0x20, 0x7e,
	0xc6, 0x45, 0x19, 0x4a, 0x11, 0xdb, 0x18, 0x14, 0xc6, 0x72, 0xd8, 0xa5, 0xc7, 0x3b, 0x6e, 0x3b,
	0x44, 0x71, 0x59, 0xb8, 0x91, 0x30, 0xb4, 0x06, 0x39, 0x72, 0x8f, 0xd7, 0x04, 0x8b, 0x1c, 0xb9,
	0x47, 0xc7, 0xb0, 0x19, 0x50, 0xdb, 0xe2, 0xe4, 0xe6, 0x29, 0x6d, 0x91, 0xe9, 0xba, 0xc8, 0x34,
	0xf9, 0x63, 0x18, 0xe9, 0x36, 0xf0, 0xdd, 0x56, 0xe0, 0x8b, 0xfa, 0xe3, 0x8a, 0x20, 0x23, 0x61,
	0xc6, 0x9f, 0x1a, 0xe8, 0x5d, 0xcf, 0x76, 0x86, 0x0f, 0xf1, 0xe1, 0xb9, 0x70, 0xc8, 0xd8, 0x36,
	0xc9, 0x4f, 0xe8, 0x6b, 0x28, 0xc5, 0x5b, 0x28, 0xa6, 0xa8, 0x78, 0xf8, 0x71, 0x3d, 0x75, 0x0e,
	0xeb, 0x71, 0x37, 0xa6, 0x64, 0x8c, 0xde, 0x87, 0xc2, 0x30, 0x74, 0x2c, 0x2a, 0x93, 0x13, 0x64,
	0x9e, 0x80, 0x70, 0xca, 0xa2, 0x59, 0xf8, 0xc6, 0x61, 0xe1, 0x94, 0xe5, 0x6b, 0x05, 0x33, 0x86,
	0x18, 0xbb, 0xf0, 0x5e, 0x2a, 0x51, 0x46, 0x8d, 0xdf, 0x35, 0x40, 0x7d, 0xc2, 0xa5, 0xf0, 0x51,
	0x02, 0xcd, 0xd7, 0x24, 0x20, 0x49, 0x6a, 0x1f, 0x2a, 0xae, 0xc7, 0x9d, 0xa1, 0x33, 0x78, 0x1a,
	0xf4, 0x28, 0x0f, 0x05, 0x37, 0x36, 0x61, 0x43, 0xa1, 0xc3, 0xa8, 0xf1, 0x97, 0x06, 0x95, 0x3e,
	0xe1, 0xe6, 0x4c, 0x3d, 0x21, 0xc9, 0x2a, 0x14, 0x7b, 0xaa, 0x54, 0x7b, 0xb2, 0x54, 0x9b, 0x89,
	0x52, 0x6d, 0x2a, 0x52, 0x35, 0x15, 0xa9, 0x9a, 0x92, 0x54, 0x95, 0x0c, 0x96, 0x52, 0x32, 0xd8,
	0x80, 0x77, 0xe6, 0x98, 0x32, 0x6a, 0x7c, 0x07, 0xa8, 0xad, 0x56, 0x59, 0xa5, 0xa7, 0x25, 0xd2,
	0x9b, 0x4b, 0x34, 0xa7, 0x24, 0x6a, 0xdc, 0xc2, 0x46, 0x5b, 0x2d, 0x9b, 0xd2, 0xc6, 0xdc, 0x2b,
	0xda, 0x68, 0x58, 0x4a, 0x0c, 0xf6, 0xbc, 0x2e, 0xd4, 0x60, 0x5d, 0x4e, 0x88, 0xe1, 0x9c, 0x98,
	0xd3, 0x79, 0xd8, 0x20, 0xf0, 0xae, 0x1a, 0x82, 0x51, 0xd4, 0x85, 0xb2, 0x04, 0x0a, 0xfb, 0x0c,
	0x89, 0xc8, 0xd6, 0xc6, 0x29, 0x6c, 0xb5, 0x09, 0x3f, 0x1b, 0x8f, 0xb3, 0x27, 0x63, 0x8c, 0x60,
	0x3b, 0xd1, 0xf6, 0xed, 0xb3, 0xfc, 0x47, 0x03, 0x7c, 0x6e, 0xf1, 0xc1, 0xa8, 0x9f, 0x50, 0x75,
	0x25, 0x96, 0xf6, 0x9a, 0x58, 0xff, 0x3f, 0x61, 0x89, 0x12, 0xc8, 0xa7, 0x48, 0xa0, 0x0b, 0x3b,
	0x29, 0xc4, 0x19, 0x0d, 0x57, 0x56, 0x3f, 0x18, 0x0c, 0x08, 0x8b, 0x38, 0x17, 0xcc, 0xc7, 0x63,
	0xb8, 0xe4, 0x2e, 0x2c, 0x67, 0x4c, 0xec, 0xe9, 0x78, 0x4c, 0x4f, 0xc6, 0x09, 0xec, 0xb6, 0x67,
	0x8a, 0xba, 0xf4, 0xf8, 0x65, 0x18, 0xef, 0x21, 0xe2, 0x25, 0x8a, 0x11, 0xdb, 0x82, 0x9a, 0xb4,
	0x05, 0x8d, 0x53, 0xd8, 0x5b, 0x64, 0x1a, 0xd1, 0x89, 0x5e, 0xcb, 0x19, 0x9d, 0xe9, 0xf1, 0xf0,
	0xdf, 0x15, 0xf9, 0x15, 0x47, 0xbf, 0x69, 0xb0, 0x9d, 0xf2, 0x96, 0xa2, 0xcf, 0x17, 0x14, 0x3e,
	0x7d, 0x51, 0xe8, 0x5f, 0xbc, 0xc4, 0x8c, 0x51, 0x44, 0x61, 0x7d, 0x4e, 0x28, 0xe8, 0xd3, 0x05,
	0xae, 0xd4, 0xb7, 0x47, 0xaf, 0x67, 0xb9, 0xce, 0x28, 0xfa, 0x45, 0xa8, 0x7f, 0x7e, 0xee, 0xd1,
	0x67, 0x8b, 0xdd, 0x24, 0x68, 0x4c, 0x3f, 0xcc, 0x6a, 0xc2, 0x28, 0x62, 0x50, 0x99, 0x7f, 0x18,
	0x50, 0x86, 0x0c, 0x44, 0xdc, 0x46, 0xa6, 0xfb, 0x8c, 0xa2, 0x5f, 0x35, 0xd8, 0x4c, 0x9c, 0x63,
	0x74, 0xb4, 0xc0, 0x55, 0x9a, 0x64, 0xf5, 0xe3, 0xec, 0x46, 0x51, 0xa7, 0xfb, 0x19, 0x3a, 0xdd,
	0xcf, 0xd6, 0xe9, 0x84, 0x5d, 0x8b, 0xbe, 0x87, 0xb2, 0xb4, 0xc0, 0xd0, 0x27, 0x8b, 0x1d, 0x48,
	0x4b, 0x59, 0x3f, 0x78, 0xfe, 0x65, 0x46, 0xd1, 0x1f, 0x1a, 0xe8, 0xe9, 0x02, 0x45, 0x5f, 0x2e,
	0x6e, 0x59, 0xfa, 0x93, 0xa0, 0x9f, 0xbc, 0xd0, 0x92, 0xd1, 0xf3, 0x83, 0x6f, 0xf7, 0x23, 0xdb,
	0x06, 0xfd, 0xe1, 0xae, 0x21, 0xfe, 0x20, 0xa4, 0x9f, 0x8a, 0xaf, 0xe2, 0x87, 0xdb, 0x65, 0x71,
	0xe1, 0xe8, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2b, 0xd1, 0xfb, 0x68, 0x85, 0x0c, 0x00, 0x00,
}
