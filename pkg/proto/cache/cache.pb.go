// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cache/cache.proto

package cache // import "Open_IM/pkg/proto/cache"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import sdk_ws "Open_IM/pkg/proto/sdk_ws"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetFriendIDListFromCacheReq struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	OperationID          string   `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFriendIDListFromCacheReq) Reset()         { *m = GetFriendIDListFromCacheReq{} }
func (m *GetFriendIDListFromCacheReq) String() string { return proto.CompactTextString(m) }
func (*GetFriendIDListFromCacheReq) ProtoMessage()    {}
func (*GetFriendIDListFromCacheReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_e3bd73ca9c307fc2, []int{0}
}
func (m *GetFriendIDListFromCacheReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFriendIDListFromCacheReq.Unmarshal(m, b)
}
func (m *GetFriendIDListFromCacheReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFriendIDListFromCacheReq.Marshal(b, m, deterministic)
}
func (dst *GetFriendIDListFromCacheReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFriendIDListFromCacheReq.Merge(dst, src)
}
func (m *GetFriendIDListFromCacheReq) XXX_Size() int {
	return xxx_messageInfo_GetFriendIDListFromCacheReq.Size(m)
}
func (m *GetFriendIDListFromCacheReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFriendIDListFromCacheReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetFriendIDListFromCacheReq proto.InternalMessageInfo

func (m *GetFriendIDListFromCacheReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetFriendIDListFromCacheReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type GetFriendIDListFromCacheResp struct {
	UserIDList           []string           `protobuf:"bytes,1,rep,name=userIDList" json:"userIDList,omitempty"`
	CommonResp           *sdk_ws.CommonResp `protobuf:"bytes,2,opt,name=commonResp" json:"commonResp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetFriendIDListFromCacheResp) Reset()         { *m = GetFriendIDListFromCacheResp{} }
func (m *GetFriendIDListFromCacheResp) String() string { return proto.CompactTextString(m) }
func (*GetFriendIDListFromCacheResp) ProtoMessage()    {}
func (*GetFriendIDListFromCacheResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_e3bd73ca9c307fc2, []int{1}
}
func (m *GetFriendIDListFromCacheResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFriendIDListFromCacheResp.Unmarshal(m, b)
}
func (m *GetFriendIDListFromCacheResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFriendIDListFromCacheResp.Marshal(b, m, deterministic)
}
func (dst *GetFriendIDListFromCacheResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFriendIDListFromCacheResp.Merge(dst, src)
}
func (m *GetFriendIDListFromCacheResp) XXX_Size() int {
	return xxx_messageInfo_GetFriendIDListFromCacheResp.Size(m)
}
func (m *GetFriendIDListFromCacheResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFriendIDListFromCacheResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetFriendIDListFromCacheResp proto.InternalMessageInfo

func (m *GetFriendIDListFromCacheResp) GetUserIDList() []string {
	if m != nil {
		return m.UserIDList
	}
	return nil
}

func (m *GetFriendIDListFromCacheResp) GetCommonResp() *sdk_ws.CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

type DelFriendIDListFromCacheReq struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	OperationID          string   `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelFriendIDListFromCacheReq) Reset()         { *m = DelFriendIDListFromCacheReq{} }
func (m *DelFriendIDListFromCacheReq) String() string { return proto.CompactTextString(m) }
func (*DelFriendIDListFromCacheReq) ProtoMessage()    {}
func (*DelFriendIDListFromCacheReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_e3bd73ca9c307fc2, []int{2}
}
func (m *DelFriendIDListFromCacheReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelFriendIDListFromCacheReq.Unmarshal(m, b)
}
func (m *DelFriendIDListFromCacheReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelFriendIDListFromCacheReq.Marshal(b, m, deterministic)
}
func (dst *DelFriendIDListFromCacheReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelFriendIDListFromCacheReq.Merge(dst, src)
}
func (m *DelFriendIDListFromCacheReq) XXX_Size() int {
	return xxx_messageInfo_DelFriendIDListFromCacheReq.Size(m)
}
func (m *DelFriendIDListFromCacheReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DelFriendIDListFromCacheReq.DiscardUnknown(m)
}

var xxx_messageInfo_DelFriendIDListFromCacheReq proto.InternalMessageInfo

func (m *DelFriendIDListFromCacheReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *DelFriendIDListFromCacheReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type DelFriendIDListFromCacheResp struct {
	CommonResp           *sdk_ws.CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DelFriendIDListFromCacheResp) Reset()         { *m = DelFriendIDListFromCacheResp{} }
func (m *DelFriendIDListFromCacheResp) String() string { return proto.CompactTextString(m) }
func (*DelFriendIDListFromCacheResp) ProtoMessage()    {}
func (*DelFriendIDListFromCacheResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_e3bd73ca9c307fc2, []int{3}
}
func (m *DelFriendIDListFromCacheResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelFriendIDListFromCacheResp.Unmarshal(m, b)
}
func (m *DelFriendIDListFromCacheResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelFriendIDListFromCacheResp.Marshal(b, m, deterministic)
}
func (dst *DelFriendIDListFromCacheResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelFriendIDListFromCacheResp.Merge(dst, src)
}
func (m *DelFriendIDListFromCacheResp) XXX_Size() int {
	return xxx_messageInfo_DelFriendIDListFromCacheResp.Size(m)
}
func (m *DelFriendIDListFromCacheResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DelFriendIDListFromCacheResp.DiscardUnknown(m)
}

var xxx_messageInfo_DelFriendIDListFromCacheResp proto.InternalMessageInfo

func (m *DelFriendIDListFromCacheResp) GetCommonResp() *sdk_ws.CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

type GetBlackIDListFromCacheReq struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	OperationID          string   `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlackIDListFromCacheReq) Reset()         { *m = GetBlackIDListFromCacheReq{} }
func (m *GetBlackIDListFromCacheReq) String() string { return proto.CompactTextString(m) }
func (*GetBlackIDListFromCacheReq) ProtoMessage()    {}
func (*GetBlackIDListFromCacheReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_e3bd73ca9c307fc2, []int{4}
}
func (m *GetBlackIDListFromCacheReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlackIDListFromCacheReq.Unmarshal(m, b)
}
func (m *GetBlackIDListFromCacheReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlackIDListFromCacheReq.Marshal(b, m, deterministic)
}
func (dst *GetBlackIDListFromCacheReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlackIDListFromCacheReq.Merge(dst, src)
}
func (m *GetBlackIDListFromCacheReq) XXX_Size() int {
	return xxx_messageInfo_GetBlackIDListFromCacheReq.Size(m)
}
func (m *GetBlackIDListFromCacheReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlackIDListFromCacheReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlackIDListFromCacheReq proto.InternalMessageInfo

func (m *GetBlackIDListFromCacheReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetBlackIDListFromCacheReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type GetBlackIDListFromCacheResp struct {
	UserIDList           []string           `protobuf:"bytes,1,rep,name=userIDList" json:"userIDList,omitempty"`
	CommonResp           *sdk_ws.CommonResp `protobuf:"bytes,2,opt,name=commonResp" json:"commonResp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetBlackIDListFromCacheResp) Reset()         { *m = GetBlackIDListFromCacheResp{} }
func (m *GetBlackIDListFromCacheResp) String() string { return proto.CompactTextString(m) }
func (*GetBlackIDListFromCacheResp) ProtoMessage()    {}
func (*GetBlackIDListFromCacheResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_e3bd73ca9c307fc2, []int{5}
}
func (m *GetBlackIDListFromCacheResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlackIDListFromCacheResp.Unmarshal(m, b)
}
func (m *GetBlackIDListFromCacheResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlackIDListFromCacheResp.Marshal(b, m, deterministic)
}
func (dst *GetBlackIDListFromCacheResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlackIDListFromCacheResp.Merge(dst, src)
}
func (m *GetBlackIDListFromCacheResp) XXX_Size() int {
	return xxx_messageInfo_GetBlackIDListFromCacheResp.Size(m)
}
func (m *GetBlackIDListFromCacheResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlackIDListFromCacheResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlackIDListFromCacheResp proto.InternalMessageInfo

func (m *GetBlackIDListFromCacheResp) GetUserIDList() []string {
	if m != nil {
		return m.UserIDList
	}
	return nil
}

func (m *GetBlackIDListFromCacheResp) GetCommonResp() *sdk_ws.CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

type DelBlackIDListFromCacheReq struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	OperationID          string   `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelBlackIDListFromCacheReq) Reset()         { *m = DelBlackIDListFromCacheReq{} }
func (m *DelBlackIDListFromCacheReq) String() string { return proto.CompactTextString(m) }
func (*DelBlackIDListFromCacheReq) ProtoMessage()    {}
func (*DelBlackIDListFromCacheReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_e3bd73ca9c307fc2, []int{6}
}
func (m *DelBlackIDListFromCacheReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelBlackIDListFromCacheReq.Unmarshal(m, b)
}
func (m *DelBlackIDListFromCacheReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelBlackIDListFromCacheReq.Marshal(b, m, deterministic)
}
func (dst *DelBlackIDListFromCacheReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelBlackIDListFromCacheReq.Merge(dst, src)
}
func (m *DelBlackIDListFromCacheReq) XXX_Size() int {
	return xxx_messageInfo_DelBlackIDListFromCacheReq.Size(m)
}
func (m *DelBlackIDListFromCacheReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DelBlackIDListFromCacheReq.DiscardUnknown(m)
}

var xxx_messageInfo_DelBlackIDListFromCacheReq proto.InternalMessageInfo

func (m *DelBlackIDListFromCacheReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *DelBlackIDListFromCacheReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type DelBlackIDListFromCacheResp struct {
	CommonResp           *sdk_ws.CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DelBlackIDListFromCacheResp) Reset()         { *m = DelBlackIDListFromCacheResp{} }
func (m *DelBlackIDListFromCacheResp) String() string { return proto.CompactTextString(m) }
func (*DelBlackIDListFromCacheResp) ProtoMessage()    {}
func (*DelBlackIDListFromCacheResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_e3bd73ca9c307fc2, []int{7}
}
func (m *DelBlackIDListFromCacheResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelBlackIDListFromCacheResp.Unmarshal(m, b)
}
func (m *DelBlackIDListFromCacheResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelBlackIDListFromCacheResp.Marshal(b, m, deterministic)
}
func (dst *DelBlackIDListFromCacheResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelBlackIDListFromCacheResp.Merge(dst, src)
}
func (m *DelBlackIDListFromCacheResp) XXX_Size() int {
	return xxx_messageInfo_DelBlackIDListFromCacheResp.Size(m)
}
func (m *DelBlackIDListFromCacheResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DelBlackIDListFromCacheResp.DiscardUnknown(m)
}

var xxx_messageInfo_DelBlackIDListFromCacheResp proto.InternalMessageInfo

func (m *DelBlackIDListFromCacheResp) GetCommonResp() *sdk_ws.CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

type GetGroupMemberIDListFromCacheReq struct {
	OperationID          string   `protobuf:"bytes,1,opt,name=operationID" json:"operationID,omitempty"`
	GroupID              string   `protobuf:"bytes,2,opt,name=groupID" json:"groupID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGroupMemberIDListFromCacheReq) Reset()         { *m = GetGroupMemberIDListFromCacheReq{} }
func (m *GetGroupMemberIDListFromCacheReq) String() string { return proto.CompactTextString(m) }
func (*GetGroupMemberIDListFromCacheReq) ProtoMessage()    {}
func (*GetGroupMemberIDListFromCacheReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_e3bd73ca9c307fc2, []int{8}
}
func (m *GetGroupMemberIDListFromCacheReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGroupMemberIDListFromCacheReq.Unmarshal(m, b)
}
func (m *GetGroupMemberIDListFromCacheReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGroupMemberIDListFromCacheReq.Marshal(b, m, deterministic)
}
func (dst *GetGroupMemberIDListFromCacheReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGroupMemberIDListFromCacheReq.Merge(dst, src)
}
func (m *GetGroupMemberIDListFromCacheReq) XXX_Size() int {
	return xxx_messageInfo_GetGroupMemberIDListFromCacheReq.Size(m)
}
func (m *GetGroupMemberIDListFromCacheReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGroupMemberIDListFromCacheReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetGroupMemberIDListFromCacheReq proto.InternalMessageInfo

func (m *GetGroupMemberIDListFromCacheReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *GetGroupMemberIDListFromCacheReq) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

type GetGroupMemberIDListFromCacheResp struct {
	CommonResp           *sdk_ws.CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
	UserIDList           []string           `protobuf:"bytes,2,rep,name=userIDList" json:"userIDList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetGroupMemberIDListFromCacheResp) Reset()         { *m = GetGroupMemberIDListFromCacheResp{} }
func (m *GetGroupMemberIDListFromCacheResp) String() string { return proto.CompactTextString(m) }
func (*GetGroupMemberIDListFromCacheResp) ProtoMessage()    {}
func (*GetGroupMemberIDListFromCacheResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_e3bd73ca9c307fc2, []int{9}
}
func (m *GetGroupMemberIDListFromCacheResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGroupMemberIDListFromCacheResp.Unmarshal(m, b)
}
func (m *GetGroupMemberIDListFromCacheResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGroupMemberIDListFromCacheResp.Marshal(b, m, deterministic)
}
func (dst *GetGroupMemberIDListFromCacheResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGroupMemberIDListFromCacheResp.Merge(dst, src)
}
func (m *GetGroupMemberIDListFromCacheResp) XXX_Size() int {
	return xxx_messageInfo_GetGroupMemberIDListFromCacheResp.Size(m)
}
func (m *GetGroupMemberIDListFromCacheResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGroupMemberIDListFromCacheResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetGroupMemberIDListFromCacheResp proto.InternalMessageInfo

func (m *GetGroupMemberIDListFromCacheResp) GetCommonResp() *sdk_ws.CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

func (m *GetGroupMemberIDListFromCacheResp) GetUserIDList() []string {
	if m != nil {
		return m.UserIDList
	}
	return nil
}

type DelGroupMemberIDListFromCacheReq struct {
	GroupID              string   `protobuf:"bytes,1,opt,name=groupID" json:"groupID,omitempty"`
	OperationID          string   `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelGroupMemberIDListFromCacheReq) Reset()         { *m = DelGroupMemberIDListFromCacheReq{} }
func (m *DelGroupMemberIDListFromCacheReq) String() string { return proto.CompactTextString(m) }
func (*DelGroupMemberIDListFromCacheReq) ProtoMessage()    {}
func (*DelGroupMemberIDListFromCacheReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_e3bd73ca9c307fc2, []int{10}
}
func (m *DelGroupMemberIDListFromCacheReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelGroupMemberIDListFromCacheReq.Unmarshal(m, b)
}
func (m *DelGroupMemberIDListFromCacheReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelGroupMemberIDListFromCacheReq.Marshal(b, m, deterministic)
}
func (dst *DelGroupMemberIDListFromCacheReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelGroupMemberIDListFromCacheReq.Merge(dst, src)
}
func (m *DelGroupMemberIDListFromCacheReq) XXX_Size() int {
	return xxx_messageInfo_DelGroupMemberIDListFromCacheReq.Size(m)
}
func (m *DelGroupMemberIDListFromCacheReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DelGroupMemberIDListFromCacheReq.DiscardUnknown(m)
}

var xxx_messageInfo_DelGroupMemberIDListFromCacheReq proto.InternalMessageInfo

func (m *DelGroupMemberIDListFromCacheReq) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *DelGroupMemberIDListFromCacheReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type DelGroupMemberIDListFromCacheResp struct {
	CommonResp           *sdk_ws.CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DelGroupMemberIDListFromCacheResp) Reset()         { *m = DelGroupMemberIDListFromCacheResp{} }
func (m *DelGroupMemberIDListFromCacheResp) String() string { return proto.CompactTextString(m) }
func (*DelGroupMemberIDListFromCacheResp) ProtoMessage()    {}
func (*DelGroupMemberIDListFromCacheResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_e3bd73ca9c307fc2, []int{11}
}
func (m *DelGroupMemberIDListFromCacheResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelGroupMemberIDListFromCacheResp.Unmarshal(m, b)
}
func (m *DelGroupMemberIDListFromCacheResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelGroupMemberIDListFromCacheResp.Marshal(b, m, deterministic)
}
func (dst *DelGroupMemberIDListFromCacheResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelGroupMemberIDListFromCacheResp.Merge(dst, src)
}
func (m *DelGroupMemberIDListFromCacheResp) XXX_Size() int {
	return xxx_messageInfo_DelGroupMemberIDListFromCacheResp.Size(m)
}
func (m *DelGroupMemberIDListFromCacheResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DelGroupMemberIDListFromCacheResp.DiscardUnknown(m)
}

var xxx_messageInfo_DelGroupMemberIDListFromCacheResp proto.InternalMessageInfo

func (m *DelGroupMemberIDListFromCacheResp) GetCommonResp() *sdk_ws.CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

func init() {
	proto.RegisterType((*GetFriendIDListFromCacheReq)(nil), "cache.GetFriendIDListFromCacheReq")
	proto.RegisterType((*GetFriendIDListFromCacheResp)(nil), "cache.GetFriendIDListFromCacheResp")
	proto.RegisterType((*DelFriendIDListFromCacheReq)(nil), "cache.DelFriendIDListFromCacheReq")
	proto.RegisterType((*DelFriendIDListFromCacheResp)(nil), "cache.DelFriendIDListFromCacheResp")
	proto.RegisterType((*GetBlackIDListFromCacheReq)(nil), "cache.GetBlackIDListFromCacheReq")
	proto.RegisterType((*GetBlackIDListFromCacheResp)(nil), "cache.GetBlackIDListFromCacheResp")
	proto.RegisterType((*DelBlackIDListFromCacheReq)(nil), "cache.DelBlackIDListFromCacheReq")
	proto.RegisterType((*DelBlackIDListFromCacheResp)(nil), "cache.DelBlackIDListFromCacheResp")
	proto.RegisterType((*GetGroupMemberIDListFromCacheReq)(nil), "cache.GetGroupMemberIDListFromCacheReq")
	proto.RegisterType((*GetGroupMemberIDListFromCacheResp)(nil), "cache.GetGroupMemberIDListFromCacheResp")
	proto.RegisterType((*DelGroupMemberIDListFromCacheReq)(nil), "cache.DelGroupMemberIDListFromCacheReq")
	proto.RegisterType((*DelGroupMemberIDListFromCacheResp)(nil), "cache.DelGroupMemberIDListFromCacheResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Cache service

type CacheClient interface {
	// friendInfo
	GetFriendIDListFromCache(ctx context.Context, in *GetFriendIDListFromCacheReq, opts ...grpc.CallOption) (*GetFriendIDListFromCacheResp, error)
	// for dtm
	DelFriendIDListFromCache(ctx context.Context, in *DelFriendIDListFromCacheReq, opts ...grpc.CallOption) (*DelFriendIDListFromCacheResp, error)
	// blackList
	GetBlackIDListFromCache(ctx context.Context, in *GetBlackIDListFromCacheReq, opts ...grpc.CallOption) (*GetBlackIDListFromCacheResp, error)
	// for dtm
	DelBlackIDListFromCache(ctx context.Context, in *DelBlackIDListFromCacheReq, opts ...grpc.CallOption) (*DelBlackIDListFromCacheResp, error)
	// group
	GetGroupMemberIDListFromCache(ctx context.Context, in *GetGroupMemberIDListFromCacheReq, opts ...grpc.CallOption) (*GetGroupMemberIDListFromCacheResp, error)
	// for dtm
	DelGroupMemberIDListFromCache(ctx context.Context, in *DelGroupMemberIDListFromCacheReq, opts ...grpc.CallOption) (*DelGroupMemberIDListFromCacheResp, error)
}

type cacheClient struct {
	cc *grpc.ClientConn
}

func NewCacheClient(cc *grpc.ClientConn) CacheClient {
	return &cacheClient{cc}
}

func (c *cacheClient) GetFriendIDListFromCache(ctx context.Context, in *GetFriendIDListFromCacheReq, opts ...grpc.CallOption) (*GetFriendIDListFromCacheResp, error) {
	out := new(GetFriendIDListFromCacheResp)
	err := grpc.Invoke(ctx, "/cache.cache/GetFriendIDListFromCache", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheClient) DelFriendIDListFromCache(ctx context.Context, in *DelFriendIDListFromCacheReq, opts ...grpc.CallOption) (*DelFriendIDListFromCacheResp, error) {
	out := new(DelFriendIDListFromCacheResp)
	err := grpc.Invoke(ctx, "/cache.cache/DelFriendIDListFromCache", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheClient) GetBlackIDListFromCache(ctx context.Context, in *GetBlackIDListFromCacheReq, opts ...grpc.CallOption) (*GetBlackIDListFromCacheResp, error) {
	out := new(GetBlackIDListFromCacheResp)
	err := grpc.Invoke(ctx, "/cache.cache/GetBlackIDListFromCache", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheClient) DelBlackIDListFromCache(ctx context.Context, in *DelBlackIDListFromCacheReq, opts ...grpc.CallOption) (*DelBlackIDListFromCacheResp, error) {
	out := new(DelBlackIDListFromCacheResp)
	err := grpc.Invoke(ctx, "/cache.cache/DelBlackIDListFromCache", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheClient) GetGroupMemberIDListFromCache(ctx context.Context, in *GetGroupMemberIDListFromCacheReq, opts ...grpc.CallOption) (*GetGroupMemberIDListFromCacheResp, error) {
	out := new(GetGroupMemberIDListFromCacheResp)
	err := grpc.Invoke(ctx, "/cache.cache/GetGroupMemberIDListFromCache", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheClient) DelGroupMemberIDListFromCache(ctx context.Context, in *DelGroupMemberIDListFromCacheReq, opts ...grpc.CallOption) (*DelGroupMemberIDListFromCacheResp, error) {
	out := new(DelGroupMemberIDListFromCacheResp)
	err := grpc.Invoke(ctx, "/cache.cache/DelGroupMemberIDListFromCache", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Cache service

type CacheServer interface {
	// friendInfo
	GetFriendIDListFromCache(context.Context, *GetFriendIDListFromCacheReq) (*GetFriendIDListFromCacheResp, error)
	// for dtm
	DelFriendIDListFromCache(context.Context, *DelFriendIDListFromCacheReq) (*DelFriendIDListFromCacheResp, error)
	// blackList
	GetBlackIDListFromCache(context.Context, *GetBlackIDListFromCacheReq) (*GetBlackIDListFromCacheResp, error)
	// for dtm
	DelBlackIDListFromCache(context.Context, *DelBlackIDListFromCacheReq) (*DelBlackIDListFromCacheResp, error)
	// group
	GetGroupMemberIDListFromCache(context.Context, *GetGroupMemberIDListFromCacheReq) (*GetGroupMemberIDListFromCacheResp, error)
	// for dtm
	DelGroupMemberIDListFromCache(context.Context, *DelGroupMemberIDListFromCacheReq) (*DelGroupMemberIDListFromCacheResp, error)
}

func RegisterCacheServer(s *grpc.Server, srv CacheServer) {
	s.RegisterService(&_Cache_serviceDesc, srv)
}

func _Cache_GetFriendIDListFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFriendIDListFromCacheReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).GetFriendIDListFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cache.cache/GetFriendIDListFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).GetFriendIDListFromCache(ctx, req.(*GetFriendIDListFromCacheReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cache_DelFriendIDListFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelFriendIDListFromCacheReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).DelFriendIDListFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cache.cache/DelFriendIDListFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).DelFriendIDListFromCache(ctx, req.(*DelFriendIDListFromCacheReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cache_GetBlackIDListFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlackIDListFromCacheReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).GetBlackIDListFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cache.cache/GetBlackIDListFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).GetBlackIDListFromCache(ctx, req.(*GetBlackIDListFromCacheReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cache_DelBlackIDListFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelBlackIDListFromCacheReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).DelBlackIDListFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cache.cache/DelBlackIDListFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).DelBlackIDListFromCache(ctx, req.(*DelBlackIDListFromCacheReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cache_GetGroupMemberIDListFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGroupMemberIDListFromCacheReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).GetGroupMemberIDListFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cache.cache/GetGroupMemberIDListFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).GetGroupMemberIDListFromCache(ctx, req.(*GetGroupMemberIDListFromCacheReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cache_DelGroupMemberIDListFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelGroupMemberIDListFromCacheReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).DelGroupMemberIDListFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cache.cache/DelGroupMemberIDListFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).DelGroupMemberIDListFromCache(ctx, req.(*DelGroupMemberIDListFromCacheReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cache_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cache.cache",
	HandlerType: (*CacheServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFriendIDListFromCache",
			Handler:    _Cache_GetFriendIDListFromCache_Handler,
		},
		{
			MethodName: "DelFriendIDListFromCache",
			Handler:    _Cache_DelFriendIDListFromCache_Handler,
		},
		{
			MethodName: "GetBlackIDListFromCache",
			Handler:    _Cache_GetBlackIDListFromCache_Handler,
		},
		{
			MethodName: "DelBlackIDListFromCache",
			Handler:    _Cache_DelBlackIDListFromCache_Handler,
		},
		{
			MethodName: "GetGroupMemberIDListFromCache",
			Handler:    _Cache_GetGroupMemberIDListFromCache_Handler,
		},
		{
			MethodName: "DelGroupMemberIDListFromCache",
			Handler:    _Cache_DelGroupMemberIDListFromCache_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cache/cache.proto",
}

func init() { proto.RegisterFile("cache/cache.proto", fileDescriptor_cache_e3bd73ca9c307fc2) }

var fileDescriptor_cache_e3bd73ca9c307fc2 = []byte{
	// 466 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x41, 0x8f, 0x93, 0x40,
	0x14, 0x0e, 0xab, 0xae, 0xd9, 0xb7, 0x27, 0xe7, 0xa0, 0x04, 0xb7, 0x4a, 0xf1, 0x20, 0x97, 0x85,
	0x64, 0x3d, 0x1a, 0x2f, 0x5b, 0x52, 0x42, 0x62, 0x63, 0x82, 0x49, 0x4d, 0x8c, 0x8a, 0x94, 0x4e,
	0x2a, 0x29, 0x30, 0xe3, 0x0c, 0xb5, 0x17, 0xbd, 0xf8, 0xbf, 0x4d, 0xcc, 0x0c, 0x96, 0x52, 0x74,
	0xa0, 0xa6, 0xed, 0x85, 0x64, 0x66, 0xde, 0xbc, 0xef, 0xfb, 0x78, 0xef, 0x7d, 0x03, 0x0f, 0x92,
	0x38, 0xf9, 0x82, 0x5d, 0xf9, 0x75, 0x28, 0x23, 0x25, 0x41, 0xf7, 0xe4, 0xc2, 0xb0, 0xdf, 0x50,
	0x5c, 0x5c, 0x07, 0x93, 0xeb, 0xb7, 0x98, 0x7d, 0xc3, 0xcc, 0xa5, 0xcb, 0x85, 0x2b, 0x03, 0x5c,
	0x3e, 0x5f, 0x46, 0x6b, 0xee, 0xae, 0x79, 0x75, 0xc1, 0x7a, 0x07, 0x8f, 0x7d, 0x5c, 0x8e, 0x59,
	0x8a, 0x8b, 0x79, 0xe0, 0xbd, 0x4e, 0x79, 0x39, 0x66, 0x24, 0x1f, 0x89, 0x2c, 0x21, 0xfe, 0x8a,
	0x1e, 0xc2, 0xf9, 0x8a, 0x63, 0x16, 0x78, 0xba, 0x66, 0x6a, 0xf6, 0x45, 0xf8, 0x67, 0x85, 0x4c,
	0xb8, 0x24, 0x14, 0xb3, 0xb8, 0x4c, 0x49, 0x11, 0x78, 0xfa, 0x99, 0x3c, 0x6c, 0x6e, 0x59, 0x3f,
	0xe0, 0x4a, 0x9d, 0x98, 0x53, 0xf4, 0x04, 0xa0, 0xca, 0x25, 0x8e, 0x74, 0xcd, 0xbc, 0x63, 0x5f,
	0x84, 0x8d, 0x1d, 0xf4, 0x0a, 0x20, 0x21, 0x79, 0x4e, 0x0a, 0x11, 0x2d, 0x01, 0x2e, 0x6f, 0x06,
	0x0e, 0x97, 0x7a, 0xa2, 0x98, 0xa6, 0x11, 0x8d, 0x59, 0x9c, 0x73, 0x67, 0x54, 0x07, 0x85, 0x8d,
	0x0b, 0x42, 0x97, 0x87, 0xb3, 0x13, 0xe8, 0xfa, 0x08, 0x57, 0xea, 0xc4, 0x9c, 0xb6, 0x78, 0x6b,
	0xff, 0xcb, 0x7b, 0x0a, 0x86, 0x8f, 0xcb, 0xdb, 0x2c, 0x4e, 0x96, 0x47, 0xa5, 0xfd, 0x5d, 0xd6,
	0xf9, 0xdf, 0x79, 0x4f, 0x5f, 0x8d, 0x29, 0x18, 0x1e, 0xce, 0x8e, 0xaf, 0xea, 0x83, 0xac, 0xb2,
	0x52, 0xd5, 0x81, 0xb5, 0xf8, 0x04, 0xa6, 0x8f, 0x4b, 0x9f, 0x91, 0x15, 0x9d, 0xe0, 0x7c, 0xb6,
	0xf9, 0x19, 0x3b, 0xdc, 0x5b, 0x1c, 0xb5, 0xbf, 0x38, 0x22, 0x1d, 0xee, 0x2f, 0x44, 0x8a, 0x5a,
	0xc1, 0x66, 0x69, 0xfd, 0xd4, 0x60, 0xd8, 0x03, 0x70, 0xb0, 0x88, 0x56, 0x65, 0xcf, 0xda, 0x95,
	0x15, 0x22, 0x3d, 0x9c, 0x75, 0x8b, 0x6c, 0x48, 0xd0, 0x76, 0x24, 0xec, 0x51, 0xa2, 0x19, 0x0c,
	0x7b, 0xf2, 0x1f, 0xac, 0xf1, 0xe6, 0xd7, 0x5d, 0xa8, 0x8c, 0x0f, 0x25, 0xa0, 0xab, 0x5c, 0x07,
	0x59, 0x4e, 0xe5, 0x94, 0x1d, 0x7e, 0x67, 0x3c, 0xeb, 0x8d, 0xe1, 0x54, 0x80, 0xa8, 0x2c, 0xa0,
	0x06, 0xe9, 0x30, 0x9f, 0x1a, 0xa4, 0xd3, 0x47, 0x3e, 0xc3, 0x23, 0xc5, 0xc0, 0xa2, 0xe1, 0x96,
	0xa4, 0x62, 0xa4, 0x0c, 0xab, 0x2f, 0xa4, 0x42, 0x50, 0x0c, 0x4f, 0x8d, 0xa0, 0x1e, 0x5a, 0xc3,
	0xea, 0x0b, 0xe1, 0x14, 0x31, 0x18, 0x74, 0xf6, 0x37, 0x7a, 0xbe, 0xa5, 0xd9, 0xd9, 0x81, 0x86,
	0xbd, 0x5f, 0x60, 0x85, 0xd9, 0xd9, 0x6f, 0x35, 0x66, 0x5f, 0xd7, 0xd7, 0x98, 0xbd, 0xed, 0x7b,
	0xfb, 0xf4, 0xfd, 0x40, 0x3c, 0xb8, 0x51, 0x30, 0x69, 0xbc, 0xb4, 0xf2, 0xf2, 0x4b, 0xf9, 0x9d,
	0x9d, 0xcb, 0xad, 0x17, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xff, 0xcd, 0x0e, 0x4c, 0xb2, 0x07,
	0x00, 0x00,
}
